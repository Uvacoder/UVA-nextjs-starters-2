[{"name":"active-class-name","title":"activeClassName example","description":"\nReactRouter has a convenience property on the `Link` element to allow an author to set the _active_ className on a link. This example replicates that functionality using Next's own `Link`.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/active-class-name&project-name=active-class-name&repository-name=active-class-name)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example active-class-name active-class-name-app\n# or\nyarn create next-app --example active-class-name active-class-name-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",4],["Timer",4],["chibicode",3],["lfades",3],["brentmclark",2],["jthegedus",2],["HaNdTriX",2],["remy",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["mgrubinger",1],["ijjk",1],["tanmaylaud",1],["AubreyHewes",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"amp","title":"Google AMP","description":"\nThis example shows how to create AMP pages using Next.js and the AMP feature. It shows a normal page (non-AMP), an AMP only page, and a hybrid AMP page.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/amp&project-name=amp&repository-name=amp)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example amp amp-app\n# or\nyarn create next-app --example amp amp-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["ijjk",5],["chibicode",3],["lfades",3],["dav-is",1],["mcsdevv",1],["luciovilla",1],["timneutkens",1],["taylorbryant",1],["tanmaylaud",1],["Necmttn",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"amp-first","title":"AMP First Boilerplate ⚡","description":"\nThis example sets up the boilerplate for an AMP First Site. You can see a live version [here](https://my-next-app.sebastianbenz.vercel.app). The boilerplate includes the following features:\n\n- AMP Extension helpers (`amp-state`, `amp-script`, ...)\n- AMP Serviceworker integration\n- App manifest\n- Offline page\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/amp-first&project-name=amp-first&repository-name=amp-first)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example amp-first amp-first-app\n# or\nyarn create next-app --example amp-first amp-first-app\n```\n\nOpen [http://localhost:3000](http://localhost:3000) to view it in the browser. The page will reload if you make edits. You will also see AMP validation errors in the console.\n\n## Todo\n\nThings you need to do after installing the boilerplate:\n\n1. Update your app manifest in [`public/manifest.json`](public/manifest.json) with your app-specific data (`theme_color`, `background_color`, `name`, `short_name`).\n2. Update the `THEME_COLOR` variable defined in [`components/Layout.js`](components/Layout.js).\n3. Update favicon and icons in [`public/favicon.ico`](public/favicon.ico) and [`public/static/images/icons-*.png`](public/static/images).\n4. Set the default language in [`pages/_document.js`](pages/_document.js).\n5. Review the AMP Serviceworker implementation in [`public/serviceworker.js`](public/serviceworker.js).\n\n## Tips & Tricks\n\n- **Using AMP Components:** you can import AMP components using `next/head`. Checkout `components/amp/AmpCustomElement` for a simple way to import AMP components. Once the component is imported, you can use it like any other HTML element.\n- **amp-bind & amp-state:** it's no problem to use `amp-bind` and `amp-state` with Next.js. There are two things to be aware of:\n\n  1.  The `[...]` binding syntax, e.g. `[text]=\"myStateVariable\"`, is not supported in JSX. Use `data-amp-bind-text=\"myStateVariable\"` instead.\n  2.  Initializing `amp-state` via JSON string is not supported in JSX:\n\n      ```html\n      <amp-state id=\"myState\">\n        <script type=\"application/json\">\n          {\n            \"foo\": \"bar\"\n          }\n        </script>\n      </amp-state>\n      ```\n\n      Instead you need to use `dangerouslySetInnerHTML` to initialize the string. can use the [`/components/amp/AmpState.js`](components/amp/AmpState.js) component to see how it works. The same approach works for `amp-access` and `amp-consent` as well:\n\n      ```html\n      <AmpState id=\"message\" value={ message: 'Hello World' }/>\n      ```\n\n- **amp-list & amp-mustache:** mustache templates conflict with JSX and it's template literals need to be escaped. A simple approach is to escape them via back ticks: `` src={`{{imageUrl}}`} ``.\n- **amp-script:** you can use [amp-script](https://amp.dev/documentation/components/amp-script/) to add custom JavaScript to your AMP pages. The boilerplate includes a helper [`components/amp/AmpScript.js`](components/amp/AmpScript.js) to simplify using `amp-script`. The helper also supports embedding inline scripts. Good to know: Next.js uses [AMP Optimizer](https://github.com/ampproject/amp-toolbox/tree/master/packages/optimizer) under the hood, which automatically adds the needed script hashes for [inline amp-scripts](https://amp.dev/documentation/components/amp-script/#load-javascript-from-a-local-element).\n\n## Deployment\n\nFor production builds, you need to run (the app will be build into the `.next` folder):\n\n```shell\n$ yarn build\n```\n\nTo start the application in production mode, run:\n\n```shell\n$ yarn start\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",4],["sebastianbenz",3],["chibicode",3],["lfades",2],["ragingwind",1],["timneutkens",1],["todortotev",1],["ijjk",1],["stefanprobst",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["rdimaio",1],["lucleray",1],["leerob",1]]},{"name":"amp-story","title":"Google AMP Story","description":"\nThis example shows how to create an AMP page with `amp-story` using Next.js and the AMP feature.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/amp-story&project-name=amp-story&repository-name=amp-story)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example amp-story amp-story-app\n# or\nyarn create next-app --example amp-story amp-story-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["chibicode",3],["lfades",3],["ijjk",2],["timneutkens",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["caaatisgood",1]]},{"name":"analyze-bundles","title":"Analyzer Bundles example","description":"\nThis example shows how to analyze the output bundles using [@next/bundle-analyzer](https://github.com/vercel/next.js/tree/master/packages/next-bundle-analyzer)\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/analyze-bundles&project-name=analyze-bundles&repository-name=analyze-bundles)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example analyze-bundles analyze-bundles-app\n# or\nyarn create next-app --example analyze-bundles analyze-bundles-app\n```\n\n### Analyze webpack output\n\nTo analyze your webpack output, invoke the following command:\n\n```bash\nnpm run analyze\n# or\nyarn analyze\n```\n","contributors":[["Timer",5],["lfades",3],["chibicode",2],["timneutkens",2],["echoulen",1],["malixsys",1],["j0lv3r4",1],["dav-is",1],["qrg",1],["akhila-ariyachandra",1],["willianjusten",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1]]},{"name":"api-routes","title":"Basic API routes example","description":"\nNext.js ships with [API routes](https://nextjs.org/docs/api-routes/introduction) which provides an easy solution to build your own `API`. This example shows how to create multiple `API` endpoints with serverless functions, which can execute independently.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/api-routes&project-name=api-routes&repository-name=api-routes)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example api-routes api-routes-app\n# or\nyarn create next-app --example api-routes api-routes-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",7],["lfades",5],["chibicode",3],["huv1k",1],["josiahwiebe",1],["TalAter",1],["timneutkens",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"api-routes-apollo-server","title":"Consume local Apollo GraphQL schema to create Static Generation export","description":"\nNext.js ships with two forms of pre-rendering: [Static Generation](https://nextjs.org/docs/basic-features/pages#static-generation-recommended) and [Server-side Rendering](https://nextjs.org/docs/basic-features/pages#server-side-rendering). This example shows how to perform Static Generation using a local [Apollo GraphQL](https://www.apollographql.com/docs/apollo-server/) schema within [getStaticProps](https://nextjs.org/docs/basic-features/data-fetching#getstaticprops-static-generation) and [getStaticPaths](https://nextjs.org/docs/basic-features/data-fetching#getstaticpaths-static-generation). The end result is a Next.js application that uses one Apollo GraphQL schema to generate static pages at build time and also serve a GraphQL [API Route](https://nextjs.org/docs/api-routes/introduction) at runtime.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/api-routes-apollo-server&project-name=api-routes-apollo-server&repository-name=api-routes-apollo-server)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example api-routes-apollo-server api-routes-apollo-server-app\n# or\nyarn create next-app --example api-routes-apollo-server api-routes-apollo-server-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Notes\n\n### Static Export\n\nIf you wish to export a static HTML + JS version of the site you need to first change the setting in this example in `./pages/[username].js` where `getStaticPaths` has `fallback: true` - this needs to be `false` for static export to work. You can then run `npm run build` and `npm run export` to export the site as a static folder in `./out` directory.\n\n[Read more about fallback option](https://nextjs.org/docs/basic-features/data-fetching#the-fallback-key-required)\n","contributors":[["Timer",3],["benjaminpearson",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["lfades",1]]},{"name":"api-routes-apollo-server-and-client","title":"Apollo Server and Client Example","description":"\n[Apollo](https://www.apollographql.com/client/) is a GraphQL client that allows you to easily query the exact data you need from a GraphQL server. In addition to fetching and mutating data, Apollo analyzes your queries and their results to construct a client-side cache of your data, which is kept up to date as further queries and mutations are run.\n\nIn this simple example, we integrate Apollo seamlessly with [Next.js data fetching methods](https://nextjs.org/docs/basic-features/data-fetching) to fetch queries in the server and hydrate them in the browser.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/api-routes-apollo-server-and-client&project-name=api-routes-apollo-server-and-client&repository-name=api-routes-apollo-server-and-client)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example api-routes-apollo-server-and-client api-routes-apollo-server-and-client-app\n# or\nyarn create next-app --example api-routes-apollo-server-and-client api-routes-apollo-server-and-client-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["lfades",5],["chibicode",3],["HaNdTriX",2],["lifeiscontent",1],["none23",1],["timneutkens",1],["ijjk",1],["tanmaylaud",1],["dstotijn",1],["NorbertLuszkiewicz",1],["lucleray",1],["edazpotato",1]]},{"name":"api-routes-apollo-server-and-client-auth","title":"Apollo Server and Client Auth Example","description":"\n[Apollo](https://www.apollographql.com/client/) is a GraphQL client that allows you to easily query the exact data you need from a GraphQL server. In addition to fetching and mutating data, Apollo analyzes your queries and their results to construct a client-side cache of your data, which is kept up to date as further queries and mutations are run.\n\nIn this simple example, we integrate Apollo seamlessly with [Next.js data fetching methods](https://nextjs.org/docs/basic-features/data-fetching) to fetch queries in the server and hydrate them in the browser.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/api-routes-apollo-server-and-client-auth&project-name=api-routes-apollo-server-and-client-auth&repository-name=api-routes-apollo-server-and-client-auth)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) or [npx](https://github.com/zkat/npx#readme) to bootstrap the example:\n\n```bash\nnpx create-next-app --example api-routes-apollo-server-and-client-auth api-routes-apollo-server-and-client-auth-app\n# or\nyarn create next-app --example api-routes-apollo-server-and-client-auth api-routes-apollo-server-and-client-auth-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",4],["lfades",4],["chibicode",2],["lifeiscontent",1],["IvanPaqmind",1],["ivan-kleshnin",1],["timneutkens",1],["willianjusten",1],["ijjk",1],["darshkpatel",1],["tanmaylaud",1],["dstotijn",1],["NorbertLuszkiewicz",1],["nikosantis",1],["lucleray",1]]},{"name":"api-routes-cors","title":"API Routes Example with CORS","description":"\nNext.js ships with [API routes](https://nextjs.org/docs/api-routes/introduction) which provides an easy solution to build your own `API`.\n\nThis example shows how to create an `API` endpoint with [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers, using the [cors](https://github.com/expressjs/cors) package.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/api-routes-cors&project-name=api-routes-cors&repository-name=api-routes-cors)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example api-routes-cors api-routes-cors-app\n# or\nyarn create next-app --example api-routes-cors api-routes-cors-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",4],["lfades",2],["ijjk",1],["tanmaylaud",1],["lucleray",1]]},{"name":"api-routes-graphql","title":"API routes with GraphQL server","description":"\nNext.js ships with [API routes](https://github.com/vercel/next.js#api-routes), which provide an easy solution to build your own `API`. This example shows their usage alongside [apollo-server-micro](https://github.com/apollographql/apollo-server/tree/main/packages/apollo-server-micro) to provide simple GraphQL server consumed by Next.js app.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/api-routes-graphql&project-name=api-routes-graphql&repository-name=api-routes-graphql)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example api-routes-graphql api-routes-graphql-app\n# or\nyarn create next-app --example api-routes-graphql api-routes-graphql-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",7],["lfades",4],["chibicode",3],["huv1k",1],["timneutkens",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"api-routes-middleware","title":"API routes with middleware","description":"\nNext.js ships with [API routes](https://github.com/vercel/next.js#api-routes), which provide an easy solution to build your own `API`. This example shows how to implement simple `middleware` to wrap around your `API` endpoints.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/api-routes-middleware&project-name=api-routes-middleware&repository-name=api-routes-middleware)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example api-routes-middleware api-routes-middleware-app\n# or\nyarn create next-app --example api-routes-middleware api-routes-middleware-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",4],["lfades",4],["chibicode",3],["huv1k",1],["mgranados",1],["timneutkens",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"api-routes-rate-limit","title":"API Routes Rate Limiting Example","description":"\nThis example uses `lru-cache` to implement a simple rate limiter for API routes ([Serverless Functions](https://vercel.com/docs/serverless-functions/introduction)).\n\n**Demo: https://nextjs-rate-limit.vercel.app/**\n\n```bash\ncurl http://localhost:3000/api/user -I\nHTTP/1.1 200 OK\nX-RateLimit-Limit: 10\nX-RateLimit-Remaining: 9\n\ncurl http://localhost:3000/api/user -I\nHTTP/1.1 429 Too Many Requests\nX-RateLimit-Limit: 10\nX-RateLimit-Remaining: 0\n```\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/api-routes-rate-limit&project-name=api-routes-rate-limit&repository-name=api-routes-rate-limit)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example api-routes api-routes-rate-limit\n# or\nyarn create next-app --example api-routes api-routes-rate-limit\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["leerob",1],["lucleray",1],["lfades",1]]},{"name":"api-routes-rest","title":"API routes with REST","description":"\nNext.js ships with [API routes](https://github.com/vercel/next.js#api-routes), which provide an easy solution to build your own `API`. This example shows how it can be used to create your [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) `API`.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/api-routes-rest&project-name=api-routes-rest&repository-name=api-routes-rest)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example api-routes-rest api-routes-rest-app\n# or\nyarn create next-app --example api-routes-rest api-routes-rest-app\n```\n\n### Deploy to Now\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["chibicode",3],["lfades",3],["huv1k",1],["JazibJafri",1],["timneutkens",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["rdimaio",1],["michael",1],["lucleray",1]]},{"name":"auth0","title":"Next.js and Auth0 Example","description":"\nThis example shows how you can use `@auth0/nextjs-auth` to easily add authentication support to your Next.js application. It tries to cover a few topics:\n\n- Signing in\n- Signing out\n- Loading the user on the server side and adding it as part of SSR ([`pages/advanced/ssr-profile.js`](pages/advanced/ssr-profile.js))\n- Loading the user on the client side and using fast/cached SSR pages ([`pages/index.js`](pages/index.js))\n- API Routes which can load the current user ([`pages/api/me.js`](pages/api/me.js))\n- Using hooks to make the user available throughout the application ([`lib/user.js`](lib/user.js))\n\nRead more: [https://auth0.com/blog/ultimate-guide-nextjs-authentication-auth0/](https://auth0.com/blog/ultimate-guide-nextjs-authentication-auth0/)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example auth0 auth0-app\n# or\nyarn create next-app --example auth0 auth0-app\n```\n\n## Configuring Auth0\n\n1. Go to the [Auth0 dashboard](https://manage.auth0.com/) and create a new application of type _Regular Web Applications_ and make sure to configure the following\n2. Go to the settings page of the application\n3. Configure the following settings:\n\n- _Allowed Callback URLs_: Should be set to `http://localhost:3000/api/callback` when testing locally or typically to `https://myapp.com/api/callback` when deploying your application.\n- _Allowed Logout URLs_: Should be set to `http://localhost:3000/` when testing locally or typically to `https://myapp.com/` when deploying your application.\n\n4. Save the settings\n\n### Set up environment variables\n\nTo connect the app with Auth0, you'll need to add the settings from your Auth0 application as environment variables\n\nCopy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen, open `.env.local` and add the missing environment variables:\n\n- `NEXT_PUBLIC_AUTH0_DOMAIN` - Can be found in the Auth0 dashboard under `settings`.\n- `NEXT_PUBLIC_AUTH0_CLIENT_ID` - Can be found in the Auth0 dashboard under `settings`.\n- `AUTH0_CLIENT_SECRET` - Can be found in the Auth0 dashboard under `settings`.\n- `NEXT_PUBLIC_REDIRECT_URI` - The url where Auth0 redirects back to, make sure a consistent url is used here.\n- `NEXT_PUBLIC_POST_LOGOUT_REDIRECT_URI` - Where to redirect after logging out\n- `SESSION_COOKIE_SECRET` - A unique secret used to encrypt the cookies, has to be at least 32 characters. You can use [this generator](https://generate-secret.vercel.app/32) to generate a value.\n- `SESSION_COOKIE_LIFETIME` - How long a session lasts in seconds. The default is 2 hours.\n\n## Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n","contributors":[["Timer",4],["sandrinodimattia",2],["ijjk",1],["lfades",1],["SZharkov",1],["chibicode",1],["alfrejivi",1],["timneutkens",1],["makezi",1],["willianjusten",1],["teo-garcia",1],["timothyis",1],["tanmaylaud",1],["msreekm",1],["merceyz",1],["lunchboxav",1],["lucleray",1],["caaatisgood",1],["leerob",1]]},{"name":"basic-css","title":"Basic CSS example","description":"\nNext.js has built-in support for [CSS Modules](https://nextjs.org/docs/basic-features/built-in-css-support#adding-component-level-css) allowing you to write scoped CSS by automatically creating a unique class name. CSS Module files can be imported anywhere in your application and you don't have to worry about collisions.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/basic-css&project-name=basic-css&repository-name=basic-css)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example basic-css basic-css-app\n# or\nyarn create next-app --example basic-css basic-css-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",5],["Timer",5],["nkzawa",4],["lfades",4],["impronunciable",3],["chibicode",3],["rauchg",2],["jthegedus",2],["sedubois",1],["sakulstra",1],["paulmolluzzo",1],["HaNdTriX",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["gregrickaby",1],["ijjk",1],["tanmaylaud",1],["lucleray",1]]},{"name":"basic-export","title":"Basic export example","description":"\nThis example shows the most basic usage of `next export`. Without `exportPathMap`.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/basic-export&project-name=basic-export&repository-name=basic-export)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example basic-export basic-export-app\n# or\nyarn create next-app --example basic-export basic-export-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["chibicode",4],["timneutkens",3],["lfades",3],["mherodev",1],["j0lv3r4",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1]]},{"name":"blog","title":"Portfolio Starter Kit","description":"\nThis portfolio is built with **Next.js** and a library called [Nextra](https://nextra.vercel.app/). It allows you to write Markdown and focus on the _content_ of your portfolio. This starter includes:\n\n- Automatically configured to handle Markdown/MDX\n- Generates an RSS feed based on your posts\n- A beautiful theme included out of the box\n- Easily categorize posts with tags\n- Fast, optimized web font loading\n\nhttps://demo.vercel.blog\n\n## Configuration\n\n1. Update your name in `theme.config.js` or change the footer.\n1. Update your name and site URL for the RSS feed in `scripts/gen-rss.js`.\n1. Update the meta tags in `pages/_document.js`.\n1. Update the posts inside `pages/posts/*.md` with your own content.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/blog&project-name=portfolio&repository-name=portfolio)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example blog my-blog\n# or\nyarn create next-app --example blog my-blog\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["leerob",3]]},{"name":"blog-starter","title":"A statically generated blog example using Next.js and Markdown","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using Markdown files as the data source.\n\nThe blog posts are stored in `/_posts` as Markdown files with front matter support. Adding a new Markdown file in there will create a new blog post.\n\nTo create the blog posts we use [`remark`](https://github.com/remarkjs/remark) and [`remark-html`](https://github.com/remarkjs/remark-html) to convert the Markdown files into an HTML string, and then send it down as a prop to the page. The metadata of every post is handled by [`gray-matter`](https://github.com/jonschlinkert/gray-matter) and also sent in props to the page.\n\n## Demo\n\n[https://next-blog-starter.vercel.app/](https://next-blog-starter.vercel.app/)\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/blog-starter&project-name=blog-starter&repository-name=blog-starter)\n\n### Related examples\n\n- [WordPress](/examples/cms-wordpress)\n- [DatoCMS](/examples/cms-datocms)\n- [Sanity](/examples/cms-sanity)\n- [TakeShape](/examples/cms-takeshape)\n- [Prismic](/examples/cms-prismic)\n- [Contentful](/examples/cms-contentful)\n- [Strapi](/examples/cms-strapi)\n- [Agility CMS](/examples/cms-agilitycms)\n- [Cosmic](/examples/cms-cosmic)\n- [ButterCMS](/examples/cms-buttercms)\n- [Storyblok](/examples/cms-storyblok)\n- [GraphCMS](/examples/cms-graphcms)\n- [Kontent](/examples/cms-kontent)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example blog-starter blog-starter-app\n# or\nyarn create next-app --example blog-starter blog-starter-app\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n# Notes\n\nThis blog-starter uses [Tailwind CSS](https://tailwindcss.com). To control the generated stylesheet's filesize, this example uses Tailwind CSS' v2.0 [`purge` option](https://tailwindcss.com/docs/controlling-file-size/#removing-unused-css) to remove unused CSS.\n","contributors":[["chibicode",8],["Timer",7],["lfades",6],["timneutkens",4],["giraffesyo",3],["ijjk",2],["rdimaio",2],["j0lv3r4",1],["pmc-a",1],["AndyBitz",1],["zhe",1],["oddnavy",1],["qWici",1],["mlorthiois",1],["T0MASD",1],["timothyis",1],["willianjusten",1],["jazibsawar",1],["jamesmosier",1],["darshkpatel",1],["motleydev",1],["tanmaylaud",1],["Necmttn",1],["todortotev",1],["Simply007",1],["NorbertLuszkiewicz",1],["Zeko369",1],["gregrickaby",1],["lucleray",1],["leerob",1]]},{"name":"blog-starter-typescript","title":"A statically generated blog example using Next.js, Markdown, and TypeScript","description":"\nThis is the existing [blog-starter](https://github.com/vercel/next.js/tree/canary/examples/blog-starter) plus TypeScript.\n\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using Markdown files as the data source.\n\nThe blog posts are stored in `/_posts` as Markdown files with front matter support. Adding a new Markdown file in there will create a new blog post.\n\nTo create the blog posts we use [`remark`](https://github.com/remarkjs/remark) and [`remark-html`](https://github.com/remarkjs/remark-html) to convert the Markdown files into an HTML string, and then send it down as a prop to the page. The metadata of every post is handled by [`gray-matter`](https://github.com/jonschlinkert/gray-matter) and also sent in props to the page.\n\n## How to use\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/blog-starter-typescript&project-name=blog-starter-typescript&repository-name=blog-starter-typescript)\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example blog-starter-typescript blog-starter-typescript-app\n# or\nyarn create next-app --example blog-starter-typescript blog-starter-typescript-app\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n# Notes\n\nThis blog-starter-typescript uses [Tailwind CSS](https://tailwindcss.com). To control the generated stylesheet's filesize, this example uses Tailwind CSS' v2.0 [`purge` option](https://tailwindcss.com/docs/controlling-file-size/#removing-unused-css) to remove unused CSS.\n\n[Tailwind CSS v2.0 no longer supports Node.js 8 or 10](https://tailwindcss.com/docs/upgrading-to-v2#upgrade-to-node-js-12-13-or-higher). To build your CSS you'll need to ensure you are running Node.js 12.13.0 or higher in both your local and CI environments.\n","contributors":[["Timer",3],["todortotev",2],["rdimaio",2],["giraffesyo",2],["UndyingSugimoto",1],["sachaos",1],["sshyam-gupta",1],["lfades",1],["chibicode",1],["amorriscode",1],["tanmaylaud",1],["Necmttn",1],["NyashaNziramasanga",1],["NorbertLuszkiewicz",1],["Zeko369",1],["Kerumen",1],["JstnEdr",1],["lucleray",1],["leerob",1]]},{"name":"catch-all-routes","title":"Catch All Routes Example","description":"\nThis example shows how to use [Catch all routes](https://nextjs.org/docs/routing/dynamic-routes#catch-all-routes) in Next.js, which allows a dynamic route to catch all paths.\n\nThe catch all page is in `pages/post/[...slug]`, it matches any path after `/post`, like the following:\n\n- `/post/first-post`,\n- `/post/2020/first-post`\n- `/post/2020/first-post/with/catch/all/routes`\n- Anything that matches the glob `/post/**`\n\nYou can use `next/link` as displayed in this example to route to these pages client side.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/catch-all-routes&project-name=catch-all-routes&repository-name=catch-all-routes)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example catch-all-routes catch-all-routes-app\n# or\nyarn create next-app --example catch-all-routes catch-all-routes-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",3],["chibicode",2],["lfades",2],["timneutkens",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"cms-agilitycms","title":"A statically generated blog example using Next.js and Agility CMS","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using [Agility CMS](https://www.agilitycms.com) as the data source.\n\n> `IMPORTANT` - This example uses Agility CMS's [**Page Management**](https://agilitycms.com/resources/posts/page-management-in-agility-cms-vs-other-headless-cmss) features. This means that the CMS ultimately drives what pages are available and what content is on each page. This enables **Editors** to focus on managing their pages, while allowing you, (the **Developer**) to focus on building UI components for the editors to compose their pages.\n\n## Demo\n\n- **Live**: [https://next-blog-agilitycms.vercel.app/](https://next-blog-agilitycms.vercel.app/)\n- **Preview Mode**: [https://next-blog-agilitycms.vercel.app/?agilitypreviewkey=...](https://next-blog-agilitycms.vercel.app/?agilitypreviewkey=GzL%2fio1pLkfKc9BR1%2fC1cDQeKjL0AkwrTAJ22q3UEjAcOhyrqZejDkDv4kMlBKqrEuQxsuRyiP%2bUaykDYlJ%2fJg%3d%3d)\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-15-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-agilitycms&project-name=cms-agilitycms&repository-name=cms-agilitycms&env=AGILITY_CMS_GUID,AGILITY_CMS_API_FETCH_KEY,AGILITY_CMS_API_PREVIEW_KEY,AGILITY_CMS_SECURITY_KEY&envDescription=API%20Keys%20required%20by%20Agility%20CMS&envLink=https://vercel.link/agility-cms-env)\n\n### Related examples\n\n- [WordPress](/examples/cms-wordpress)\n- [DatoCMS](/examples/cms-datocms)\n- [Sanity](/examples/cms-sanity)\n- [TakeShape](/examples/cms-takeshape)\n- [Prismic](/examples/cms-prismic)\n- [Contentful](/examples/cms-contentful)\n- [Strapi](/examples/cms-strapi)\n- [Cosmic](/examples/cms-cosmic)\n- [ButterCMS](/examples/cms-buttercms)\n- [Storyblok](/examples/cms-storyblok)\n- [GraphCMS](/examples/cms-graphcms)\n- [Kontent](/examples/cms-kontent)\n- [Ghost](/examples/cms-ghost)\n- [Blog Starter](/examples/blog-starter)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example cms-agilitycms cms-agilitycms-app\n# or\nyarn create next-app --example cms-agilitycms cms-agilitycms-app\n```\n\n## Configuration\n\n### How is this Different from Other CMS Examples?\n\nThe key principle behind Agility CMS is that **Editors** should have full control of their pages and what content is on each page without getting into code.\n\nThis means you'll not only be defining **Content** for your `Posts` and `Authors`, but you'll also be defining UI Components to compose your pages. This site will consist of a single **Page Template** and a collection of **Modules** that represent the UI components you see on the page.\n\n> **NOTE** - `Modules` and `Page Templates` in Agility CMS simply correspond to `React Components` in your website.\n\nOnce you've gone through the steps below, you'll be able to dynamically manage pages (and what is on them) directly through the CMS without requiring a developer.\n\n### Step 1. Create an account and a project on `Agility CMS`\n\nFirst, [create an account on Agility CMS](https://agilitycms.com).\n\nAfter creating an account you'll be asked to create a new project. Use any name of your liking as the **Project Name** and select the **Blank (advanced users)** template to create a blank Agility CMS instance.\n\n### Step 2. Create an `Author` Content Definition\n\nFrom within the Agility CMS Content Manager, navigate to **Settings** > **Content Definitions** and click **New** to create a new **Content Definition**.\n\n- The **Title** should be `Author`. This will also pre-populate **Reference Name** for you.\n\nNext, add these fields via the **Form Builder** tab (you don't have to modify any other settings):\n\n- `Name` - Set **Field Label** to `Name` and **Field Type** to `Text`\n- `Picture` - Set **Field Label** to `Picture` and **Field Type** to `Image`\n\nWhen you are done, click **Save & Close** to save your `Author` content definition.\n\n### Step 3. Create a `List` based on your `Author` Content Definition\n\nFrom within the Agility CMS Content Manager, navigate to **Shared Content** and click the **+ (New)** button, then fill the form like so:\n\n- **Type** should be `Content List`\n- **Content Definition** should be **Author**\n- **Display Name** should be set to **Authors**. This will also pre-populate **Reference Name** for you.\n\n### Step 4. Create a `Post` Content Definition\n\nFrom within the Agility CMS Content Manager, navigate to **Settings** > **Content Definitions** and click **New** to create a new **Content Definition**.\n\n- The **Title** should be `Post`.\n\nNext, add these fields via the **Form Builder** tab (you don't have to modify any other settings):\n\n- `Title` - Set **Field Type** to `Text`\n- `Slug` - Set **Field Type** to `Text`\n- `Date` - Set **Field Type** to `Date/Time`\n- `AuthorID` - Set **Field Type** to `Number` and enable **Hide field from input form**\n- `Author` - Do the following:\n  - **Field Type** - `Linked Content`\n  - **Content Definition** - `Author`\n  - **Content View** - `Shared Content`\n  - **Shared Content** - `Authors`\n  - **Render As** - `Dropdown List`\n  - **Save Value To Field** - `AuthorID`\n- `Excerpt` - Set **Field Type** to `Text`\n- `Content` - Set **Field Type** to `HTML`\n- `Cover Image` - Set **Field Type** to `Image`\n\nWhen you are done, click **Save & Close** to save your `Post` content definition.\n\n### Step 5. Create a `Dynamic Page List` based on your `Posts` Content Definition\n\nFrom within the Agility CMS Content Manager, navigate to **Shared Content** and click the **+ (New)** button, then fill the form like so:\n\n- **Type** should be `Dynamic Page List`\n- **Content Definition** should be `Post`\n- **Display Name** should be `Posts`. This will also pre-populate **Reference Name** for you\n\n### Step 6. Populate Content\n\nGo to **Shared Content**, select the **Authors** list and click the **+ New** button to create a new content item:\n\n- You just need **1 Author content item**.\n- Use dummy data for the text.\n- For the image, you can download one from [Unsplash](https://unsplash.com/).\n\nClick on **Save** and **Publish** once you're done.\n\nNext, select the **Posts** list and click the **+ New** button to create a new content item:\n\n- We recommend creating at least **2 Post content items**.\n- Use dummy data for the text.\n- You can write markdown for the **Content** field.\n- For the images, you can download ones from [Unsplash](https://unsplash.com/).\n- Pick the **Author** you created earlier.\n\nFor each post content item, you need to click `Publish` after saving. If not, the post will be in the `Staging` state.\n\n### Step 7. Define your `Intro` Module\n\nNavigate to **Settings** > **Module Definitions** and click **New** to create a new **Module Definition**.\n\n- Set **Title** to `Intro`\n- Set **Description** to `Displays an intro message.`\n\nIn this case, we are not adding any fields to control the output or behavior, since the content is actually hard-coded in the template.\n\nClick **Save & Close** to save the definition.\n\n### Step 8. Define your `Hero Post` Module\n\nNavigate to **Settings** > **Module Definitions** and click **New** to create a new **Module Definition**.\n\n- Set **Title** to `Hero Post`\n- Set **Description** to `Displays the latest Post.`\n\nIn this case, we are not adding any fields to control the output or behavior, since the latest post will be used by default and all of the data is associated to the post itself.\n\nClick **Save & Close** to save the definition.\n\n### Step 9. Define your `More Stories` Module\n\nNavigate to **Settings** > **Module Definitions** and click **New** to create a new **Module Definition**.\n\n- Set **Title** to `More Stories`\n- Set **Description** to `Displays a listing of Posts.`\n\nNext, add the following field:\n\n- `Title` - Set **Field Type** to `Text`\n\nClick **Save & Close** to save the definition.\n\n### Step 10. Define your `Post Details` Module\n\nNavigate to **Settings** > **Module Definitions** and click **New** to create a new **Module Definition**.\n\n- Set **Title** to `Post Details`\n- Set **Description** to `Displays the details of a Post.`\n\nIn this case, we are not adding any fields to control the output or behavior, since the data is associated to the post itself.\n\nClick **Save & Close** to save the definition.\n\n### Step 11. Define a `One Column` Page Template\n\nNavigate to **Settings** > **Page Templates** and click **New** to create a new **Page Template**.\n\n- **Name** should be `One Column Template`\n- **Digital Channel Type** should be `Website`\n- Under **Module Zones** click `+ (New)`\n  - Set **Display Name** to `Main Content Zone`, it will populate **Reference Name** for you\n  - Click `Save` to apply the `Main Content Zone`\n\nClick **Save & Close** to save the page template.\n\n### Step 12. Add a new Page called `home`\n\nNavigate to **Pages** and click the **+ (New)** button in the page tree to create a new **Page**.\n\n- Set **Type** to `Page`\n- Set **Page Template** to `One Column Template`\n- Set **Menu Text** to `Home` - **Page Title** and **Page Name** fields will be auto-populated.\n\nClick **Save** to create the `/home` page.\n\nNext, let's add the `Intro`, `Hero Post` and `More Stories` modules to the `Main Content Zone` of the `home` page:\n\n- Click the **+ (New)** button on `Main Content Zone` and select `Intro` to add the module to the page\n- Click **Save & Close** on the module to return back to the page\n\n- Click the **+ (New)** button on `Main Content Zone` and select `Hero Post` to add the module to the page\n- Click **Save & Close** on the module to return back to the page\n\n- Click the **+ (New)** button on `Main Content Zone` and select `More Stories` to add the module to the page\n  - Set **Title** to `More Stories`\n- Click **Save & Close** on the module to return back to the page\n\nThen click **Publish** on the page in order to publish the page and all of its modules.\n\n### Step 13. Add a new Folder called `posts`\n\nNavigate to **Pages** and click the `Website` channel, then click the **+ (New)** button in the page tree to create a new **Folder** in the root of the site:\n\n- Set **Type** to `Folder`\n- Set **Menu Text** to `Posts`, **Folder Name** will be auto-populated to `posts`\n\nClick **Save** to create the `/posts` folder.\n\n**Important:** Click **Publish** on the folder.\n\n### Step 14. Add a new Dynamic Page called `posts-dynamic`\n\nNavigate to **Pages** and select the existing `/posts` folder. Click the **+ (New)** button in the page tree to create a new **Dynamic Page** underneath the `posts` page.\n\n- Set **Type** to `Dynamic Page`\n- Set **Page Template** to `One Column Template`\n- Set **Build Pages From** to `Posts`\n- Set **Sitemap Label** to `posts-dynamic`\n- Set **Page Path Formula** to `##Slug##`\n- Set **Page Title Formula** and **Menu Text Formula** to `##Title##`\n\nClick **Save** to create the `/posts/posts-dynamic` dynamic page.\n\nNext, let's add the `Post Details` and `More Stories` modules to the `Main Content Zone` of the `posts-dynamic` page:\n\n- Click the **+ (New)** button on `Main Content Zone` and select `Post Details` to add the module to the page\n- Click the **+ (New)** button on `Main Content Zone` and select `More Stories` to add the module to the page\n  - Set **Title** to `More Stories`\n- Click **Save & Close** on the module to return back to the `posts-dynamic` page\n\nThen click **Publish** on the page in order to publish the page and all of its modules.\n\n### Step 15. Set up environment variables\n\nCopy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nGo to the **Getting Started** section from the menu and click on **API Keys**. You should see a new modal called `Content API Details`, then click in the **Show API Key(s)** button within it.\n\nThen set each variable on `.env.local`:\n\n- `AGILITY_CMS_GUID` should be the **Instance GUID** field\n- `AGILITY_CMS_API_FETCH_KEY` should be the **Live API Key** field\n- `AGILITY_CMS_API_PREVIEW_KEY` should be the **Preview API Key** field - this is used when the site is in [Preview Mode](https://nextjs.org/docs/advanced-features/preview-mode) and allows your site to pull the latest content, regardless of whether it is published or not.\n- `AGILITY_CMS_SECURITY_KEY` should be the **Security Key** field that can be found in **Settings** > **Global Security** - this is used to communicate between the CMS and your site to validate [Preview Mode](https://nextjs.org/docs/advanced-features/preview-mode)\n\nYour `.env.local` file should look like this:\n\n```bash\nAGILITY_CMS_GUID=...\nAGILITY_CMS_API_FETCH_KEY=...\nAGILITY_CMS_API_PREVIEW_KEY=...\nAGILITY_CMS_SECURITY_KEY=...\n```\n\n### Step 16. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 17. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-agilitycms&project-name=cms-agilitycms&repository-name=cms-agilitycms&env=AGILITY_CMS_GUID,AGILITY_CMS_API_FETCH_KEY,AGILITY_CMS_API_PREVIEW_KEY,AGILITY_CMS_SECURITY_KEY&envDescription=API%20Keys%20required%20by%20Agility%20CMS&envLink=https://vercel.link/agility-cms-env)\n\n### Step 18. Try preview mode\n\nNow that you've deployed your app to Vercel, take note of the URL of your deployed site. This will be registered in Agility CMS so that when editors click the `Preview` button within Agility CMS, your app is loaded in **Preview Mode**. Learn more about [NextJS Preview Mode](https://nextjs.org/docs/advanced-features/preview-mode)).\n\nTo enable the Preview Mode, you'll need to add your site to **Domain Configuration** in Agility CMS:\n\n- Go to **Settings** > **Domain Configuration**\n- Click on the existing channel in the list called `Website`\n- Click on the **+ (New)** button to add a new domain:\n  - Set **Name** to `Production`\n  - Set **Domain URL** to the URL of your production deployment, it should look like `https://<your-vercel-domain>.vercel.app`\n  - Enable **Preview Domain**\n  - Click **Save** to save your settings\n\nGo to one of your `Posts` and update the title. For example, you can add `[Staging]` in front of the title. Click **Save**, but **DO NOT** click **Publish**. By doing this, the post will be in the staging state.\n\nTo enter **Preview Mode**, click the `Preview` button on the details of your `Post`. This redirects you to the `/` page, however you will now be in **Preview Mode** so you can navigate to your `Post` you want to view on the website.\n\nYou should now be able to see the updated title. To exit the preview mode, you can click **Click here to exit preview mode** at the top.\n\n> NOTE - To set up preview on a specific `Post` (as opposed to the `/` page), click on the **Settings** tab of the `Post` list in **Shared Content**. For **Item Preview Page** set it to `~/posts/posts-dynamic` and for **Item Preview Query String Parameter** set it to `contentid`.\n","contributors":[["chibicode",4],["lfades",3],["Timer",2],["lucleray",2],["jamesvidler",1],["jazibsawar",1],["motleydev",1],["andresz1",1],["tanmaylaud",1],["Necmttn",1],["todortotev",1],["Simply007",1],["NorbertLuszkiewicz",1],["styxlab",1],["leerob",1]]},{"name":"cms-buttercms","title":"A statically generated blog example using Next.js and ButterCMS","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using [ButterCMS](https://buttercms.com/) as the data source.\n\n## Demo\n\n[https://next-blog-buttercms.vercel.app/](https://next-blog-buttercms.vercel.app/)\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-2-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-buttercms&project-name=cms-buttercms&repository-name=cms-buttercms&env=BUTTERCMS_API_KEY,BUTTERCMS_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20ButterCMS&envLink=https://vercel.link/buttercms-env)\n\n### Related examples\n\n- [WordPress](/examples/cms-wordpress)\n- [DatoCMS](/examples/cms-datocms)\n- [Sanity](/examples/cms-sanity)\n- [TakeShape](/examples/cms-takeshape)\n- [Prismic](/examples/cms-prismic)\n- [Contentful](/examples/cms-contentful)\n- [Agility CMS](/examples/cms-agilitycms)\n- [Cosmic](/examples/cms-cosmic)\n- [Strapi](/examples/cms-strapi)\n- [Storyblok](/examples/cms-storyblok)\n- [GraphCMS](/examples/cms-graphcms)\n- [Kontent](/examples/cms-kontent)\n- [Ghost](/examples/cms-ghost)\n- [Blog Starter](/examples/blog-starter)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example cms-buttercms cms-buttercms-app\n# or\nyarn create next-app --example cms-buttercms cms-buttercms-app\n```\n\n## Configuration\n\n### Step 1. Create an account on ButterCMS\n\nFirst, [create an account on ButterCMS](https://buttercms.com/).\n\nAfter signing up, you’ll be presented with the API key. We’ll use this in the next step.\n\n### Step 2. Set up environment variables\n\nCopy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local`:\n\n- `BUTTERCMS_API_KEY` should be set as the API key.\n- `BUTTERCMS_PREVIEW_SECRET` can be any random string (but avoid spaces), like `MY_SECRET` - this is used for [Preview Mode](https://nextjs.org/docs/advanced-features/preview-mode).\n\n### Step 3. Run Next.js in development mode\n\nWhen you sign up to ButterCMS, it creates an example blog post automatically. You can run Next.js in development mode to view a blog containing this example post.\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 4. Try preview mode\n\nTo try preview mode, [create a blog post](https://buttercms.com/post/):\n\n- Set the **Title** as `Draft Post Test`.\n- Fill the content and summary with dummy text.\n- Set the **Featured Image** by downloading some image from [Unsplash](https://unsplash.com/).\n\nMost importantly, **do not publish** the blog post. Instead, click **Save Draft**.\n\nNow, if you go to the post page on localhost, you won't see this post because it’s not published. However, if you use the **Preview Mode**, you'll be able to see the change ([Documentation](https://nextjs.org/docs/advanced-features/preview-mode)).\n\nTo enable the Preview Mode, go to this URL:\n\n```\nhttp://localhost:3000/api/preview?secret=<secret>&slug=draft-post-test\n```\n\n- `<secret>` should be the string you entered for `BUTTERCMS_PREVIEW_SECRET`.\n\nYou should now be able to see the draft post. To exit the preview mode, you can click **Click here to exit preview mode** at the top.\n\n**Tip**: [You can set the preview URL on ButterCMS](https://buttercms.com/kb/preview-urls).\n\n### Step 5. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-buttercms&project-name=cms-buttercms&repository-name=cms-buttercms&env=BUTTERCMS_API_KEY,BUTTERCMS_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20ButterCMS&envLink=https://vercel.link/buttercms-env)\n","contributors":[["chibicode",4],["lfades",2],["lucleray",2],["motleydev",1],["tanmaylaud",1],["todortotev",1],["Simply007",1],["NorbertLuszkiewicz",1],["Timer",1],["styxlab",1],["leerob",1]]},{"name":"cms-contentful","title":"A statically generated blog example using Next.js and Contentful","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using [Contentful](https://www.contentful.com/) as the data source.\n\n## Demo\n\n### [https://next-blog-contentful.vercel.app/](https://next-blog-contentful.vercel.app/)\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-5-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-contentful&project-name=cms-contentful&repository-name=cms-contentful&env=CONTENTFUL_SPACE_ID,CONTENTFUL_ACCESS_TOKEN,CONTENTFUL_PREVIEW_ACCESS_TOKEN,CONTENTFUL_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20Contentful&envLink=https://vercel.link/cms-contentful-env)\n\n### Related examples\n\n- [WordPress](/examples/cms-wordpress)\n- [DatoCMS](/examples/cms-datocms)\n- [Sanity](/examples/cms-sanity)\n- [TakeShape](/examples/cms-takeshape)\n- [Prismic](/examples/cms-prismic)\n- [Strapi](/examples/cms-strapi)\n- [Agility CMS](/examples/cms-agilitycms)\n- [Cosmic](/examples/cms-cosmic)\n- [ButterCMS](/examples/cms-buttercms)\n- [Storyblok](/examples/cms-storyblok)\n- [GraphCMS](/examples/cms-graphcms)\n- [Kontent](/examples/cms-kontent)\n- [Ghost](/examples/cms-ghost)\n- [Blog Starter](/examples/blog-starter)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example cms-contentful cms-contentful-app\n# or\nyarn create next-app --example cms-contentful cms-contentful-app\n```\n\n## Configuration\n\n### Step 1. Create an account and a space on Contentful\n\nFirst, [create an account on Contentful](https://www.contentful.com/sign-up/).\n\nAfter creating an account, create a new empty **space** from the [dashboard](https://app.contentful.com/) and assign to it any name of your liking.\n\n### Step 2. Create a content model\n\nThe [content model](https://www.contentful.com/developers/docs/concepts/data-model/) defines the data structures of your application/websites. The structures are flexible and you can tailor them to your needs.\n\nFor this example you need to create a content model that defines an author and a post content type. **You can create these two by running a script or by doing it manually** to familiarize yourself with the Contentful user interface.\n\n#### Run a script to create the content model\n\nThis project includes a setup script which you can use to set up the content model expected by the source code.\n\nIn your Contentful dashboard go to **Settings > General Settings** and copy the **Space ID**.\n\nNext, go to **Settings > API > Content management tokens** and create a new token by clicking **Generate personal token**. This token has the same access rights as the logged in user. **Do not share it publicly**, you will only use it to set up your space and can delete it afterwards.\n\nWith the space ID and management access token at hand run the following command:\n\n```\nnpx cross-env CONTENTFUL_SPACE_ID=YOUR_SPACE_ID CONTENTFUL_MANAGEMENT_TOKEN=XXX npm run setup\n```\n\nThis command will create the needed content structures and set up your Contentful space ready to use. The output should look as follows:\n\n```\n> cms-contentful@1.0.0 setup /Users/stefan.judis/Projects/next.js/examples/cms-contentful\n> node ./contentful/setup.js $CONTENTFUL_SPACE_ID $CONTENTFUL_MANAGEMENT_TOKEN\n\n┌──────────────────────────────────────────────────┐\n│ The following entities are going to be imported: │\n├─────────────────────────────────┬────────────────┤\n│ Content Types                   │ 2              │\n├─────────────────────────────────┼────────────────┤\n│ Editor Interfaces               │ 2              │\n├─────────────────────────────────┼────────────────┤\n│ Locales                         │ 1              │\n├─────────────────────────────────┼────────────────┤\n│ Webhooks                        │ 0              │\n├─────────────────────────────────┼────────────────┤\n│ Entries                         │ 0              │\n├─────────────────────────────────┼────────────────┤\n│ Assets                          │ 0              │\n└─────────────────────────────────┴────────────────┘\n ✔ Validating content-file\n ✔ Initialize client (1s)\n ✔ Checking if destination space already has any content and retrieving it (2s)\n ✔ Apply transformations to source data (1s)\n ✔ Push content to destination space\n   ✔ Connecting to space (1s)\n   ...\n   ...\n   ...\n```\n\n#### Create the content model manually\n\n##### Create an `Author` content type\n\nFrom your contentful space, go to **Content model** and add a new content type:\n\n- Give it the **Name** `Author`, the **Api Identifier** should be `author`\n\nOnce the content model is saved, add these fields (you don't have to modify the settings unless specified):\n\n- `name` - **Text** field (type **short text**). **Field ID** should be set to `name`\n- `picture` - **Media** field (type **one file**). **Field ID** should be set to `picture`\n\nSave the content type and continue.\n\n##### Create a `post` type\n\nFrom your contentful space, go to **Content model** and add another content type:\n\n- Give it the **Name** `Post`, the **Api Identifier** should be `post`\n\nNext, add these fields (you don't have to modify the settings unless specified):\n\n- `title` - **Text** field (type **short text**)\n- `content` - **Rich text** field\n- `excerpt` - **Text** field (type **Long text, full-text search**)\n- `coverImage` - **Media** field (type **one file**)\n- `date` - **Date and time** field\n- `slug` - **Text** field. You can optionally go to the settings of this field, and under **Appearance**, select **Slug** to display it as a slug of the `title` field.\n- `author` - **Reference** field (type **one reference**)\n\nSave the content type and continue.\n\n### Step 3. Validate your content model\n\nAfter setting up the content model (either manually or by running `npm run setup` or `yarn setup`), it should look as follows.\n\n**Content model overview**\n\n![Content model overview](./docs/content-model-overview.jpg)\n\n### Step 4. Populate Content\n\nGo to the **Content** section in your space, then click on **Add entry** and select the **Author** content type:\n\n- You just need **1 author entry**.\n- Use dummy data for the text.\n- For the image, you can download one from [Unsplash](https://unsplash.com/).\n\nNext, create another entry with the content type **Post**:\n\n- We recommend creating at least **2 post entries**.\n- Use dummy data for the text.\n- For images, you can download them from [Unsplash](https://unsplash.com/).\n- Pick the **author** you created earlier.\n\n**Important:** For each entry and asset, you need to click on **Publish**. If not, the entry will be in draft state.\n\n![Published content entry](./docs/content-entry-publish.jpg)\n\n### Step 5. Set up environment variables\n\nFrom your contentful space, go to **Settings > API keys**. There will be an example Content delivery / preview token - you can use these API keys. (You may also create a new key.)\n\nNext, copy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local`:\n\n- `CONTENTFUL_SPACE_ID` should be the **Space ID** field of your API Key\n- `CONTENTFUL_ACCESS_TOKEN` should be the **[Content Delivery API](https://www.contentful.com/developers/docs/references/content-delivery-api/) - access token** field of your API key\n- `CONTENTFUL_PREVIEW_ACCESS_TOKEN` should be the **[Content Preview API](https://www.contentful.com/developers/docs/references/content-preview-api/) - access token** field of your API key\n- `CONTENTFUL_PREVIEW_SECRET` should be any value you want. It must be URL friendly as the dashboard will send it as a query parameter to enable preview mode\n\nYour `.env.local` file should look like this:\n\n```bash\nCONTENTFUL_SPACE_ID=...\nCONTENTFUL_ACCESS_TOKEN=...\nCONTENTFUL_PREVIEW_ACCESS_TOKEN=...\nCONTENTFUL_PREVIEW_SECRET=...\n```\n\n### Step 6. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 7. Try preview mode\n\nIn your Contentful space, go to **Settings > Content preview** and add a new content preview for development.\n\nThe **Name** field may be anything, like `Development`. Then, under **Content preview URLs**, check **Post** and set its value to:\n\n```\nhttp://localhost:3000/api/preview?secret=<CONTENTFUL_PREVIEW_SECRET>&slug={entry.fields.slug}\n```\n\nReplace `<CONTENTFUL_PREVIEW_SECRET>` with its respective value in `.env.local`.\n\n![Content preview setup](./docs/content-preview-setup.jpg)\n\nOnce saved, go to one of the posts you've created and:\n\n- **Update the title**. For example, you can add `[Draft]` in front of the title.\n- The state of the post will switch to **CHANGED** automatically. **Do not** publish it. By doing this, the post will be in draft state.\n- In the sidebar, you will see the **Open preview** button. Click on it!\n\n![Content entry overview](./docs/content-entry-preview.jpg)\n\nYou will now be able to see the updated title. To exit preview mode, you can click on **Click here to exit preview mode** at the top of the page.\n\n### Step 8. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-contentful&project-name=cms-contentful&repository-name=cms-contentful&env=CONTENTFUL_SPACE_ID,CONTENTFUL_ACCESS_TOKEN,CONTENTFUL_PREVIEW_ACCESS_TOKEN,CONTENTFUL_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20Contentful&envLink=https://vercel.link/cms-contentful-env)\n","contributors":[["Timer",7],["chibicode",6],["lfades",5],["timothyis",2],["OriginalEXE",2],["stefanjudis",1],["taye",1],["jazibsawar",1],["motleydev",1],["jpedroschmitz",1],["darshkpatel",1],["tanmaylaud",1],["todortotev",1],["Simply007",1],["lucleray",1],["styxlab",1],["leerob",1]]},{"name":"cms-cosmic","title":"A statically generated blog example using Next.js and Cosmic","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using [Cosmic](https://cosmicjs.com/) as the data source.\n\n## Demo\n\n[https://cosmic-next-blog.vercel.app/](https://cosmic-next-blog.vercel.app/)\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-3-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-cosmic&project-name=cms-cosmic&repository-name=cms-cosmic&env=COSMIC_BUCKET_SLUG,COSMIC_READ_KEY,COSMIC_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20Cosmic&envLink=https://vercel.link/cms-cosmic-env)\n\n### Related examples\n\n- [WordPress](/examples/cms-wordpress)\n- [DatoCMS](/examples/cms-datocms)\n- [Sanity](/examples/cms-sanity)\n- [TakeShape](/examples/cms-takeshape)\n- [Prismic](/examples/cms-prismic)\n- [Contentful](/examples/cms-contentful)\n- [Strapi](/examples/cms-strapi)\n- [Agility CMS](/examples/cms-agilitycms)\n- [ButterCMS](/examples/cms-buttercms)\n- [Storyblok](/examples/cms-storyblok)\n- [GraphCMS](/examples/cms-graphcms)\n- [Kontent](/examples/cms-kontent)\n- [Ghost](/examples/cms-ghost)\n- [Blog Starter](/examples/blog-starter)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example cms-cosmic cms-cosmic-app\n# or\nyarn create next-app --example cms-cosmic cms-cosmic-app\n```\n\n## Configuration\n\n### Step 1. Create an account and a project on Cosmic\n\nFirst, [create an account on Cosmic](https://cosmicjs.com).\n\n### Step 2. Install the Next.js Static Blog app\n\nAfter creating an account, install the [Next.js Static Blog](https://www.cosmicjs.com/apps/nextjs-static-blog) app from the Cosmic App Marketplace.\n\n### Step 3. Set up environment variables\n\nGo to the **Settings** menu at the sidebar and click **Basic Settings**.\n\nNext, copy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local`:\n\n- `COSMIC_BUCKET_SLUG` should be the **Bucket slug** key under **Basic Settings**.\n- `COSMIC_READ_KEY` should be the **Read Key** under **API Access**.\n- `COSMIC_PREVIEW_SECRET` can be any random string (but avoid spaces) - this is used for [Preview Mode](https://nextjs.org/docs/advanced-features/preview-mode).\n\nYour `.env.local` file should look like this:\n\n```bash\nCOSMIC_BUCKET_SLUG=...\nCOSMIC_READ_KEY=...\nCOSMIC_PREVIEW_SECRET=...\n```\n\n### Step 4. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 5. Try preview mode\n\nTo add the ability to preview content from your Cosmic dashboard go to **Posts > Edit Settings** and scroll down to the \"Preview Link\" section. (Screenshot below)\n\n![Image](https://cdn.cosmicjs.com/14e6c0f0-a07b-11ea-829b-5b458b05d525-preview-link.png)\n\nAdd your live URL or localhost development URL which includes your chosen preview secret and `[object_slug]` shortcode. It should look like the following:\n\n```\nhttp://localhost:3000/api/preview?secret=<secret>&slug=[object_slug]\n```\n\n- `<secret>` is the string you entered for `COSMIC_PREVIEW_SECRET`.\n- `[object_slug]` shortcode will automatically be converted to the post's `slug` attribute.\n\nOn Cosmic, go to one of the posts you've created and:\n\n- **Update the title**. For example, you can add `[Draft]` in front of the title.\n- Click **Save Draft**, but **DO NOT** click **Publish**. By doing this, the post will be in the draft state.\n\nNow, if you go to the post page directly on localhost, you won't see the updated title. However, if you use the **Preview Mode**, you'll be able to see the change ([Documentation](https://nextjs.org/docs/advanced-features/preview-mode)).\n\nNext, click the Preview Link button on the Post to see the updated title. (Screenshot below)\n\n<img src=\"https://cdn.cosmicjs.com/80f42680-a07a-11ea-829b-5b458b05d525-preview-button.png\" width=\"300\" />\n\nTo exit preview mode, you can click on **Click here to exit preview mode** at the top.\n\n### Step 6. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-cosmic&project-name=cms-cosmic&repository-name=cms-cosmic&env=COSMIC_BUCKET_SLUG,COSMIC_READ_KEY,COSMIC_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20Cosmic&envLink=https://vercel.link/cms-cosmic-env)\n","contributors":[["chibicode",3],["lfades",2],["tonyspiro",2],["lucleray",2],["jazibsawar",1],["motleydev",1],["andresz1",1],["tanmaylaud",1],["rokinsky",1],["todortotev",1],["Simply007",1],["Timer",1],["styxlab",1],["leerob",1]]},{"name":"cms-datocms","title":"A statically generated blog example using Next.js and DatoCMS","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using [DatoCMS](https://www.datocms.com/) as the data source.\n\n## Demo\n\n[https://next-blog-datocms.vercel.app/](https://next-blog-datocms.vercel.app/)\n\n### Related examples\n\n- [WordPress](/examples/cms-wordpress)\n- [Sanity](/examples/cms-sanity)\n- [TakeShape](/examples/cms-takeshape)\n- [Prismic](/examples/cms-prismic)\n- [Contentful](/examples/cms-contentful)\n- [Strapi](/examples/cms-strapi)\n- [Agility CMS](/examples/cms-agilitycms)\n- [Cosmic](/examples/cms-cosmic)\n- [ButterCMS](/examples/cms-buttercms)\n- [Storyblok](/examples/cms-storyblok)\n- [GraphCMS](/examples/cms-graphcms)\n- [Kontent](/examples/cms-kontent)\n- [Ghost](/examples/cms-ghost)\n- [Blog Starter](/examples/blog-starter)\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-5-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-datocms&project-name=cms-datocms&repository-name=cms-datocms&env=DATOCMS_API_TOKEN,DATOCMS_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20DatoCMS&envLink=https://vercel.link/cms-datocms-env)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example cms-datocms cms-datocms-app\n# or\nyarn create next-app --example cms-datocms cms-datocms-app\n```\n\n## Configuration\n\n### Step 1. Create an account and a project on DatoCMS\n\nFirst, [create an account on DatoCMS](https://datocms.com).\n\nAfter creating an account, create a **new project** from the dashboard. You can select a **Blank Project**.\n\n### Step 2. Create an `Author` model\n\nFrom the project setting page, create a new **Model**.\n\n- The name should be `Author`.\n\nNext, add these fields (you don't have to modify the settings):\n\n- `Name` - **Text** field (**Single-line String**)\n- `Picture` - **Media** field (**Single asset**)\n\n### Step 3. Create a `Post` model\n\nFrom the project setting page, create a new **Model**:\n\n- The name should be `Post`.\n- **Important:** From the \"Additional Settings\" tab, turn on **Enable draft/published system.** This lets you preview the content.\n\nNext, add these fields (you don't have to modify the settings unless specified):\n\n- `Title` - **Text** field (**Single-line String**)\n- `Content` - **Text** field (**Multiple-paragraph Text**)\n- `Excerpt` - **Text** field (**Single-line String**)\n- `Cover Image` - **Media** field (**Single asset**)\n- `Date` - **Date and time** field (**Date**)\n- `Author` - **Links** field (**Single link**) , and from the \"Validations\" tab under \"Accept only specified model\", select **Author**.\n- `Slug` - **SEO** field (**Slug**), and from the \"Validations\" tab under \"Reference field\" select **Title**.\n\n### Step 4. Populate Content\n\nFrom the **Content** menu at the top, select **Author** and create a new record.\n\n- You just need **1 Author record**.\n- Use dummy data for the text.\n- For the image, you can download one from [Unsplash](https://unsplash.com/).\n\nNext, select **Post** and create a new record.\n\n- We recommend creating at least **2 Post records**.\n- Use dummy data for the text.\n- You can write markdown for the **Content** field.\n- For the images, you can download ones from [Unsplash](https://unsplash.com/).\n- Pick the **Author** you created earlier.\n\n**Important:** For each post record, you need to click **Publish** after saving. If not, the post will be in the draft state.\n\n### Step 5. Set up environment variables\n\nGo to the **Settings** menu at the top and click **API tokens**.\n\nThen click **Read-only API token** and copy the token.\n\nNext, copy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local`:\n\n- `DATOCMS_API_TOKEN` should be the API token you just copied.\n- `DATOCMS_PREVIEW_SECRET` can be any random string (but avoid spaces), like `MY_SECRET` - this is used for [the Preview Mode](https://nextjs.org/docs/advanced-features/preview-mode).\n\nYour `.env.local` file should look like this:\n\n```bash\nDATOCMS_API_TOKEN=...\nDATOCMS_PREVIEW_SECRET=...\n```\n\n### Step 6. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 7. Try preview mode\n\nOn DatoCMS, go to one of the posts you've created and:\n\n- **Update the title**. For example, you can add `[Draft]` in front of the title.\n- Click **Save**, but **DO NOT** click **Publish**. By doing this, the post will be in the draft state.\n\n(If it doesn't become draft, you need to go to the model settings for `Post`, go to **Additional Settings**, and turn on **Enable draft/published system**.)\n\nNow, if you go to the post page on localhost, you won't see the updated title. However, if you use the **Preview Mode**, you'll be able to see the change ([Documentation](https://nextjs.org/docs/advanced-features/preview-mode)).\n\nTo enable the Preview Mode, go to this URL:\n\n```\nhttp://localhost:3000/api/preview?secret=<secret>&slug=<slug>\n```\n\n- `<secret>` should be the string you entered for `DATOCMS_PREVIEW_SECRET`.\n- `<slug>` should be the post's `slug` attribute (you can check on DatoCMS).\n\nYou should now be able to see the updated title. To exit the preview mode, you can click **Click here to exit preview mode** at the top.\n\n### Step 8. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-datocms&project-name=cms-datocms&repository-name=cms-datocms&env=DATOCMS_API_TOKEN,DATOCMS_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20DatoCMS&envLink=https://vercel.link/cms-datocms-env)\n","contributors":[["chibicode",10],["Timer",8],["lfades",5],["timneutkens",3],["ijjk",2],["followbl",1],["queq1890",1],["willianjusten",1],["gregrickaby",1],["timothyis",1],["jazibsawar",1],["motleydev",1],["tanmaylaud",1],["rokinsky",1],["todortotev",1],["Simply007",1],["NorbertLuszkiewicz",1],["lucleray",1],["styxlab",1],["leerob",1]]},{"name":"cms-ghost","title":"A statically generated blog example using Next.js and Ghost","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using [Ghost](https://ghost.org/) as the data source.\n\n> This boilerplate demonstrates simple usage and best practices. If you are looking for a more feature richt Next.js generator for Ghost including the Casper theme,\n> check out [next-cms-ghost](https://github.com/styxlab/next-cms-ghost).\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-2-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/import/git?c=1&s=https://github.com/vercel/next.js/tree/canary/examples/cms-ghost&env=ghost_BUCKET_SLUG,ghost_READ_KEY,ghost_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20ghost&envLink=https://vercel.link/cms-ghost-env)\n\n### Related examples\n\n- [WordPress](/examples/cms-wordpress)\n- [DatoCMS](/examples/cms-datocms)\n- [Sanity](/examples/cms-sanity)\n- [TakeShape](/examples/cms-takeshape)\n- [Prismic](/examples/cms-prismic)\n- [Contentful](/examples/cms-contentful)\n- [Strapi](/examples/cms-strapi)\n- [Agility CMS](/examples/cms-agilitycms)\n- [ButterCMS](/examples/cms-buttercms)\n- [Storyblok](/examples/cms-storyblok)\n- [GraphCMS](/examples/cms-graphcms)\n- [Kontent](/examples/cms-kontent)\n- [Blog Starter](/examples/blog-starter)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example cms-ghost cms-ghost-app\n# or\nyarn create next-app --example cms-ghost cms-ghost-app\n```\n\n### Setp 1. Run Next.js in development mode\n\nTo get started, no configuration is needed as this example sources the content from a demo Ghost CMS.\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 2. Set up environment variables\n\nIf you already have a Ghost CMS running, you should create new Content API keys in the Ghost Admin panel under Integrations -> Add custom integration.\nOnce your keys are generated, copy them into the environment variables as follows. Your `.env.local` file should look like this:\n\n```bash\nGHOST_API_URL=...\nGHOST_API_KEY=...\n```\n\nMake sure to use the Content API Key.\n\n### Step 3. Set up Headless Ghost CMS\n\nIf you do not have access to a Ghost CMS, you need to create one for your own content. The demo Ghost CMS is running on Hetzner Cloud, which is described in [Ghost CMS on Hetzner Cloud](https://www.jamify.org/2020/04/07/ghost-cms-on-hetzner-cloud/). Note that a Ghost install on localhost is not sufficient for public deploys, as the images on your local computer are not accessible from outside.\n\n### Step 4. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/import/git?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/import/git?c=1&s=https://github.com/vercel/next.js/tree/canary/examples/cms-ghost&env=GHOST_API_URL,GHOST_API_KEY&envDescription=Required%20to%20connect%20the%20app%20with%20ghost&envLink=https://vercel.link/cms-ghost-env)\n","contributors":[["styxlab",1],["leerob",1]]},{"name":"cms-graphcms","title":"A statically generated blog example using Next.js and GraphCMS","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using [GraphCMS](https://www.graphcms.com/) as the data source.\n\n## Demo\n\n- **Live**: [https://next-blog-graphcms.vercel.app/](https://next-blog-graphcms.vercel.app/)\n- **Preview Mode**: [https://next-blog-graphcms.vercel.app/api/preview...](https://next-blog-graphcms.vercel.app/api/preview?secret=PHHsT9YmZjHxjxuzt8Jie2XkieME&slug=technical-seo-with-graphcms)\n\n### [https://next-blog-graphcms.vercel.app/](https://next-blog-graphcms.vercel.app/)\n\n### Related examples\n\n- [WordPress](/examples/cms-wordpress)\n- [DatoCMS](/examples/cms-datocms)\n- [Sanity](/examples/cms-sanity)\n- [TakeShape](/examples/cms-takeshape)\n- [Prismic](/examples/cms-prismic)\n- [Contentful](/examples/cms-contentful)\n- [Strapi](/examples/cms-strapi)\n- [Agility CMS](/examples/cms-agilitycms)\n- [Cosmic](/examples/cms-cosmic)\n- [ButterCMS](/examples/cms-buttercms)\n- [Storyblok](/examples/cms-storyblok)\n- [Kontent](/examples/cms-kontent)\n- [Ghost](/examples/cms-ghost)\n- [Blog Starter](/examples/blog-starter)\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-3-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-graphcms&project-name=cms-graphcms&repository-name=cms-graphcms&env=GRAPHCMS_PROJECT_API,GRAPHCMS_PROD_AUTH_TOKEN,GRAPHCMS_DEV_AUTH_TOKEN,GRAPHCMS_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20GraphCMS&envLink=https://vercel.link/cms-graphcms-env)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example cms-graphcms cms-graphcms-app\n# or\nyarn create next-app --example cms-graphcms cms-graphcms-app\n```\n\n## Configuration\n\n### Step 1. Create an account and a project in GraphCMS\n\nFirst, [create an account in GraphCMS](https://app.graphcms.com).\n\n### Step 2. Create a new GraphCMS project\n\nAfter creating an account, create a new project from the **Blog Starter template** - be sure to include the example content.\n\n### Step 3. Set up environment variables\n\nCopy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nInside your project dashboard, navigate to **Settings > API Access page**.\n\nThen set each variable in `.env.local`:\n\n- `GRAPHCMS_PROJECT_API`: Set it to the API endpoint under **Endpoints**, at the top of the page.\n- `GRAPHCMS_PROD_AUTH_TOKEN`: Copy the `NEXT_EXAMPLE_CMS_GCMS_PROD_AUTH_TOKEN` token under **Existing tokens**, at the bottom of the page. This will only query content that is published.\n- `GRAPHCMS_DEV_AUTH_TOKEN`: Copy the `NEXT_EXAMPLE_CMS_GCMS_DEV_AUTH_TOKEN` token under **Existing tokens**, at the bottom of the page. This will only query content that is in draft.\n- `GRAPHCMS_PREVIEW_SECRET` can be any random string (but avoid spaces), like `MY_SECRET` - this is used for [Preview Mode](https://nextjs.org/docs/advanced-features/preview-mode).\n\n### Step 4. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 5. Try preview mode\n\nIn GraphCMS, go to one of the posts in your project and:\n\n- **Update the title**. For example, you can add `[Draft]` in front of the title.\n- After you edit the document save the article as a draft, but **DO NOT** click **Publish**. By doing this, the post will be in the draft stage.\n\nNow, if you go to the post page on localhost, you won't see the updated title. However, if you use **Preview Mode**, you'll be able to see the change ([Documentation](/docs/advanced-features/preview-mode.md)).\n\nTo view the preview, transform the url to the following format: `http://localhost:3000/api/preview?secret=<YOUR_SECRET_TOKEN>&slug=<SLUG_TO_PREVIEW>` where `<YOUR_SECRET_TOKEN>` is the same secret you defined in the `.env.local` file and `<SLUG_TO_PREVIEW>` is the slug of one of the posts you want to preview.\n\nYou should now be able to see the updated title. To exit the preview mode, you can click on _\"Click here to exit preview mode\"_ at the top.\n\n### Step 6. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-graphcms&project-name=cms-graphcms&repository-name=cms-graphcms&env=GRAPHCMS_PROJECT_API,GRAPHCMS_PROD_AUTH_TOKEN,GRAPHCMS_DEV_AUTH_TOKEN,GRAPHCMS_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20GraphCMS&envLink=https://vercel.link/cms-graphcms-env)\n","contributors":[["lucleray",2],["motleydev",1],["chibicode",1],["andresz1",1],["tanmaylaud",1],["todortotev",1],["Simply007",1],["NorbertLuszkiewicz",1],["Timer",1],["ciruz",1],["styxlab",1],["leerob",1]]},{"name":"cms-kontent","title":"A statically generated blog example using Next.js and Kontent","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using [Kentico Kontent](https://kontent.ai) as the data source.\n\n## Demo\n\n[https://next-blog-kontent.vercel.app/](https://next-blog-kontent.vercel.app/)\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-3-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-kontent&project-name=cms-kontent&repository-name=cms-kontent&env=KONTENT_PROJECT_ID,KONTENT_PREVIEW_API_KEY,KONTENT_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20Kontent&envLink=https://github.com/vercel/next.js/tree/canary/examples/cms-kontent%23step-3-set-up-environment-variables)\n\n### Related examples\n\n- [WordPress](/examples/cms-wordpress)\n- [DatoCMS](/examples/cms-datocms)\n- [Sanity](/examples/cms-sanity)\n- [TakeShape](/examples/cms-takeshape)\n- [Prismic](/examples/cms-prismic)\n- [Contentful](/examples/cms-contentful)\n- [Strapi](/examples/cms-strapi)\n- [Agility CMS](/examples/cms-agilitycms)\n- [Cosmic](/examples/cms-cosmic)\n- [ButterCMS](/examples/cms-buttercms)\n- [Storyblok](/examples/cms-storyblok)\n- [GraphCMS](/examples/cms-graphcms)\n- [Ghost](/examples/cms-ghost)\n- [Blog Starter](/examples/blog-starter)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example cms-kontent cms-kontent-app\n# or\nyarn create next-app --example cms-kontent cms-kontent-app\n```\n\n## Configuration\n\n### Step 1. Create an account on Kontent\n\nFirst, [create an account on Kontent.ai](https://app.kontent.ai/sign-up?utm_source=nextjs_docs_example&utm_medium=devrel&utm_campaign=extended_trial).\n\n> The link above will provide you with the 90-days trial. Once you finish the trial, or even during the trial period, you could switch to the [**developer plan**](https://kontent.ai/developer-plan) which is **free of charge** and offers all the features you'll need to test out the example capabilities.\n\nAfter signing up, [create an empty project](https://docs.kontent.ai/tutorials/set-up-kontent/projects/manage-projects#a-creating-projects).\n\n### Step 2. Create the content models and fill them with data\n\nThe [content model](https://docs.kontent.ai/tutorials/set-up-kontent/content-modeling/what-is-content-modeling) defines the data structures of your application/websites. The structures are flexible and you can tailor them to your needs.\n\nFor this example you need to create a content model that defines an `author` and a `post` content type. **You can import these automatically or by doing it manually** to familiarize yourself with the Kontent user interface.\n\nTo import the content models with their data follow the next steps:\n\n1. Enter [Kontent application](https://app.kontent.ai)\n1. Go to \"Project Settings\", select API keys\n1. Activate Management API\n1. Copy `Project ID` and `Management API` key\n1. Install [Kontent Backup Manager](https://github.com/Kentico/kontent-backup-manager-js) and import data to newly created project from kontent-backup.zip file (place appropriate values for apiKey and projectId arguments):\n\n   ```sh\n   npm i -g @kentico/kontent-backup-manager\n   kbm --action=restore --apiKey=<Management API key> --projectId=<Project ID> --zipFilename=kontent-backup\n   ```\n\n   > **💡 Alternatively, you can use the [Template Manager UI](https://kentico.github.io/kontent-template-manager/import-from-file) for importing the content.**\n\n1. Go to your Kontent project and publish all the imported items.\n   > You could deactivate Management API key, it is not necessary any more.\n\n### Step 2.1. Optionally create the content models manually\n\nYou can safely ignore this step if you already imported the content models in Step 2.\n\n#### Create an `Author` content type\n\nFrom your Kontent project, go to **Content models** and add a new `Content type`:\n\n> you don't have to modify the element configuration unless specified\n\n- Content type name: `Author`\n- Add the following content elements\n  - `Name` - **Text** element\n  - `Picture` - **Asset** element - configure to allow to select `At most 1` asset and `Limit file types` only to `Adjustable images`\n\nSave the content type and continue.\n\nThe content type should look like this:\n\n![Content type Author](./docs/author-content-type.png)\n\n#### Create a `Post` content type\n\nFrom your Kontent project, go to **Content models** and add a new content type:\n\n> you don't have to modify the element configuration unless specified\n\n- Content type name: `Post`\n- Add the following content elements\n  - `Title` - **Text** element\n  - `Date` - **Date & time** element\n  - `Excerpt` - **Text** element\n  - `Content` - **Rich Text** element\n  - `Cover Image` - **Asset Text** element - configure to allow to select `At most 1` asset and `Limit file types` only to `Adjustable images` - `Content` - `Slug` - **URL slug** element - auto-generated from `Title` element\n  - `Author` - **Linked items** element - configure to accept `Exactly 1` item of type `Author`\n\nSave the content type and continue.\n\nThe content type should look like this:\n\n![Content type Author](./docs/post-content-type.png)\n\n#### Fill content models with data\n\nGo to `Content & Assets` section in your project and click `Create new` on the `Content` tab and select `Author` content type.\n\n- You just need **1 author item** first.\n- Use dummy data for his name.\n- For the image, you can download one from [Unsplash](https://unsplash.com/).\n\nNext, create another item based on **Post** content type:\n\n- It's recommend to create at least **2 post items**.\n- Use dummy data for the text.\n- For images, you can download them from [Unsplash](https://unsplash.com/).\n- Pick the **author** you created earlier.\n\n**Important:** For each item, you need to click on **Publish**. If not, the entry will be in draft workflow step.\n\n![Published post item overview](./docs/publish-post-overview.png)\n\n### Step 3. Set up environment variables\n\nCopy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local` using the keys `Project settings` > `API keys`:\n\n- `KONTENT_PROJECT_ID` - Should be the Project ID in `Project settings` > `API keys`.\n- `KONTENT_PREVIEW_API_KEY` - One of the Preview API keys in `Project settings` > `API keys`.\n- `KONTENT_PREVIEW_SECRET` - Can be any random string (but avoid spaces), like `MY_SECRET` - this is used for [Preview Mode](https://nextjs.org/docs/advanced-features/preview-mode).\n\n### Step 4. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn\nyarn dev\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 5. Try preview mode\n\nIn your Kontent project, go to **Project Settings > Preview URLs** and set a new preview URL for the `Post` content type to:\n\n```plain\nhttp://localhost:3000/api/preview?secret=<KONTENT_PREVIEW_SECRET>&slug={URLslug}\n```\n\nReplace `<KONTENT_PREVIEW_SECRET>` with its respective value in `.env.local`:\n\n![Preview URL setup](./docs/preview-URLs-setup.png)\n\nOnce saved, go to one of the posts you've created and:\n\n- Create a new version of the post\n- **Update the title**. For example, you can add `[Draft]` in front of the title.\n  > Mind the title also regenerates the URL slug, if you want to change any other field that does not influence URL slug, feel free to do so.\n- **Do not** publish it. By doing this, the post will be in draft workflow step.\n- On the menu, you will see the **Preview** button. Click on it!\n\n![Post preview button](./docs/post-preview-button.png).\n\nYou will now be able to see the updated title. To exit preview mode, you can click on **Click here to exit preview mode** at the top of the page.\n\n### Step 6. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-kontent&project-name=cms-kontent&repository-name=cms-kontent&env=KONTENT_PROJECT_ID,KONTENT_PREVIEW_API_KEY,KONTENT_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20Kontent&envLink=https://github.com/vercel/next.js/tree/canary/examples/cms-kontent%23step-3-set-up-environment-variables)\n","contributors":[["Simply007",3],["NorbertLuszkiewicz",1],["Timer",1],["Zeko369",1],["lucleray",1],["zainfathoni",1],["styxlab",1],["leerob",1]]},{"name":"cms-prepr","title":"A statically generated blog example using Next.js and Prepr","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using [Prepr](https://prepr.io/) as the data source.\n\n## Demo\n\n- **Live**: [https://next-blog-prepr.now.sh/](https://next-blog-prepr.now.sh/)\n- **Preview Mode**: [https://next-blog-prepr.now.sh/api/preview...](https://next-blog-prepr.now.sh/api/preview?secret=237864ihasdhj283768&slug=discover-enjoy-amsterdam)\n\n### [https://next-blog-prepr.now.sh/](https://next-blog-prepr.now.sh/)\n\n### Related examples\n\n- [WordPress](/examples/cms-wordpress)\n- [DatoCMS](/examples/cms-datocms)\n- [Sanity](/examples/cms-sanity)\n- [TakeShape](/examples/cms-takeshape)\n- [Prismic](/examples/cms-prismic)\n- [Contentful](/examples/cms-contentful)\n- [Strapi](/examples/cms-strapi)\n- [Agility CMS](/examples/cms-agilitycms)\n- [Cosmic](/examples/cms-cosmic)\n- [ButterCMS](/examples/cms-buttercms)\n- [Storyblok](/examples/cms-storyblok)\n- [Kontent](/examples/cms-kontent)\n- [Ghost](/examples/cms-ghost)\n- [GraphCMS](/examples/cms-graphcms)\n- [Blog Starter](/examples/blog-starter)\n\n## Getting Started\n\nOnce you have access to [the environment variables you'll need](#step-3-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-prepr&project-name=cms-prepr&repository-name=cms-prepr&env=PREPRIO_API,PREPRIO_PRODUCTION_TOKEN,PREPRIO_PREVIEW_TOKEN,PREPRIO_PREVIEW_KEY&envDescription=Required%20to%20connect%20the%20app%20with%20Prepr&envLink=https://vercel.link/cms-prepr-env)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example cms-prepr cms-prepr-app\n# or\nyarn create next-app --example cms-prepr cms-prepr-app\n```\n\n## Configuration\n\n### Step 1. Create an account and a environment in Prepr\n\nFirst, [create an account in Prepr](https://prepr.io).\n\n### Step 2. Create Author model\n\nFrom your Prepr dashboard, click **Settings** -> **Models**\n\nClick on the arrow next to **Add model** and select **Import**.\n\nImport the [`models/author.json`](models/author.json) file.\n\nAfter that\n\nImport the [`models/post.json`](models/post.json) file.\n\nClick on the Author field and select `Author` at the option `Publication model` and click **Save**.\n\n### Step 3. Set up environment variables\n\nCopy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nInside your environment, navigate to **Settings > Development > Access Tokens**.\n\nClick **Add access token**, enter the name `Next.js Preview` and add the scope `graphql_preview` and click **Save**.\n\nCopy the generated access token and set the variable `PREPRIO_PREVIEW_TOKEN` in `.env.local`.\n\nGo back to the Access token overview and click **Add access token**.\n\nEnter the name `Next.js Production` and add the scope `graphql_published` and click **Save**.\n\nCopy the generated access token and set the variable `PREPRIO_PRODUCTION_TOKEN` in `.env.local`.\n\nThe `PREPRIO_PREVIEW_KEY` can be any random string (but avoid spaces), like a UUID`, this is used\nfor [Preview Mode](https://nextjs.org/docs/advanced-features/preview-mode).\n\n### Step 4. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 5. Try preview mode\n\nIn Prepr, go to one of the posts in your environment and:\n\n- **Update the title**. For example, you can add `[REVIEW]` in front of the title.\n- After you edit the publication save the post with a review state.\n\nTo view the preview, transform the url to the following format: `http://localhost:3000/api/preview?secret=<YOUR_SECRET_TOKEN>&slug=<SLUG_TO_PREVIEW>` where `<YOUR_SECRET_TOKEN>` is\nthe same secret you defined in the `.env.local` file and `<SLUG_TO_PREVIEW>` is the slug of one of the posts you want to preview.\n\nYou should now be able to see post that are in Review and Done state. To exit the preview mode, you can click on _\"Click here to exit preview mode\"_ at the top.\n\n### Step 6. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-prepr&project-name=cms-prepr&repository-name=cms-prepr&env=PREPRIO_API,PREPRIO_PRODUCTION_TOKEN,PREPRIO_PREVIEW_TOKEN,PREPRIO_PREVIEW_KEY&envDescription=Required%20to%20connect%20the%20app%20with%20Prepr&envLink=https://vercel.link/cms-prepr-env)\n","contributors":[["tim-hanssen",1]]},{"name":"cms-prismic","title":"A statically generated blog example using Next.js and Prismic","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using [Prismic](https://prismic.io/) as the data source.\n\n## Demo\n\n### [https://next-blog-prismic.vercel.app/](https://next-blog-prismic.vercel.app/)\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-5-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-prismic&project-name=cms-prismic&repository-name=cms-prismic&env=PRISMIC_API_TOKEN,PRISMIC_REPOSITORY_NAME&envDescription=Required%20to%20connect%20the%20app%20with%20Prismic&envLink=https://vercel.link/cms-prismic-env)\n\n### Related examples\n\n- [WordPress](/examples/cms-wordpress)\n- [DatoCMS](/examples/cms-datocms)\n- [Sanity](/examples/cms-sanity)\n- [TakeShape](/examples/cms-takeshape)\n- [Contentful](/examples/cms-contentful)\n- [Strapi](/examples/cms-strapi)\n- [Agility CMS](/examples/cms-agilitycms)\n- [Cosmic](/examples/cms-cosmic)\n- [ButterCMS](/examples/cms-buttercms)\n- [Storyblok](/examples/cms-storyblok)\n- [Kontent](/examples/cms-kontent)\n- [Ghost](/examples/cms-ghost)\n- [Blog Starter](/examples/blog-starter)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example cms-prismic cms-prismic-app\n# or\nyarn create next-app --example cms-prismic cms-prismic-app\n```\n\n## Configuration\n\n### Step 1. Create an account and a repository on Prismic\n\nFirst, [create an account on Prismic](https://prismic.io/).\n\nAfter creating an account, create a **repository** from the [dashboard](https://prismic.io/dashboard/) and assign to it any name of your liking.\n\n### Step 2. Create an `author` type\n\nFrom the repository page, create a new **custom type**:\n\n- The name should be `author`.\n\nNext, add these fields (you don't have to modify the settings):\n\n- `name` - **Key Text** field\n- `picture` - **Image** field\n\nAlternatively, you can copy the JSON in [`types/author.json`](types/author.json), then click on **JSON editor** and paste it there.\n\nSave the type and continue.\n\n### Step 3. Create a `post` type\n\nFrom the repository page, create a new **custom type**:\n\n- The name should be `post`.\n\nNext, add these fields (you don't have to modify the settings unless specified):\n\n- `title` - **Title** field\n- `content` - **Rich Text** field\n- `excerpt` - **Key Text** field\n- `coverimage` - **Image** field\n- `date` - **Date** field\n- `author` - **Content relationship** field, you may also add `author` to the **Constraint to custom type** option to only accept documents from the `author` type.\n- `slug` - **UID** field.\n\nAlternatively, you can copy the JSON in [`types/post.json`](types/post.json), then click on **JSON editor** and paste it there.\n\nSave the type and continue.\n\n### Step 4. Populate Content\n\nGo to the **Content** page, it's in the menu at the top left, then click on **Create new** and select the **author** type:\n\n- You just need **1 author document**.\n- Use dummy data for the text.\n- For the image, you can download one from [Unsplash](https://unsplash.com/).\n\nNext, select **Post** and create a new document.\n\n- We recommend creating at least **2 Post documents**.\n- Use dummy data for the text.\n- You can write markdown for the **content** field.\n- For images, you can download them from [Unsplash](https://unsplash.com/).\n- Pick the **author** you created earlier.\n\n**Important:** For each document, you need to click **Publish** after saving. If not, the document will be in the draft state.\n\n### Step 5. Set up environment variables\n\nFollow the instructions in [this post](https://intercom.help/prismicio/en/articles/1036153-generating-an-access-token) to generate a new access token.\n\nNext, copy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local`:\n\n- `PRISMIC_API_TOKEN` should be the **Permanent access token** you just created\n- `PRISMIC_REPOSITORY_NAME` is the name of your repository (the one in the URL)\n- `PRISMIC_REPOSITORY_LOCALE` is the locale of your repository. Defaults to `en-us`\n\nYour `.env.local` file should look like this:\n\n```bash\nPRISMIC_API_TOKEN=...\nPRISMIC_REPOSITORY_NAME=...\nPRISMIC_REPOSITORY_LOCALE=...\n```\n\nMake sure the locale matches your settings in the Prismic dashboard.\n\n### Step 6. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 7. Try preview mode\n\nOn your repository page, go to **Settings**, click on **Previews** and then **Create a New Preview** for development, fill the form like so:\n\n- **Site Name**: may be anything, like `development`\n- **Domain of Your Application**: `http://localhost:3000`\n- **Link Resolver**: `/api/preview`\n\nOnce saved, go to one of the posts you've created and:\n\n- **Update the title**. For example, you can add `[Draft]` in front of the title.\n- Click **Save**, but **DO NOT** click **Publish**. By doing this, the post will be in draft state.\n- Right next to the **Publish** button you should see the **Preview** button, displayed with an eye icon. Click on it!\n\nYou should now be able to see the updated title. To exit preview mode, you can click on **Click here to exit preview mode** at the top of the page.\n\n### Step 8. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-prismic&project-name=cms-prismic&repository-name=cms-prismic&env=PRISMIC_API_TOKEN,PRISMIC_REPOSITORY_NAME&envDescription=Required%20to%20connect%20the%20app%20with%20Prismic&envLink=https://vercel.link/cms-prismic-env)\n","contributors":[["chibicode",7],["Timer",7],["lfades",6],["timneutkens",2],["timothyis",2],["jpedroschmitz",2],["AlexanderVishnevsky",1],["willianjusten",1],["b-bot",1],["ijjk",1],["jazibsawar",1],["motleydev",1],["tanmaylaud",1],["todortotev",1],["Simply007",1],["NorbertLuszkiewicz",1],["lucleray",1],["styxlab",1],["leerob",1]]},{"name":"cms-sanity","title":"A statically generated blog example using Next.js and Sanity","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using [Sanity](https://www.sanity.io/) as the data source.\n\n## Demo\n\n### [https://next-blog-sanity.vercel.app/](https://next-blog-sanity.vercel.app/)\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-4-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-sanity&project-name=cms-sanity&repository-name=cms-sanity&env=NEXT_PUBLIC_SANITY_PROJECT_ID,SANITY_API_TOKEN,SANITY_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20Sanity&envLink=https://vercel.link/cms-sanity-env)\n\n### Related examples\n\n- [WordPress](/examples/cms-wordpress)\n- [DatoCMS](/examples/cms-datocms)\n- [TakeShape](/examples/cms-takeshape)\n- [Prismic](/examples/cms-prismic)\n- [Contentful](/examples/cms-contentful)\n- [Strapi](/examples/cms-strapi)\n- [Agility CMS](/examples/cms-agilitycms)\n- [Cosmic](/examples/cms-cosmic)\n- [ButterCMS](/examples/cms-buttercms)\n- [Storyblok](/examples/cms-storyblok)\n- [GraphCMS](/examples/cms-graphcms)\n- [Kontent](/examples/cms-kontent)\n- [Ghost](/examples/cms-ghost)\n- [Blog Starter](/examples/blog-starter)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example cms-sanity cms-sanity-app\n# or\nyarn create next-app --example cms-sanity cms-sanity-app\n```\n\n## Configuration\n\n### Step 1. Create an account and a project on Sanity\n\nFirst, [create an account on Sanity](https://sanity.io).\n\nAfter creating an account, install the Sanity cli from npm `npm i -g @sanity/cli`.\n\n### Step 2. Create a new Sanity project\n\nIn a separate folder run `sanity init` to initialize a new studio project.\n\nThis will be where we manage our data.\n\nWhen going through the init phase make sure to select **Yes** to the **Use the default dataset configuration** step and select **Clean project with no predefined schemas** for the **Select project template** step.\n\n### Step 3. Generate an API token\n\nLog into https://manage.sanity.io/ and choose the project you just created. Then from **Settings**, select **API**, then click **Add New Token** and create a token with the **Read** permission.\n\n### Step 4. Set up environment variables\n\nCopy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local`:\n\n- `NEXT_PUBLIC_SANITY_PROJECT_ID` should be the `projectId` value from the `sanity.json` file created in step 2.\n- `NEXT_PUBLIC_SANITY_DATASET` should be the `dataset` value from the `sanity.json` file created in step 2 - defaults to `production` if not set.\n- `SANITY_API_TOKEN` should be the API token generated in the previous step.\n- `SANITY_PREVIEW_SECRET` can be any random string (but avoid spaces), like `MY_SECRET` - this is used for [Preview Mode](https://nextjs.org/docs/advanced-features/preview-mode).\n\nYour `.env.local` file should look like this:\n\n```bash\nNEXT_PUBLIC_SANITY_PROJECT_ID=...\nNEXT_PUBLIC_SANITY_DATASET=...\nSANITY_API_TOKEN=...\nSANITY_PREVIEW_SECRET=...\n```\n\n### Step 5. Prepare project for previewing\n\nGo to https://www.sanity.io/docs/preview-content-on-site and follow the three steps on that page. It should be done inside the studio project generated in Step 2.\n\nWhen you get to the second step about creating a file called `resolveProductionUrl.js`, copy the following instead:\n\n```js\nconst previewSecret = 'MY_SECRET' // Copy the string you used for SANITY_PREVIEW_SECRET\nconst projectUrl = 'http://localhost:3000'\n\nexport default function resolveProductionUrl(document) {\n  return `${projectUrl}/api/preview?secret=${previewSecret}&slug=${document.slug.current}`\n}\n```\n\n### Step 6. Copy the schema file\n\nAfter initializing your Sanity studio project there should be a `schemas` folder.\n\nReplace the contents of `schema.js` in the Sanity studio project directory with [`./schemas/schema.js`](./schemas/schema.js) in this example directory. This will set up the schema we’ll use this for this example.\n\n### Step 7. Populate Content\n\nTo add some content go to your Sanity studio project directory and run `sanity start`.\n\nAfter the project has started and you have navigated to the URL given in the terminal, select **Author** and create a new record.\n\n- You just need **1 Author record**.\n- Use dummy data for the text.\n- For the image, you can download one from [Unsplash](https://unsplash.com/).\n\nNext, select **Post** and create a new record.\n\n- We recommend creating at least **2 Post records**.\n- Use dummy data for the text.\n- You can write markdown for the **Content** field.\n- For the images, you can download ones from [Unsplash](https://unsplash.com/).\n- Pick the **Author** you created earlier.\n\n**Important:** For each post record, you need to click **Publish** after saving. If not, the post will be in the draft state.\n\n### Step 8. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 9. Try preview mode\n\nOn Sanity, go to one of the posts you've created and:\n\n- **Update the title**. For example, you can add `[Draft]` in front of the title.\n- As you edit the document it will be saved as a draft, but **DO NOT** click **Publish**. By doing this, the post will be in the draft state.\n\nNow, if you go to the post page on localhost, you won't see the updated title. However, if you use the **Preview Mode**, you'll be able to see the change ([Documentation](https://nextjs.org/docs/advanced-features/preview-mode)).\n\nTo view the preview, go to the post edit page on Sanity, click the three dots above the document and select **Open preview** ([see the instruction here](https://www.sanity.io/docs/preview-content-on-site))\n\nYou should now be able to see the updated title. To exit Preview Mode, you can click on _\"Click here to exit preview mode\"_ at the top.\n\n### Step 10. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-sanity&project-name=cms-sanity&repository-name=cms-sanity&env=NEXT_PUBLIC_SANITY_PROJECT_ID,SANITY_API_TOKEN,SANITY_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20Sanity&envLink=https://vercel.link/cms-sanity-env)\n","contributors":[["chibicode",8],["Timer",7],["lfades",6],["timneutkens",2],["ijjk",2],["timothyis",2],["queq1890",1],["jazibsawar",1],["motleydev",1],["darshkpatel",1],["tanmaylaud",1],["todortotev",1],["Simply007",1],["NorbertLuszkiewicz",1],["lucleray",1],["btk",1],["styxlab",1],["rexxars",1],["leerob",1]]},{"name":"cms-storyblok","title":"A statically generated blog example using Next.js and Storyblok","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using [Storyblok](https://www.storyblok.com/) as the data source.\n\n## Demo\n\n[https://next-blog-storyblok.vercel.app/](https://next-blog-storyblok.vercel.app/)\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-6-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-storyblok&project-name=cms-storyblok&repository-name=cms-storyblok&env=STORYBLOK_PREVIEW_SECRET,STORYBLOK_API_KEY&envDescription=Required%20to%20connect%20the%20app%20with%20Storyblok&envLink=https://vercel.link/cms-storyblok-env)\n\n### Related examples\n\n- [WordPress](/examples/cms-wordpress)\n- [DatoCMS](/examples/cms-datocms)\n- [Sanity](/examples/cms-sanity)\n- [TakeShape](/examples/cms-takeshape)\n- [Prismic](/examples/cms-prismic)\n- [Contentful](/examples/cms-contentful)\n- [Agility CMS](/examples/cms-agilitycms)\n- [Cosmic](/examples/cms-cosmic)\n- [Strapi](/examples/cms-strapi)\n- [ButterCMS](/examples/cms-buttercms)\n- [GraphCMS](/examples/cms-graphcms)\n- [Kontent](/examples/cms-kontent)\n- [Ghost](/examples/cms-ghost)\n- [Blog Starter](/examples/blog-starter)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example cms-storyblok cms-storyblok-app\n# or\nyarn create next-app --example cms-storyblok cms-storyblok-app\n```\n\n## Configuration\n\n### Step 1. Create an account on Storyblok\n\n[Create an account on Storyblok](https://app.storyblok.com/).\n\nWhen signing up, select **Create a new space**. Its name can be anything.\n\n### Step 2. Create the `Authors` folder\n\nFrom the dashboard, create a new folder called `Authors`.\n\n- For **Default content type**, select **Add new**.\n- Name of content type should be `author`.\n- Choose **Blank** as the content type blueprint.\n\n### Step 3. Create an `author` entry\n\nIn the `Authors` folder, create a new entry.\n\n- **Name** can be anything, such as `Test Author`.\n\nAfter creating the entry, click **Define schema**.\n\n- Add a key called `picture`. Then click `picture` and set the **Type** as **Asset** and select **Images**.\n\nThen upload an image to `picture`. You can use an [image from Unsplash](https://unsplash.com/).\n\nFinally, after uploading, click **Publish**.\n\n### Step 4. Create the `Posts` folder\n\nAfter publishing the author, go back to the dashboard by clicking **Content** on the sidebar.\n\nThis time, create a new folder called `Posts`.\n\n- For **Default content type**, select **Add new**.\n- Name of content type should be `post`.\n- Choose **Post** as the content type blueprint.\n\n### Step 5. Create a `post` entry\n\nIn the `Posts` folder, create a new entry.\n\n- **Name** can be anything.\n\nNow, populate each field.\n\n- **Title** can be any text.\n- **Image** can be an [image from Unsplash](https://unsplash.com/).\n- **Intro** can be any text.\n- **Long Text** can be any text.\n- **Author** should be the author created earlier.\n\nFinally, click **Publish**.\n\nYou can create more posts under the `Posts` folder. Make sure to publish each one.\n\n### Step 6. Set up environment variables\n\nGo to the **Settings** menu for your space, and click **API-Keys**.\n\nThen copy the **preview** token on the page.\n\nNext, copy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local`:\n\n- `STORYBLOK_API_KEY` should be the API key you just copied.\n- `STORYBLOK_PREVIEW_SECRET` can be any random string (but avoid spaces), like `MY_SECRET` - this is used for [the Preview Mode](https://nextjs.org/docs/advanced-features/preview-mode).\n\n### Step 7. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, you can post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 8. Try preview mode\n\nTo try preview mode, create another post like before (you can try duplicating), but **do not publish it - just save it**:\n\nNow, if you go to the post page on localhost, you won't see this post because it’s not published. However, if you use the **Preview Mode**, you'll be able to see the change ([Documentation](https://nextjs.org/docs/advanced-features/preview-mode)).\n\nTo enable the Preview Mode, go to this URL:\n\n```\nhttp://localhost:3000/api/preview?secret=<secret>&slug=<slug>\n```\n\n- `<secret>` should be the string you entered for `STORYBLOK_PREVIEW_SECRET`.\n- `<slug>` should be the post's `slug` (which can be seen on the **Config** section).\n\nYou should now be able to see the draft post. To exit the preview mode, you can click **Click here to exit preview mode** at the top.\n\n### Step 9. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-storyblok&project-name=cms-storyblok&repository-name=cms-storyblok&env=STORYBLOK_PREVIEW_SECRET,STORYBLOK_API_KEY&envDescription=Required%20to%20connect%20the%20app%20with%20Storyblok&envLink=https://vercel.link/cms-storyblok-env)\n","contributors":[["chibicode",3],["lfades",2],["lucleray",2],["motleydev",1],["tanmaylaud",1],["rokinsky",1],["todortotev",1],["Simply007",1],["NorbertLuszkiewicz",1],["Timer",1],["styxlab",1],["leerob",1]]},{"name":"cms-strapi","title":"A statically generated blog example using Next.js and Strapi","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using [Strapi](https://strapi.io/) as the data source.\n\n## Demo\n\n[https://next-blog-strapi.vercel.app/](https://next-blog-strapi.vercel.app/)\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-7-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-strapi&project-name=cms-strapi&repository-name=cms-strapi&env=STRAPI_PREVIEW_SECRET,NEXT_PUBLIC_STRAPI_API_URL&envDescription=Required%20to%20connect%20the%20app%20with%20Strapi&envLink=https://vercel.link/cms-strapi-env)\n\n### Related examples\n\n- [WordPress](/examples/cms-wordpress)\n- [DatoCMS](/examples/cms-datocms)\n- [Sanity](/examples/cms-sanity)\n- [TakeShape](/examples/cms-takeshape)\n- [Prismic](/examples/cms-prismic)\n- [Contentful](/examples/cms-contentful)\n- [Agility CMS](/examples/cms-agilitycms)\n- [Cosmic](/examples/cms-cosmic)\n- [ButterCMS](/examples/cms-buttercms)\n- [Storyblok](/examples/cms-storyblok)\n- [GraphCMS](/examples/cms-graphcms)\n- [Kontent](/examples/cms-kontent)\n- [Ghost](/examples/cms-ghost)\n- [Blog Starter](/examples/blog-starter)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example cms-strapi cms-strapi-app\n# or\nyarn create next-app --example cms-strapi cms-strapi-app\n```\n\n## Configuration\n\n### Step 1. Set up Strapi locally\n\n[Follow the instructions on this page](https://strapi.io/documentation/developer-docs/latest/getting-started/quick-start.html#_1-install-strapi-and-create-a-new-project) to create a Strapi project locally.\n\n```bash\nnpx create-strapi-app my-project --quickstart\nnpm run develop # or: yarn develop\n```\n\nThis will open http://localhost:1337/ and prompt you to create an admin user.\n\n### Step 2. Install GraphQL for Strapi\n\nInside the Strapi directory, stop the server, [install GraphQL](https://strapi.io/documentation/v3.x/plugins/graphql.html), and restart the server:\n\n```bash\n# If using Yarn: yarn strapi install graphql\nnpm run strapi install graphql\n\nnpm run develop # or: yarn develop\n```\n\n### Step 3. Create an `Author` collection\n\nFrom **Content-Types Builder**, **create a new collection type**.\n\n- The display name should be `Author`.\n\nNext, add these fields (you don't have to modify the settings):\n\n- **Text** field called **`name`** (**Short text**)\n- **Media** field called **`picture`** (**Single media**)\n\nThen click **Save**.\n\n### Step 4. Create a `Post` collection\n\nFrom **Content-Types Builder**, **create a new collection type**.\n\n- The display name should be `Post`.\n\nNext, add these fields (you don't have to modify the settings unless specified):\n\n- **Text** field called **`title`** (**Short text**)\n- **Rich Text** field called **`content`** (**Multiple-paragraph Text**)\n- **Text** field called **`excerpt`** (**Long text**)\n- **Media** field called **`coverImage`** (**Single media**)\n- **Date** field called **`date`** (type should be **date**)\n- **UID** field called **`slug`** (attached field should be **title**)\n- **Relation** field called **`author`** (Post **has one** Author)\n- **Enumeration** field `status` (the values should be **published** and **draft**)\n\n### Step 5. Set permissions\n\nFrom **Settings, Users & Permissions, Roles**, edit the **Public** role.\n\nThen select: `count`, `find`, and `findone` permissions for both **Author** and **Post**. Click **Save**.\n\n### Step 6. Populate Content\n\nSelect **Author** and click **Add New Author**.\n\n- You just need **1 Author entry**.\n- Use dummy data for the name.\n- For the image, you can download one from [Unsplash](https://unsplash.com/).\n\nNext, select **Posts** and click **Add New Post**.\n\n- We recommend creating at least **2 Post records**.\n- Use dummy data for the text.\n- You can write markdown for the **content** field.\n- For the images, you can download ones from [Unsplash](https://unsplash.com/).\n- Pick the **Author** you created earlier.\n- Set the **status** field to be **published**.\n\n### Step 7. Set up environment variables\n\nWhile the Strapi server is running, open a new terminal and `cd` into the Next.js app directory you created earlier.\n\n```\ncd cms-strapi-app\n```\n\nCopy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local`:\n\n- `STRAPI_PREVIEW_SECRET` can be any random string (but avoid spaces), like `MY_SECRET` - this is used for [Preview Mode](https://nextjs.org/docs/advanced-features/preview-mode).\n- `NEXT_PUBLIC_STRAPI_API_URL` should be set as `http://localhost:1337` (no trailing slash).\n\n### Step 8. Run Next.js in development mode\n\nMake sure that the local Strapi server is still running at http://localhost:1337. Inside the Next.js app directory, run:\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! You should see the two posts you’ve created. If it doesn't work, make sure that:\n\n- You’ve installed GraphQL to Strapi on Step 2.\n- You’ve set the Roles & Permissions in Step 5.\n- You’ve set the `status` of each post to be `published` in Step 6.\n\nThe best place to debug is inside the `fetchAPI` function in `lib/api.js`. If you still need help, you can post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 9. Try preview mode\n\nTo try preview mode, create another post like before, but:\n\n- Set the **title** as `Draft Post Test`\n- Set the **status** as `draft`.\n\nNow, if you go to the post page on localhost, you won't see this post because it’s not published. However, if you use the **Preview Mode**, you'll be able to see the change ([Documentation](https://nextjs.org/docs/advanced-features/preview-mode)).\n\nTo enable the Preview Mode, go to this URL:\n\n```\nhttp://localhost:3000/api/preview?secret=<secret>&slug=draft-post-test\n```\n\n- `<secret>` should be the string you entered for `STRAPI_PREVIEW_SECRET`.\n- `<slug>` should be the post's `slug` attribute.\n\nYou should now be able to see the draft post. To exit the preview mode, you can click **Click here to exit preview mode** at the top.\n\n### Step 10. Deploy Strapi\n\nTo deploy to production, you must first deploy your Strapi app. The Strapi app for our demo at https://next-blog-strapi.vercel.app/ is deployed to Heroku ([here’s the documentation](https://strapi.io/documentation/developer-docs/latest/setup-deployment-guides/deployment/hosting-guides/heroku.html)) and uses Cloudinary for image hosting ([see this file](https://github.com/strapi/strapi-starter-next-blog/blob/23b184781a3f219ad472f6a2c3a3d239a3d16513/backend/extensions/upload/config/settings.js)).\n\n### Step 11. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-strapi&project-name=cms-strapi&repository-name=cms-strapi&env=STRAPI_PREVIEW_SECRET,NEXT_PUBLIC_STRAPI_API_URL&envDescription=Required%20to%20connect%20the%20app%20with%20Strapi&envLink=https://vercel.link/cms-strapi-env)\n","contributors":[["chibicode",6],["lfades",3],["Timer",2],["lucleray",2],["jazibsawar",1],["adam-zacharski",1],["M1ck0",1],["motleydev",1],["tanmaylaud",1],["rokinsky",1],["todortotev",1],["Simply007",1],["NorbertLuszkiewicz",1],["justinwhall",1],["styxlab",1],["harshitsan",1],["leerob",1]]},{"name":"cms-takeshape","title":"A statically generated blog example using Next.js and TakeShape","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using [TakeShape](https://www.takeshape.io/) as the data source.\n\n## Demo\n\n### [https://next-blog-takeshape.vercel.app/](https://next-blog-takeshape.vercel.app/)\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-5-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-takeshape&project-name=cms-takeshape&repository-name=cms-takeshape&env=TAKESHAPE_PROJECT_ID,TAKESHAPE_API_KEY,TAKESHAPE_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20TakeShape&envLink=https://vercel.link/cms-takeshape-env)\n\n### Related examples\n\n- [WordPress](/examples/cms-wordpress)\n- [DatoCMS](/examples/cms-datocms)\n- [Sanity](/examples/cms-sanity)\n- [Prismic](/examples/cms-prismic)\n- [Contentful](/examples/cms-contentful)\n- [Strapi](/examples/cms-strapi)\n- [Agility CMS](/examples/cms-agilitycms)\n- [Cosmic](/examples/cms-cosmic)\n- [ButterCMS](/examples/cms-buttercms)\n- [Storyblok](/examples/cms-storyblok)\n- [GraphCMS](/examples/cms-graphcms)\n- [Kontent](/examples/cms-kontent)\n- [Ghost](/examples/cms-ghost)\n- [Blog Starter](/examples/blog-starter)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example cms-takeshape cms-takeshape-app\n# or\nyarn create next-app --example cms-takeshape cms-takeshape-app\n```\n\n## Configuration\n\n### Step 1. Create an account and a project on TakeShape\n\nFirst, [create an account on TakeShape](https://www.takeshape.io/).\n\nAfter creating an account, create a **new project** from the dashboard. You can select a **Blank Project**.\n\n### Step 2. Create an `Author` model\n\nFrom the project settings page, create a new **content type**.\n\n- The title should be `Author`.\n\nNext, drag these widgets:\n\n- **Single Line** widget: Set the title as **Name**.\n- **Asset** widget: Set the title as **Picture**.\n\nWhen you’re done, click \"Create Content Type\".\n\n### Step 3. Create a `Post` model\n\nClick **Add Content Type** again.\n\n- The title should be `Post`.\n\nNext, add these fields (you don't have to modify the settings unless specified):\n\n- **Single Line** widget: Set the title as **Title**.\n- **Markdown** widget: Set the title as **Content**.\n- **Single Line** widget: Set the title as **Excerpt**.\n- **Asset** widget: Set the title as **Cover Image**.\n- **Date** widget: Set the title as **Date**.\n- **Single Line** widget: Set the title as **Slug**.\n- **Relationship** widget: Set the title as **Author**, then set **Relationship Type** to `Single` and check the `Author` checkbox under **Allowed Content Types**.\n\nWhen you’re done, click \"Create Content Type\".\n\n### Step 4. Populate Content\n\nSelect **Author** and create a new record.\n\n- You just need **1 Author record**.\n- Use dummy data for the text.\n- For the image, you can download one from [Unsplash](https://unsplash.com/).\n\nWhen you’re done, make sure to click **Enabled** under **Workflow Status**.\n\nNext, select **Post** and create a new record.\n\n- We recommend creating at least **2 Post records**.\n- Use dummy data for the text.\n- You can write markdown for the **Content** field.\n- For the images, you can download ones from [Unsplash](https://unsplash.com/).\n- Pick the **Author** you created earlier.\n\nWhen you’re done, make sure to click **Enabled** under **Workflow Status**.\n\n### Step 5. Set up environment variables\n\nFrom the dropdown next to the project name, click **API Keys**.\n\nCreate a new API Key with the **Read** permission.\n\nNext, copy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local`:\n\n- `TAKESHAPE_API_KEY` should be the API token you just copied.\n- `TAKESHAPE_PROJECT_ID` should be the project ID, which is a substring in the project page URL: `https://app.takeshape.io/projects/<project-id>/...`\n- `TAKESHAPE_PREVIEW_SECRET` can be any random string (but avoid spaces), like `MY_SECRET` - this is used for [the Preview Mode](https://nextjs.org/docs/advanced-features/preview-mode).\n\nYour `.env.local` file should look like this:\n\n```bash\nTAKESHAPE_PROJECT_ID=...\nTAKESHAPE_API_KEY=...\nTAKESHAPE_PREVIEW_SECRET=...\n```\n\n### Step 6. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 7. Try preview mode\n\nOn TakeShape, create a new post like before. But **DO NOT** click **Enabled** under **Workflow Status**.\n\nNow, if you go to `http://localhost:3000/posts/<slug>` (replace `<slug>`), you won’t see the post. However, if you use the **Preview Mode**, you'll be able to see the change ([Documentation](https://nextjs.org/docs/advanced-features/preview-mode)).\n\nTo enable the Preview Mode, go to this URL:\n\n```\nhttp://localhost:3000/api/preview?secret=<secret>&slug=<slug>\n```\n\n- `<secret>` should be the string you entered for `TAKESHAPE_PREVIEW_SECRET`.\n- `<slug>` should be the post's `slug` attribute (you can check on TakeShape).\n\nYou should now be able to see this post. To exit the preview mode, you can click **Click here to exit preview mode** at the top.\n\n### Step 8. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-takeshape&project-name=cms-takeshape&repository-name=cms-takeshape&env=TAKESHAPE_PROJECT_ID,TAKESHAPE_API_KEY,TAKESHAPE_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20TakeShape&envLink=https://vercel.link/cms-takeshape-env)\n","contributors":[["chibicode",8],["Timer",7],["lfades",5],["timneutkens",2],["timothyis",2],["queq1890",1],["willianjusten",1],["ijjk",1],["jazibsawar",1],["motleydev",1],["tanmaylaud",1],["rokinsky",1],["todortotev",1],["Simply007",1],["NorbertLuszkiewicz",1],["lucleray",1],["styxlab",1],["leerob",1]]},{"name":"cms-wordpress","title":"A statically generated blog example using Next.js and WordPress","description":"\nThis example showcases Next.js's [Static Generation](https://nextjs.org/docs/basic-features/pages) feature using [WordPress](https://wordpress.org) as the data source.\n\n## Demo\n\n### [https://next-blog-wordpress.vercel.app](https://next-blog-wordpress.vercel.app)\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-3-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-wordpress&project-name=cms-wordpress&repository-name=cms-wordpress&env=WORDPRESS_API_URL&envDescription=Required%20to%20connect%20the%20app%20with%20WordPress&envLink=https://vercel.link/cms-wordpress-env)\n\n### Related examples\n\n- [DatoCMS](/examples/cms-datocms)\n- [Sanity](/examples/cms-sanity)\n- [TakeShape](/examples/cms-takeshape)\n- [Prismic](/examples/cms-prismic)\n- [Contentful](/examples/cms-contentful)\n- [Strapi](/examples/cms-strapi)\n- [Agility CMS](/examples/cms-agilitycms)\n- [Cosmic](/examples/cms-cosmic)\n- [ButterCMS](/examples/cms-buttercms)\n- [Storyblok](/examples/cms-storyblok)\n- [GraphCMS](/examples/cms-graphcms)\n- [Kontent](/examples/cms-kontent)\n- [Ghost](/examples/cms-ghost)\n- [Blog Starter](/examples/blog-starter)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example cms-wordpress cms-wordpress-app\n# or\nyarn create next-app --example cms-wordpress cms-wordpress-app\n```\n\n## Configuration\n\n### Step 1. Prepare your WordPress site\n\nFirst, you need a WordPress site. There are many solutions for WordPress hosting, such as [WP Engine](https://wpengine.com/) and [WordPress.com](https://wordpress.com/).\n\nOnce the site is ready, you'll need to install the [WPGraphQL](https://www.wpgraphql.com/) plugin. It will add GraphQL API to your WordPress site, which we'll use to query the posts. Follow these steps to install it:\n\n- Download the [WPGraphQL repo](https://github.com/wp-graphql/wp-graphql) as a ZIP archive.\n- Inside your WordPress admin, go to **Plugins** and then click **Add New**.\n\n![Add new plugin](./docs/plugins-add-new.png)\n\n- Click the **Upload Plugin** button at the top of the page and upload the WPGraphQL plugin.\n\n![Upload new plugin](./docs/plugins-upload-new.png)\n\n- Once the plugin has been added, activate it from either the **Activate Plugin** button displayed after uploading or from the **Plugins** page.\n\n![WPGraphQL installed](./docs/plugin-installed.png)\n\n#### Optional: Add WPGraphiQL\n\nThe [WPGraphiQL](https://github.com/wp-graphql/wp-graphiql) plugin gives you access to a GraphQL IDE directly from your WordPress Admin, allowing you to inspect and play around with the GraphQL API.\n\nThe process to add WPGraphiQL is the same as the one for WPGraphQL: Go to the [WPGraphiQL repo](https://github.com/wp-graphql/wp-graphiql), download the ZIP archive, and install it as a plugin in your WordPress site. Once that's done you should be able to access the GraphiQL page in the admin:\n\n![WPGraphiQL page](./docs/wp-graphiql.png)\n\n### Step 2. Populate Content\n\nInside your WordPress admin, go to **Posts** and start adding new posts:\n\n- We recommend creating at least **2 posts**\n- Use dummy data for the content\n- Pick an author from your WordPress users\n- Add a **Featured Image**. You can download one from [Unsplash](https://unsplash.com/)\n- Fill the **Excerpt** field\n\n![New post](./docs/new-post.png)\n\nWhen you’re done, make sure to **Publish** the posts.\n\n> **Note:** Only **published** posts and public fields will be rendered by the app unless [Preview Mode](https://nextjs.org/docs/advanced-features/preview-mode) is enabled.\n\n### Step 3. Set up environment variables\n\nCopy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen open `.env.local` and set `WORDPRESS_API_URL` to be the URL to your GraphQL endpoint in WordPress. For example: `https://myapp.wpengine.com/graphql`.\n\nYour `.env.local` file should look like this:\n\n```bash\nWORDPRESS_API_URL=...\n\n# Only required if you want to enable preview mode\n# WORDPRESS_AUTH_REFRESH_TOKEN=\n# WORDPRESS_PREVIEW_SECRET=\n```\n\n### Step 4. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour blog should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 5. Add authentication for Preview Mode (Optional)\n\n**This step is optional.** By default, the blog will work with public posts from your WordPress site. Private content such as unpublished posts and private fields cannot be retrieved. To have access to unpublished posts you'll need to set up authentication.\n\nTo add [authentication to WPGraphQL](https://docs.wpgraphql.com/guides/authentication-and-authorization/), first you need to add the [WPGraphQL JWT plugin](https://github.com/wp-graphql/wp-graphql-jwt-authentication) to your WordPress Admin following the same process you used to add the WPGraphQL plugin.\n\n> Adding the WPGraphQL JWT plugin will disable your GraphQL API until you add a JWT secret ([GitHub issue](https://github.com/wp-graphql/wp-graphql-jwt-authentication/issues/91)).\n\nOnce that's done, you'll need to access the WordPress filesystem to add the secret required to validate JWT tokens. We recommend using SFTP — the instructions vary depending on your hosting provider. For example:\n\n- [SFTP guide for WP Engine](https://wpengine.com/support/sftp/)\n- [SFTP guide for WordPress.com](https://wordpress.com/support/sftp/)\n\nOnce you have SFTP access, open `wp-config.php` and add a secret for your JWT:\n\n```php\ndefine( 'GRAPHQL_JWT_AUTH_SECRET_KEY', 'YOUR_STRONG_SECRET' );\n```\n\n> You can read more about this in the documentation for [WPGraphQL JWT Authentication](https://docs.wpgraphql.com/extensions/wpgraphql-jwt-authentication/).\n\nNow, you need to get a **refresh token** to make authenticated requests with GraphQL. Make the following GraphQL mutation to your WordPress site from the GraphQL IDE (See notes about WPGraphiQL from earlier). Replace `your_username` with the **username** of a user with the `Administrator` role, and `your_password` with the user's password.\n\n```graphql\nmutation Login {\n  login(\n    input: {\n      clientMutationId: \"uniqueId\"\n      password: \"your_password\"\n      username: \"your_username\"\n    }\n  ) {\n    refreshToken\n  }\n}\n```\n\nCopy the `refreshToken` returned by the mutation, then open `.env.local`, and make the following changes:\n\n- Uncomment `WORDPRESS_AUTH_REFRESH_TOKEN` and set it to be the `refreshToken` you just received.\n- Uncomment `WORDPRESS_PREVIEW_SECRET` and set it to be any random string (ideally URL friendly).\n\nYour `.env.local` file should look like this:\n\n```bash\nWORDPRESS_API_URL=...\n\n# Only required if you want to enable preview mode\nWORDPRESS_AUTH_REFRESH_TOKEN=...\nWORDPRESS_PREVIEW_SECRET=...\n```\n\n**Important:** Restart your Next.js server to update the environment variables.\n\n### Step 6. Try preview mode\n\nOn your WordPress admin, create a new post like before, but **do not publish** it.\n\nNow, if you go to `http://localhost:3000`, you won’t see the post. However, if you enable **Preview Mode**, you'll be able to see the change ([Documentation](https://nextjs.org/docs/advanced-features/preview-mode)).\n\nTo enable Preview Mode, go to this URL:\n\n```\nhttp://localhost:3000/api/preview?secret=<secret>&id=<id>\n```\n\n- `<secret>` should be the string you entered for `WORDPRESS_PREVIEW_SECRET`.\n- `<id>` should be the post's `databaseId` field, which is the integer that you usually see in the URL (`?post=18` → 18).\n- Alternatively, you can use `<slug>` instead of `<id>`. `<slug>` is generated based on the title.\n\nYou should now be able to see this post. To exit Preview Mode, you can click on **Click here to exit preview mode** at the top.\n\n### Step 7. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/cms-wordpress&project-name=cms-wordpress&repository-name=cms-wordpress&env=WORDPRESS_API_URL&envDescription=Required%20to%20connect%20the%20app%20with%20WordPress&envLink=https://vercel.link/cms-wordpress-env)\n","contributors":[["chibicode",5],["lfades",4],["Timer",2],["lucleray",2],["jazibsawar",1],["motleydev",1],["tomasztunik",1],["jplew",1],["tanmaylaud",1],["todortotev",1],["Simply007",1],["NorbertLuszkiewicz",1],["ospira",1],["styxlab",1],["leerob",1]]},{"name":"custom-routes-proxying","title":"Custom Routes Proxying Example","description":"\nThis example shows the most basic example using Next.js' new custom routes feature to proxy requests to an upstream server. We have 3 pages: `pages/index.js`, `pages/about.js`, and `pages/hello/[slug].js`. All of these pages will be matched against Next.js and any other path will be proxied to the upstream server.\n\nThis approach is very helpful when you are trying to incrementally migrate your application to Next.js but still need to fallback to an existing application. You can add pages to your Next.js application one-by-one and then for non-migrated pages Next.js can proxy to the existing application until they are able to be migrated.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example custom-routes-proxying custom-routes-proxying-app\n# or\nyarn create next-app --example custom-routes-proxying custom-routes-proxying-app\n```\n\n### Step 4. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nTest out visiting one of the Next.js pages https://localhost:3000/ and then a non-Next.js page like http://localhost:3000/legacy-first.html or http://localhost:3000/another-legacy.html which will be proxied to the upstream server since it doesn't match any pages/assets in Next.js.\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)). Note: to deploy this example you will need to configure an existing upstream server.\n","contributors":[["ijjk",3],["jamesmosier",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["Timer",1],["lucleray",1]]},{"name":"custom-server","title":"Custom server example","description":"\nMost of the times the default Next server will be enough but sometimes you want to run your own server to customize routes or other kind of the app behavior. Next provides a [Custom server and routing](https://github.com/vercel/next.js#custom-server-and-routing) so you can customize as much as you want.\n\nThe example shows a server that serves the component living in `pages/a.js` when the route `/b` is requested and `pages/b.js` when the route `/a` is accessed. This is obviously a non-standard routing strategy. You can see how this custom routing is being made inside `server.js`.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example custom-server custom-server-app\n# or\nyarn create next-app --example custom-server custom-server-app\n```\n","contributors":[["timneutkens",7],["Timer",6],["nkzawa",5],["chibicode",3],["impronunciable",2],["jthegedus",2],["arunoda",1],["sedubois",1],["sakulstra",1],["paulmolluzzo",1],["HaNdTriX",1],["brikou",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["vgrafe",1],["dav-is",1],["lfades",1],["liulanz",1],["joemccann",1],["willianjusten",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["awareness481",1]]},{"name":"custom-server-actionhero","title":"Running Next.JS and React /inside/ of ActionHero","description":"\nThis server will render dynamic next.js/react pages on some routes, and normal ActionHero API requests on others.<br>\nThis configuration works with both Next and ActionHero hot reloading of code.\n\nA more detailed example showcasing how to use fetch and web sockets to interact with your API can be found here: https://github.com/actionhero/next-in-actionhero\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example custom-server-actionhero custom-server-actionhero-app\n# or\nyarn create next-app --example custom-server-actionhero custom-server-actionhero-app\n```\n\n## How does this work?\n\n1. Create an initializer to load next.js and create a handler that can extract the normal node `req` and `res` from the connection\n\n```js\n// initializers/next.js\n\nconst { Initializer, api } = require('actionhero')\nconst next = require('next')\n\nmodule.exports = class NextInitializer extends Initializer {\n  constructor() {\n    super()\n    this.name = 'next'\n  }\n\n  async initialize() {\n    api.next = {\n      render: async (connection) => {\n        if (connection.type !== 'web') {\n          throw new Error('Connections for NEXT apps must be of type \"web\"')\n        }\n        const req = connection.rawConnection.req\n        const res = connection.rawConnection.res\n        return api.next.handle(req, res)\n      },\n    }\n\n    api.next.dev = api.env === 'development'\n    if (api.next.dev) {\n      api.log('Running next in development mode...')\n    }\n\n    api.next.app = next({ dev: api.next.dev })\n    api.next.handle = api.next.app.getRequestHandler()\n    await api.next.app.prepare()\n  }\n\n  async stop() {\n    await api.next.app.close()\n  }\n}\n```\n\n2.  Create an action which will run the above `api.next.render(connection)`. Note that we will not be relying on ActionHero to respond to the client's request in this case, and leave that up to next (via: `data.toRender = false`)\n\n```js\n// actions/next.js\n\nconst { Action, api } = require('actionhero')\n\nmodule.exports = class CreateChatRoom extends Action {\n  constructor() {\n    super()\n    this.name = 'render'\n    this.description = 'I render the next.js react website'\n  }\n\n  async run(data) {\n    data.toRender = false\n    return api.next.render(data.connection)\n  }\n}\n```\n\n3. Tell ActionHero to use the api rather than the file server as the top-level route in `api.config.servers.web.rootEndpointType = 'api'`. This will allows \"/\" to listen to API requests. Also update `api.config.general.paths.public = [ path.join(__dirname, '/../static') ]`. In this configuration, the next 'static' renderer will take priority over the ActionHero 'public file' api. Note that any static assets (CSS, fonts, etc) will need to be in \"./static\" rather than \"./public\".\n\nNote that this is where the websocket server, if you enable it, will place the `ActionheroWebsocketClient` library.<br>\n\n4.  Configure a wild-card route at the lowest priority of your GET handler to catch all web requests that aren't caught by other actions:\n\n```js\n// config/routes.js\n\nexports['default'] = {\n  routes: (api) => {\n    return {\n      get: [\n        { path: '/time', action: 'time' },\n\n        { path: '/', matchTrailingPathParts: true, action: 'render' },\n      ],\n    }\n  },\n}\n```\n","contributors":[["Timer",7],["timneutkens",4],["willianjusten",2],["evantahler",1],["jthegedus",1],["mherodev",1],["HaNdTriX",1],["j0lv3r4",1],["lfades",1],["chibicode",1],["MichelleLucero",1],["ijjk",1],["tanmaylaud",1],["Necmttn",1],["NorbertLuszkiewicz",1],["merceyz",1],["eltociear",1]]},{"name":"custom-server-express","title":"Custom Express Server example","description":"\nMost of the time the default Next.js server will be enough but there are times you'll want to run your own server to customize routes or other kinds of app behavior. Next.js provides [Custom server and routing](https://github.com/vercel/next.js#custom-server-and-routing) options, so you can customize as much as you want.\n\nBecause the Next.js server is just a node.js module you can combine it with any other part of the node.js ecosystem. In this case we are using express to build a custom router on top of Next.\n\nThis example demonstrates a server that serves the component living in `pages/a.js` when the route `/b` is requested and `pages/b.js` when the route `/a` is accessed. This is obviously a non-standard routing strategy. You can see how this custom routing is being made inside `server.js`.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example custom-server-express custom-server-express-app\n# or\nyarn create next-app --example custom-server-express custom-server-express-app\n```\n\n### Populate body property\n\nWithout the use of body parsing middleware `req.body` will return undefined. To get express to populate `req.body` you need to use middleware within server.js:\n\n```js\napp.prepare().then(() => {\n  const server = express()\n  server.use(express.urlencoded({ extended: true }))\n  server.use(express.json())\n})\n```\n","contributors":[["Timer",7],["timneutkens",6],["nkzawa",5],["chibicode",3],["rauchg",2],["impronunciable",2],["sedubois",2],["jthegedus",2],["lfades",2],["arunoda",1],["sakulstra",1],["paulmolluzzo",1],["HaNdTriX",1],["brikou",1],["viniciusCamargo",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["vgrafe",1],["nguyenkhois",1],["dav-is",1],["chentsulin",1],["matamatanot",1],["liulanz",1],["connormcwood",1],["mvfsillva",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["mattruby",1],["RayhanADev",1],["xCloudzx",1]]},{"name":"custom-server-fastify","title":"Custom Fastify Server example","description":"\nMost of the times the default Next server will be enough but sometimes you want to run your own server to customize routes or other kind of the app behavior. Next provides a [Custom server and routing](https://github.com/vercel/next.js#custom-server-and-routing) so you can customize as much as you want.\n\nBecause the Next.js server is just a node.js module you can combine it with any other part of the node.js ecosystem. in this case we are using [Fastify](https://github.com/fastify/fastify) to build a custom router on top of Next.\n\nThe example shows a server that serves the component living in `pages/a.js` when the route `/b` is requested and `pages/b.js` when the route `/a` is accessed. This is obviously a non-standard routing strategy. You can see how this custom routing is being made inside `server.js`.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example custom-server-fastify custom-server-fastify-app\n# or\nyarn create next-app --example custom-server-fastify custom-server-fastify-app\n```\n","contributors":[["Timer",7],["timneutkens",6],["chibicode",3],["jthegedus",2],["vorillaz",1],["sdaves",1],["fouad",1],["mherodev",1],["brainkim",1],["j0lv3r4",1],["vgrafe",1],["crutchcorn",1],["dav-is",1],["mcsdevv",1],["lfades",1],["chentsulin",1],["bobaaaaa",1],["MicrochipQ",1],["mvfsillva",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1]]},{"name":"custom-server-hapi","title":"Custom server using Hapi example","description":"\nMost of the times the default Next server will be enough but sometimes you want to run your own server to customize routes or other kind of the app behavior. Next provides a [Custom server and routing](https://github.com/vercel/next.js#custom-server-and-routing) so you can customize as much as you want.\n\nBecause the Next.js server is just a node.js module you can combine it with any other part of the node.js ecosystem. in this case we are using [Hapi](https://hapijs.com) to build a custom router on top of Next.\n\nThe example shows a server that serves the component living in `pages/a.js` when the route `/b` is requested and `pages/b.js` when the route `/a` is accessed. This is obviously a non-standard routing strategy. You can see how this custom routing is being made inside `server.js`.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example custom-server-hapi custom-server-hapi-app\n# or\nyarn create next-app --example custom-server-hapi custom-server-hapi-app\n```\n","contributors":[["Timer",8],["timneutkens",6],["chibicode",3],["sfhardman",2],["jthegedus",2],["eperedo",2],["impronunciable",1],["sedubois",1],["herschel666",1],["sakulstra",1],["paulmolluzzo",1],["HaNdTriX",1],["brikou",1],["fouad",1],["tiborv",1],["mherodev",1],["j0lv3r4",1],["jepser",1],["IvanJov",1],["dav-is",1],["lfades",1],["chentsulin",1],["mvfsillva",1],["ijjk",1],["tanmaylaud",1],["madiknox",1],["NorbertLuszkiewicz",1],["Akumzy",1]]},{"name":"custom-server-koa","title":"Custom Koa Server example","description":"\nMost of the times the default Next server will be enough but sometimes you want to run your own server to customize routes or other kind of the app behavior. Next provides a [Custom server and routing](https://nextjs.org/docs/advanced-features/custom-server) so you can customize as much as you want.\n\nBecause the Next.js server is just a node.js module you can combine it with any other part of the node.js ecosystem. in this case we are using [Koa](https://koajs.com/) to build a custom router on top of Next.\n\nThe example shows a server that serves the component living in `pages/a.js` when the route `/b` is requested and `pages/b.js` when the route `/a` is accessed. This is obviously a non-standard routing strategy. You can see how this custom routing is being made inside `server.js`.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example custom-server-koa custom-server-koa-app\n# or\nyarn create next-app --example custom-server-koa custom-server-koa-app\n```\n\n## Side note: Enabling gzip compression\n\nThe most common Koa middleware for handling the gzip compression is [compress](https://github.com/koajs/compress), but unfortunately it is currently not compatible with Next.<br>\n`koa-compress` handles the compression of the response body by checking `res.body`, which will be empty in the case of the routes handled by Next (because Next sends and ends the response by itself).\n\nIf you need to enable the gzip compression, the most simple way to do so is by wrapping the express-middleware [compression](https://github.com/expressjs/compression) with [koa-connect](https://github.com/vkurchatkin/koa-connect):\n\n```javascript\nconst compression = require('compression')\nconst koaConnect = require('koa-connect')\n\nserver.use(koaConnect(compression()))\n```\n","contributors":[["timneutkens",7],["Timer",7],["chibicode",3],["jthegedus",2],["impronunciable",1],["arunoda",1],["sakulstra",1],["aranajhonny",1],["paulmolluzzo",1],["HaNdTriX",1],["brikou",1],["mmazzarolo",1],["fouad",1],["egorovli",1],["mherodev",1],["j0lv3r4",1],["vgrafe",1],["dav-is",1],["mcsdevv",1],["lfades",1],["chentsulin",1],["Nainterceptor",1],["pkuczynski",1],["mvfsillva",1],["ijjk",1],["HyunSangHan",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["NoobTW",1],["xom9ikk",1]]},{"name":"custom-server-polka","title":"Custom [Polka](https://github.com/lukeed/polka) Server example","description":"\nMost of the times the default Next server will be enough but sometimes you want to run your own server to customize routes or other kind of the app behavior. Next provides a [Custom server and routing](https://github.com/vercel/next.js#custom-server-and-routing) so you can customize as much as you want.\n\nBecause the Next.js server is just a node.js module you can combine it with any other part of the node.js ecosystem. in this case we are using express to build a custom router on top of Next.\n\nThe example shows a server that serves the component living in `pages/a.js` when the route `/b` is requested and `pages/b.js` when the route `/a` is accessed. This is obviously a non-standard routing strategy. You can see how this custom routing is being made inside `server.js`.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example custom-server-polka custom-server-polka-app\n# or\nyarn create next-app --example custom-server-polka custom-server-polka-app\n```\n","contributors":[["Timer",7],["chibicode",3],["mcansh",2],["jthegedus",1],["mherodev",1],["HaNdTriX",1],["j0lv3r4",1],["vgrafe",1],["dav-is",1],["lfades",1],["chentsulin",1],["timneutkens",1],["mvfsillva",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1]]},{"name":"custom-server-typescript","title":"Custom server with TypeScript + Nodemon example","description":"\nThe example shows how you can use [TypeScript](https://typescriptlang.com) on both the server and the client while using [Nodemon](https://nodemon.io/) to live reload the server code without affecting the Next.js universal code.\n\nServer entry point is `server/index.ts` in development and `dist/index.js` in production.\nThe second directory should be added to `.gitignore`.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example custom-server-typescript custom-server-typescript-app\n# or\nyarn create next-app --example custom-server-typescript custom-server-typescript-app\n```\n","contributors":[["Timer",8],["timneutkens",4],["kachkaev",3],["chibicode",3],["jthegedus",2],["retrixe",1],["wcamarao",1],["sethetter",1],["TheRobBrennan",1],["lukebarton",1],["vinpac",1],["mherodev",1],["implicitdef",1],["duncanleung",1],["dcurletti",1],["mattisfrommars",1],["oBusk",1],["j0lv3r4",1],["brentertz",1],["slaterbbx",1],["crutchcorn",1],["jalcalav",1],["dav-is",1],["mrispoli24",1],["resir014",1],["jsmirandaiii",1],["Rokt33r",1],["huv1k",1],["lfades",1],["chentsulin",1],["rafaelalmeidatk",1],["mvfsillva",1],["ijjk",1],["tanmaylaud",1],["nirtamir2",1],["awareness481",1],["NorbertLuszkiewicz",1],["caulagi",1]]},{"name":"data-fetch","title":"Data fetch example","description":"\nNext.js was conceived to make it easy to create universal apps. That's why fetching data\non the server and the client when necessary is so easy with Next.js.\n\nBy using `getStaticProps` Next.js will fetch data at build time from a page, and pre-render the page to static assets.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/data-fetch&project-name=data-fetch&repository-name=data-fetch)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example data-fetch data-fetch-app\n# or\nyarn create next-app --example data-fetch data-fetch-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",6],["lfades",5],["HaNdTriX",3],["chibicode",3],["Timer",3],["impronunciable",2],["sedubois",2],["jthegedus",2],["Huxpro",1],["sakulstra",1],["paulmolluzzo",1],["lquixada",1],["fouad",1],["coryhouse",1],["yhirano55",1],["mherodev",1],["j0lv3r4",1],["crutchcorn",1],["dav-is",1],["alieslamifard",1],["asotoglez",1],["ijjk",1],["tanmaylaud",1],["rdimaio",1],["lucleray",1]]},{"name":"dynamic-routing","title":"Dynamic Routing example","description":"\nThis example shows how to do [dynamic routing](https://nextjs.org/docs/routing/dynamic-routes) in Next.js. It contains two dynamic routes:\n\n1. `pages/post/[id]/index.js`\n   - e.g. matches `/post/my-example` (`/post/:id`)\n1. `pages/post/[id]/[comment].js`\n   - e.g. matches `/post/my-example/a-comment` (`/post/:id/:comment`)\n\nThese routes are automatically matched by the server.\nYou can use `next/link` as displayed in this example to route to these pages client side.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/dynamic-routing&project-name=dynamic-routing&repository-name=dynamic-routing)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example dynamic-routing dynamic-routing-app\n# or\nyarn create next-app --example dynamic-routing dynamic-routing-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["lfades",5],["chibicode",3],["timneutkens",1],["ijjk",1],["jamesmosier",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"environment-variables","title":"Environment Variables Example","description":"\nThis example shows how to use [environment variables in Next.js](https://nextjs.org/docs/basic-features/environment-variables).\n\nThe index page ([pages/index.js](pages/index.js)) will show you how to [access environment variables in the server](https://nextjs.org/docs/basic-features/environment-variables#loading-environment-variables), and how to [expose environment variables to the browser](https://nextjs.org/docs/basic-features/environment-variables#exposing-environment-variables-to-the-browser).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/environment-variables&project-name=environment-variables&repository-name=environment-variables)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example environment-variables environment-variables-app\n# or\nyarn create next-app --example environment-variables environment-variables-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["lfades",4],["tanmaylaud",1],["Timer",1],["plug-n-play",1],["lucleray",1]]},{"name":"fast-refresh-demo","title":"Fast Refresh Demo","description":"\nNext.js ships with [Fast Refresh](https://nextjs.org/docs/basic-features/fast-refresh) which gives you instantaneous feedback on edits made to your React components.\n\nThis demos shows how the state of an auto incrementing value and a classic counter is preserved after edits or if there are errors.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/fast-refresh-demo&project-name=fast-refresh-demo&repository-name=fast-refresh-demo)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example fast-refresh-demo fast-refresh-demo-app\n# or\nyarn create next-app --example fast-refresh-demo fast-refresh-demo-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["YichiZ",1],["lucleray",1],["lfades",1],["caaatisgood",1]]},{"name":"gh-pages","title":"gh-pages Hello World example","description":"\nThis example shows the most basic idea behind Next. We have 2 pages: `pages/index.js` and `pages/about.js`. The former responds to `/` requests and the latter to `/about`. Using `next/link` you can add hyperlinks between them with universal routing capabilities.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example gh-pages gh-pages-app\n# or\nyarn create next-app --example gh-pages gh-pages-app\n```\n\n### Deploy it to github\n\nEdit `env-config.js` and replace `'Next-gh-page-example'` by your project name.\n\nEdit `next.config.js` and replace `'Next-gh-page-example'` by your project name.\n\n1.  Create repository.\n2.  Link it to your github account.\n3.  Publish your master branch.\n\n```bash\nnpm run deploy\n```\n\nTest it:\n\nReplace `<github-user-name>` and `<github-project-name>`\n\n```bash\nhttps://<github-user-name>.github.io/<github-project-name>/\n```\n\nExample:\n\n```bash\nhttps://github.com/thierryc/Next-gh-page-example/\n\nhttps://thierryc.github.io/Next-gh-page-example/\n```\n","contributors":[["Timer",6],["johnpolacek",2],["chibicode",2],["thierryc",1],["jthegedus",1],["teleginzhenya",1],["mherodev",1],["timneutkens",1],["j0lv3r4",1],["lfades",1],["tanmaylaud",1],["ronaldstevanus",1],["NorbertLuszkiewicz",1]]},{"name":"head-elements","title":"Head elements example","description":"\nFor every page you can inject elements into the page head. This way you can add stylesheets, JS scripts, meta tags, a custom title or whatever you think is convenient to add inside the `<head>` of your page.\n\nThis example shows in `pages/index.js` how to add a title and a couple of meta tags.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/head-elements&project-name=head-elements&repository-name=head-elements)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example head-elements head-elements-app\n# or\nyarn create next-app --example head-elements head-elements-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["impronunciable",3],["chibicode",3],["timneutkens",3],["lfades",3],["rauchg",2],["nkzawa",2],["jthegedus",2],["sedubois",1],["sakulstra",1],["paulmolluzzo",1],["HaNdTriX",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"headers","title":"Headers Example","description":"\nThis example shows how to use [headers in Next.js](https://nextjs.org/docs/api-reference/next.config.js/headers) to add custom HTTP headers into your Next.js app.\n\nThe index page ([`pages/index.js`](pages/index.js)) has a list of links to pages with custom headers set up in [`next.config.js`](next.config.js). Run or deploy the app to see how it works!\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/headers&project-name=headers&repository-name=headers)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example headers headers-app\n# or\nyarn create next-app --example headers headers-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["fwuensche",1]]},{"name":"hello-world","title":"Hello World example","description":"\nThis example shows the most basic idea behind Next. We have 2 pages: `pages/index.js` and `pages/about.js`. The former responds to `/` requests and the latter to `/about`. Using `next/link` you can add hyperlinks between them with universal routing capabilities. The `day` directory shows that you can have subdirectories.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/hello-world&project-name=hello-world&repository-name=hello-world)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example hello-world hello-world-app\n# or\nyarn create next-app --example hello-world hello-world-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",6],["impronunciable",4],["Timer",4],["rauchg",3],["chibicode",3],["lfades",3],["nkzawa",2],["jthegedus",2],["sedubois",1],["sakulstra",1],["paulmolluzzo",1],["HaNdTriX",1],["fouad",1],["garmeeh",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["jamesmosier",1],["liulanz",1],["taylorbryant",1],["huozhi",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1],["getspooky",1]]},{"name":"i18n-routing","title":"Internationalized Routing","description":"\nThis example shows how to create internationalized pages using Next.js and the i18n routing feature. It shows a normal page, a non-dynamic `getStaticProps` page, a dynamic `getStaticProps` page, and a `getServerSideProps` page.\n\nFor further documentation on this feature see the documentation [here](https://nextjs.org/docs/advanced-features/i18n-routing)\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/i18n-routing&project-name=i18n-routing&repository-name=i18n-routing)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example i18n-routing i18n-app\n# or\nyarn create next-app --example i18n-routing i18n-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["ijjk",1],["jorisw",1],["oriverk",1],["lucleray",1],["lfades",1]]},{"name":"image-component","title":"Image Component Example","description":"\nThis example shows how to use the [Image Component in Next.js](https://nextjs.org/docs/api-reference/next/image) serve optimized, responsive images.\n\nThe index page ([`pages/index.js`](pages/index.js)) has a couple images, one internal image and one external image. In [`next.config.js`](next.config.js), the `domains` property is used to enable external images. The other pages demonstrate the different layouts. Run or deploy the app to see how it works!\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/image-component&project-name=image-component&repository-name=image-component)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example image-component image-app\n# or\nyarn create next-app --example image-component image-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["styfle",8],["SebastianTroc",1],["brunocrosier",1],["lucleray",1],["lfades",1]]},{"name":"layout-component","title":"Layout component example","description":"\nThis example shows a very common use case when building websites where you need to repeat some sort of layout for all your pages. Our pages are: `home`, `about` and `contact` and they all share the same `<head>` settings, the `<nav>` and the `<footer>`. Further more, the title (and potentially other head elements) can be sent as a prop to the layout component so that it's customizable in all pages.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/layout-component&project-name=layout-component&repository-name=layout-component)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example layout-component layout-component-app\n# or\nyarn create next-app --example layout-component layout-component-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["timneutkens",4],["chibicode",3],["lfades",3],["impronunciable",2],["jthegedus",2],["alexnm",1],["sedubois",1],["sakulstra",1],["paulmolluzzo",1],["oliviertassinari",1],["HaNdTriX",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"nested-components","title":"Example app using nested components","description":"\nTaking advantage of the composable nature of React components we can modularize our apps in self-contained, meaningful components. This example has a page under `pages/index.js` that uses `components/paragraph.js` and `components/post.js` that can be styled and managed separately.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/nested-components&project-name=nested-components&repository-name=nested-components)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example nested-components nested-components-app\n# or\nyarn create next-app --example nested-components nested-components-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["nkzawa",5],["Timer",5],["rauchg",4],["impronunciable",4],["timneutkens",4],["chibicode",3],["lfades",3],["jthegedus",2],["stephenmathieson",1],["sedubois",1],["sakulstra",1],["paulmolluzzo",1],["HaNdTriX",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"page-transitions","title":"This example has been deprecated and removed in favor of https://github.com/vercel/next.js/tree/canary/examples/with-next-page-transitions","description":"","contributors":[["timneutkens",3],["jthegedus",2],["OutThisLife",1],["brikou",1],["fouad",1],["Timer",1],["tanmaylaud",1]]},{"name":"parameterized-routing","title":"This example has been deprecated and removed in favor of [examples/dynamic-routing](https://github.com/vercel/next.js/tree/canary/examples/dynamic-routing)","description":"","contributors":[["nkzawa",5],["timneutkens",5],["rauchg",2],["impronunciable",2],["sedubois",2],["jthegedus",2],["lfades",2],["arunoda",1],["sakulstra",1],["remy",1],["paulmolluzzo",1],["HaNdTriX",1],["brikou",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["ijjk",1],["dav-is",1],["mcsdevv",1],["Timer",1],["tanmaylaud",1]]},{"name":"progressive-render","title":"Example app implementing progressive server-side render","description":"\nSometimes you want to **not** server render some parts of your application.\n\nFor example:\n\n1. Third party components without server render capabilities\n2. Components that depend on `window` or other browser only APIs\n3. Content isn't important enough for the user (eg. below the fold content)\n\nTo handle these cases, you can conditionally render your component using the `useEffect` hook.\n\nThis example features:\n\n- A custom hook called `useMounted`, implementing this behavior\n- An app with a component that must only be rendered in the client\n- A loading component that will be displayed before rendering the client-only component\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/progressive-render&project-name=progressive-render&repository-name=progressive-render)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example progressive-render progressive-render-app\n# or\nyarn create next-app --example progressive-render progressive-render-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",4],["Timer",4],["chibicode",3],["lfades",3],["jthegedus",2],["sergiodxa",1],["sakulstra",1],["paulmolluzzo",1],["HaNdTriX",1],["fouad",1],["mherodev",1],["antonmoiseev",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["maapteh",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"progressive-web-app","title":"Progressive Web App Example","description":"\nThis example uses [`next-pwa`](https://github.com/shadowwalker/next-pwa) to create a progressive web app (PWA) powered by [Workbox](https://developers.google.com/web/tools/workbox/).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/progressive-web-app&project-name=progressive-web-app&repository-name=progressive-web-app)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example progressive-web-app progressive-web-app\n# or\nyarn create next-app --example progressive-web-app progressive-web-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["khattakdev",1],["Timer",1],["darshkpatel",1],["lucleray",1],["lfades",1],["leerob",1]]},{"name":"redirects","title":"Redirects Example","description":"\nThis example shows how to use [redirects in Next.js](https://nextjs.org/docs/api-reference/next.config.js/redirects) to redirect an incoming request path to a different destination path.\n\nThe index page ([`pages/index.js`](pages/index.js)) has a list of links that match the redirects defined in [`next.config.js`](next.config.js). Run or deploy the app to see how it works!\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/redirects&project-name=redirects&repository-name=redirects)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example redirects redirects-app\n# or\nyarn create next-app --example redirects redirects-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["robintom",1],["Timer",1],["UnbearableBear",1],["lucleray",1],["lfades",1]]},{"name":"rewrites","title":"Rewrites Example","description":"\nThis example shows how to use [rewrites in Next.js](https://nextjs.org/docs/api-reference/next.config.js/rewrites) to map an incoming request path to a different destination path.\n\nThe index page ([`pages/index.js`](pages/index.js)) has a list of links that match the rewrites defined in [`next.config.js`](next.config.js). Run or deploy the app to see how it works!\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/rewrites&project-name=rewrites&repository-name=rewrites)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example rewrites rewrites-app\n# or\nyarn create next-app --example rewrites rewrites-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["robintom",2],["lucleray",1],["lfades",1]]},{"name":"ssr-caching","title":"Example app where it caches SSR'ed pages in the memory","description":"\nReact Server Side rendering is very costly and takes a lot of server's CPU power for that. One of the best solutions for this problem is cache already rendered pages.\nThat's what this example demonstrate.\n\nThis app uses Next's [custom server and routing](https://nextjs.org/docs/advanced-features/custom-server) mode. It also uses [express](https://expressjs.com/) to handle routing and page serving.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example ssr-caching ssr-caching-app\n# or\nyarn create next-app --example ssr-caching ssr-caching-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",7],["Timer",6],["chibicode",3],["nkzawa",2],["sedubois",2],["jthegedus",2],["arunoda",1],["IanMitchell",1],["sakulstra",1],["paulmolluzzo",1],["HaNdTriX",1],["brikou",1],["fouad",1],["oliviertassinari",1],["yhirano55",1],["mherodev",1],["pkellner",1],["j0lv3r4",1],["dunglas",1],["Kikobeats",1],["dav-is",1],["lfades",1],["fabianishere",1],["carlospavanetti",1],["jpedroschmitz",1],["mvfsillva",1],["xliusstk",1],["ijjk",1],["valmassoi",1],["tanmaylaud",1],["madiknox",1],["NorbertLuszkiewicz",1],["awareness481",1],["lucleray",1],["sphilee",1]]},{"name":"styled-jsx-with-csp","title":"Styled-JSX with Content Security Policy","description":"\nThis example showcases how you can use `nonce` for `style-src` directive in `Content Security Policy` with `styled-jsx`.\n\nCheckout the [demo](https://styled-jsx-with-csp.vercel.app/) and notice the following,\n\n- `style-src` directive in `Content-Security-Policy` response header.\n- `meta` tag to pass on the `nonce` to styled-jsx for client-side rendering.\n- `style` tags with `nonce` attributes.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/styled-jsx-with-csp&project-name=styled-jsx-with-csp&repository-name=styled-jsx-with-csp)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example styled-jsx-with-csp styled-jsx-with-csp-app\n# or\nyarn create next-app --example styled-jsx-with-csp styled-jsx-with-csp-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["KarthikeyanRanasthala",1]]},{"name":"svg-components","title":"SVG components example","description":"\nThis example uses a custom `.babelrc` to add support for importing `.svg` files and rendering them as React components. [babel-plugin-inline-react-svg](https://www.npmjs.com/package/babel-plugin-inline-react-svg) is used to handle transpiling the SVGs.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/svg-components&project-name=svg-components&repository-name=svg-components)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example svg-components svg-components-app\n# or\nyarn create next-app --example svg-components svg-components-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["chibicode",3],["lfades",3],["jthegedus",2],["timneutkens",2],["stephenmathieson",1],["paulmolluzzo",1],["aranajhonny",1],["fouad",1],["sergiodxa",1],["Angelmmiguel",1],["mherodev",1],["stahlmanDesign",1],["j0lv3r4",1],["dav-is",1],["mvfsillva",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"using-preact","title":"Preact example","description":"\nThis example uses [Preact](https://github.com/preactjs/preact) instead of React. It's a React like UI framework which is fast and small.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example using-preact using-preact-app\n# or\nyarn create next-app --example using-preact using-preact-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n### Aliasing react -> preact\n\nUsing `preact` with `next.js` depends on aliasing react packages to preact ones (like `@preact/compat`). This is done directly in the [`package.json`](./package.json) dependencies.\n\n### next-plugin-preact\n\nThis example was [updated](https://github.com/vercel/next.js/pull/18588) to use [`next-plugin-preact`](https://github.com/preactjs/next-plugin-preact) and now requires minimal configuration, if you want to add preact without a plugin, or see how it works, head to the previous [`next.config.js`](https://github.com/vercel/next.js/blob/629884af7d3ced97b8c2ec7aebdfb1a3a5d808f0/examples/using-preact/next.config.js).\n","contributors":[["timneutkens",11],["Timer",5],["chibicode",3],["arunoda",2],["jthegedus",2],["fouad",2],["developit",2],["sedubois",1],["impronunciable",1],["sakulstra",1],["cdock1029",1],["lukeed",1],["jwalter",1],["paulmolluzzo",1],["HaNdTriX",1],["ForsakenHarmony",1],["dogada",1],["brikou",1],["Tom910",1],["simonhaenisch",1],["ismamz",1],["mherodev",1],["toshi1127",1],["dav-is",1],["mcsdevv",1],["lfades",1],["rafaelalmeidatk",1],["38elements",1],["zackkrida",1],["armujahid",1],["todortotev",1],["mvfsillva",1],["ijjk",1],["IamLizu",1],["jackyef",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["queq1890",1],["vitordino",1],["lucleray",1],["zephraph",1]]},{"name":"using-router","title":"Example app utilizing next/router for routing","description":"\nThis example features:\n\n- An app linking pages using `next/router` instead of `<Link>` component.\n- Access the pathname using `next/router` and render it in a component\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/using-router&project-name=using-router&repository-name=using-router)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example using-router using-router-app\n# or\nyarn create next-app --example using-router using-router-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",8],["Timer",6],["rauchg",3],["arunoda",3],["impronunciable",3],["chibicode",3],["lfades",3],["nkzawa",2],["jthegedus",2],["sedubois",1],["sakulstra",1],["paulmolluzzo",1],["HaNdTriX",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["ijjk",1],["tanmaylaud",1],["heyAyushh",1],["NorbertLuszkiewicz",1],["armspkt",1],["lucleray",1]]},{"name":"with-absolute-imports","title":"Example app with absolute imports","description":"\nThis example shows how to configure Babel to have absolute imports instead of relative imports without modifying the Webpack configuration.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-absolute-imports&project-name=with-absolute-imports&repository-name=with-absolute-imports)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-absolute-imports with-absolute-imports-app\n# or\nyarn create next-app --example with-absolute-imports with-absolute-imports-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["chibicode",3],["timneutkens",3],["lfades",3],["jthegedus",2],["sergiodxa",1],["fouad",1],["PetrSnobelt",1],["gsimone",1],["teleginzhenya",1],["mherodev",1],["nodegin",1],["j0lv3r4",1],["twltwl",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1]]},{"name":"with-algolia-react-instantsearch","title":"With Algolia React InstantSearch example","description":"\nThe goal of this example is to illustrate how you can use [Algolia React InstantSearch](https://community.algolia.com/react-instantsearch/) to perform your search in an application developed with Next.js. It also illustrates how you can keep in sync the Url with the search.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-algolia-react-instantsearch with-algolia-react-instantsearch-app\n# or\nyarn create next-app --example with-algolia-react-instantsearch with-algolia-react-instantsearch-app\n```\n\nTo set up Algolia:\n\n- create an [algolia](https://www.algolia.com/) account or use this already [configured index](https://community.algolia.com/react-instantsearch/Getting_started.html#before-we-start)\n- update the `appId`, `apikey` and `indexName` you want to search on in [`components/instantsearch.js`](components/instantsearch.js)\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",7],["timneutkens",4],["lfades",4],["chibicode",3],["jthegedus",2],["mthuret",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["nataliemarleny",1],["todortotev",1],["ijjk",1],["chuabingquan",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["awareness481",1],["merceyz",1],["rishi-raj-jain",1],["lucleray",1]]},{"name":"with-ant-design","title":"Ant Design example","description":"\nThis example shows how to use Next.js along with [Ant Design of React](https://ant.design). This is intended to show the integration of this UI toolkit with the Framework.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-ant-design&project-name=with-ant-design&repository-name=with-ant-design)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-ant-design with-ant-design-app\n# or\nyarn create next-app --example with-ant-design with-ant-design-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",6],["Timer",6],["chibicode",3],["lfades",3],["afc163",2],["jthegedus",2],["yakovlevyuri",2],["ijjk",2],["HaNdTriX",1],["starriv",1],["ismamz",1],["fouad",1],["yesmeck",1],["notatestuser",1],["mherodev",1],["rafaelalmeidatk",1],["j0lv3r4",1],["dav-is",1],["viztor",1],["mit123suki",1],["tywmick",1],["mvfsillva",1],["awareness481",1],["todortotev",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["xom9ikk",1],["fireairforce",1],["lucleray",1]]},{"name":"with-ant-design-less","title":"Ant Design example","description":"\nThis example shows how to use Next.js along with [Ant Design of React](https://ant.design). This is intended to show the integration of this UI toolkit with the Framework.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-ant-design-less&project-name=with-ant-design-less&repository-name=with-ant-design-less)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-ant-design-less with-ant-design-app\n# or\nyarn create next-app --example with-ant-design-less with-ant-design-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["chibicode",3],["timneutkens",3],["lfades",3],["ijjk",2],["giautm",1],["mherodev",1],["dyun8080",1],["andresleoon",1],["searleb",1],["j0lv3r4",1],["ztanner",1],["dav-is",1],["aga5tya",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["xom9ikk",1],["lucleray",1]]},{"name":"with-ant-design-mobile","title":"Ant Design Mobile example","description":"\nThis example features how you use [antd-mobile](https://github.com/ant-design/ant-design-mobile) (Ant Design Mobile FrontEnd Framework) with Next.js.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-ant-design-mobile&project-name=with-ant-design-mobile&repository-name=with-ant-design-mobile)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-ant-design-mobile with-ant-design-mobile-app\n# or\nyarn create next-app --example with-ant-design-mobile with-ant-design-mobile-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",4],["mxschmitt",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["LauraBeatris",1],["lucleray",1],["lfades",1]]},{"name":"with-ant-design-pro-layout-less","title":"Ant Design Pro Layout example","description":"\nThis example shows how to use Next.js along with [Ant Design Pro Layout](https://github.com/ant-design/ant-design-pro-layout) of React. This is intended to show the integration of this UI toolkit with the Framework.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-ant-design-pro-layout-less&project-name=with-ant-design-pro-layout-less&repository-name=with-ant-design-pro-layout-less)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-ant-design-pro-layout-less with-ant-design-app\n# or\nyarn create next-app --example with-ant-design-pro-layout-less with-ant-design-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",4],["mxschmitt",1],["ijjk",1],["hydRAnger",1],["tanmaylaud",1],["awareness481",1],["NorbertLuszkiewicz",1],["lucleray",1],["lfades",1]]},{"name":"with-aphrodite","title":"Example app with aphrodite","description":"\nThis example features how to use a different styling solution than [styled-jsx](https://github.com/zeit/styled-jsx) that also supports universal styles. That means we can serve the required styles for the first render within the HTML and then load the rest in the client. In this case we are using [Aphrodite](https://github.com/Khan/aphrodite/).\n\nFor this purpose we are extending the `<Document />` and injecting the server side rendered styles into the `<head>`.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-aphrodite&project-name=with-aphrodite&repository-name=with-aphrodite)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-aphrodite with-aphrodite-app\n# or\nyarn create next-app --example with-aphrodite with-aphrodite-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",5],["Timer",5],["chibicode",3],["lfades",3],["jthegedus",2],["lucleray",2],["aranajhonny",1],["sedubois",1],["sakulstra",1],["paulmolluzzo",1],["Grokling",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["crutchcorn",1],["dav-is",1],["sdhani",1],["todortotev",1],["ijjk",1],["marbiano",1],["tanmaylaud",1],["NorbertLuszkiewicz",1]]},{"name":"with-apollo","title":"Apollo Example","description":"\n[Apollo](https://www.apollographql.com/client/) is a GraphQL client that allows you to easily query the exact data you need from a GraphQL server. In addition to fetching and mutating data, Apollo analyzes your queries and their results to construct a client-side cache of your data, which is kept up to date as further queries and mutations are run.\n\nIn this simple example, we integrate Apollo seamlessly with [Next.js data fetching methods](https://nextjs.org/docs/basic-features/data-fetching) to fetch queries in the server and hydrate them in the browser.\n\nThis example relies on [Prisma + Nexus](https://github.com/prisma-labs/nextjs-graphql-api-examples) for its GraphQL backend.\n\n## Demo\n\n[https://next-with-apollo.vercel.app](https://next-with-apollo.vercel.app)\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-apollo&project-name=with-apollo&repository-name=with-apollo)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-apollo with-apollo-app\n# or\nyarn create next-app --example with-apollo with-apollo-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["HaNdTriX",11],["Timer",7],["timneutkens",6],["lfades",6],["adamsoffer",3],["jaydenseric",3],["chibicode",3],["ijjk",3],["brikou",2],["jthegedus",2],["bgoerdt",2],["timsuchanek",1],["paulmolluzzo",1],["Rowno",1],["tpreusse",1],["arunoda",1],["sebas5384",1],["JeromeFitz",1],["lquixada",1],["kyen99",1],["tomsvogel",1],["maxobaxo",1],["fouad",1],["jonespen",1],["goldensunliu",1],["shalzz",1],["willmeierart",1],["wesbos",1],["vasco3",1],["Skaronator",1],["NikitaVlaznev",1],["mherodev",1],["tim-phillips",1],["amytych",1],["Enalmada",1],["zenflow",1],["j0lv3r4",1],["koenpunt",1],["dav-is",1],["mcsdevv",1],["rafaelalmeidatk",1],["montmirail",1],["hegelocampus",1],["pex",1],["quinnturner",1],["willianjusten",1],["teo-garcia",1],["drumm2k",1],["tanmaylaud",1],["httpsOmkar",1],["Weakky",1],["JClackett",1],["NorbertLuszkiewicz",1],["merceyz",1],["matthewlilley",1],["yordis",1],["sungpro",1],["felixmeziere",1],["lucleray",1],["smitbarmase",1],["leerob",1]]},{"name":"with-apollo-and-redux","title":"Apollo & Redux Example","description":"\nThis example serves as a conduit if you were using Apollo 1.X with Redux, and are migrating to Apollo 3.x, however, you have chosen not to manage your entire application state within Apollo (`apollo-link-state`).\n\nIn 3.0.0, Apollo serves out-of-the-box support for redux in favor of Apollo's state management. This example aims to be an amalgamation of the [`with-apollo`](https://github.com/vercel/next.js/tree/master/examples/with-apollo) and [`with-redux`](https://github.com/vercel/next.js/tree/master/examples/with-redux) examples.\n\nTo inspect the GraphQL API, use its [web IDE](https://nextjs-graphql-with-prisma-simple.vercel.app/api).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-apollo-and-redux&project-name=with-apollo-and-redux&repository-name=with-apollo-and-redux)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-apollo-and-redux with-apollo-and-redux-app\n# or\nyarn create next-app --example with-apollo-and-redux with-apollo-and-redux-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",7],["Timer",7],["lfades",5],["HaNdTriX",3],["chibicode",3],["adamsoffer",2],["jaydenseric",2],["JeromeFitz",2],["jthegedus",2],["paulmolluzzo",1],["Rowno",1],["tpreusse",1],["arunoda",1],["mrwillis",1],["liweinan0423",1],["lquixada",1],["bdombro",1],["fouad",1],["dastoori",1],["willmeierart",1],["Skaronator",1],["mherodev",1],["tim-phillips",1],["giuseppeg",1],["j0lv3r4",1],["crutchcorn",1],["dav-is",1],["mcsdevv",1],["willianjusten",1],["teo-garcia",1],["ijjk",1],["bell-steven",1],["drumm2k",1],["tanmaylaud",1],["JClackett",1],["NorbertLuszkiewicz",1],["matthewlilley",1],["cascandaliato",1],["lucleray",1]]},{"name":"with-apollo-neo4j-graphql","title":"Neo4j Example with GraphQL and Apollo","description":"\nThis is a simple set up for Next using Neo4j Database with GraphQL and Apollo. Neo4j's Movies dataset example is used to run the example.\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-3-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-apollo-neo4j-graphql&project-name=with-apollo-neo4j-graphql&repository-name=with-apollo-neo4j-graphql&env=NEO4J_URI,NEO4J_USER,NEO4J_PASSWORD&envDescription=Required%20to%20connect%20the%20app%20with%20a%20Neo4j%20database&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-apollo-neo4j-graphql%23step-3-set-up-environment-variables)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-apollo-neo4j-graphql with-apollo-neo4j-graphql-app\n# or\nyarn create next-app --example with-apollo-neo4j-graphql with-apollo-neo4j-graphql-app\n```\n\n## Configuration\n\n### Step 1. Create a Neo4j database\n\nFirst, you'll need a Neo4j database. [Neo4j Desktop](https://neo4j.com/download/) and [Neo4j Online Sandbox](https://neo4j.com/sandbox/) are good and free to use options.\n\n### Step 2. Add the movie graph model to the database\n\nThis example uses a database containing _Movies_, you can add it like so:\n\n```bash\n:play movie-graph\n```\n\nAlso included is a Cypher [movie sample](./movie-sample.md) query if needed.\n\n### Step 3. Set up environment variables\n\nNext, copy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local` to match your database uri and credentials.\n\n## Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-apollo-neo4j-graphql&project-name=with-apollo-neo4j-graphql&repository-name=with-apollo-neo4j-graphql&env=NEO4J_URI,NEO4J_USER,NEO4J_PASSWORD&envDescription=Required%20to%20connect%20the%20app%20with%20a%20Neo4j%20database&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-apollo-neo4j-graphql%23step-3-set-up-environment-variables)\n","contributors":[["nikosantis",1],["lucleray",1]]},{"name":"with-app-layout","title":"With `App` layout example","description":"\nShows how to use \\_app.js to implement a global layout for all pages.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-app-layout&project-name=with-app-layout&repository-name=with-app-layout)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-app-layout with-app-layout-app\n# or\nyarn create next-app --example with-app-layout with-app-layout-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["timneutkens",4],["chibicode",3],["lfades",3],["mherodev",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["stramel",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-astroturf","title":"Example app with [astroturf](https://github.com/4Catalyzer/astroturf)","description":"\nThis example features how to use [astroturf](https://github.com/4Catalyzer/astroturf) as the zero-runtime CSS-in-JS styling solution instead of [styled-jsx](https://github.com/zeit/styled-jsx).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-astroturf&project-name=with-astroturf&repository-name=with-astroturf)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-astroturf with-astroturf-app\n# or\nyarn create next-app --example with-astroturf with-astroturf-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["chibicode",3],["lfades",3],["shashkovdanil",1],["dav-is",1],["timneutkens",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-atlaskit","title":"Atlassian Atlaskit example","description":"\nThis example shows how to use Next.js along with Atlaskit of React. This is intended to show the integration of this UI toolkit with the Framework.\n\nInstall it and run:\n\n```bash\nnpm install\nnpm run dev\n# or\nyarn\nyarn dev\n```\n","contributors":[["Timer",3],["asotoglez",1],["todortotev",1],["tanmaylaud",1]]},{"name":"with-aws-amplify","title":"AWS Amplify with NextJS","description":"\n[![amplifybutton](https://oneclick.amplifyapp.com/button.svg)](https://console.aws.amazon.com/amplify/home#/deploy?repo=https://github.com/vercel/next.js/tree/canary/examples/with-aws-amplify)\n\nThis example shows how to build a server rendered web application with NextJS and AWS Amplify. We use AWS Amplify to generate code and to manage and consume the AWS cloud resources needed for our app. The NextJS app has dynamic and static routes to demonstrate how to load data on the server based on the incoming request.\n\nTwo routes are implemented :\n\n- `/` : A static route that uses `getStaticProps` to load data from AppSync and renders it on the server (Code in [pages/index.js](/pages/index.js))\n- `/todo/[id]` : A dynamic route that uses `getServerSideProps` and the id from the provided context to load a single todo from AppSync and render it on the server. (Code in [pages/todo/:[id].js](/pages/todo/[id].js))\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-aws-amplify nextjs-aws-amplify-app\n# or\nyarn create next-app --example with-aws-amplify nextjs-aws-amplify-app\n```\n\n### Initialize and deploy the Amplify project\n\n<details>\n  <summary>If you've never used amplify before </summary>\n\n#### Install & Configure Amplify\n\n1. [Sign up](https://portal.aws.amazon.com/billing/signup#/start) for an AWS account\n2. Install the AWS Amplify cli:\n\n```sh\nnpm install -g @aws-amplify/cli\n```\n\n3. Configure the Amplify cli\n\n```sh\namplify configure\n```\n\n[Read More](https://aws-amplify.github.io/docs/cli-toolchain/quickstart?sdk=js)\n\n</details>\n\n#### Initialize Amplify\n\n```bash\n$ amplify init\n\n# <Interactive>\n? Enter a name for the project <PROJECT_NAME>\n? Enter a name for the environment: dev (or whatever you would like to call this env)\n? Choose your default editor: <YOUR_EDITOR_OF_CHOICE>\n? Choose the type of app that you're building (Use arrow keys)\n  android\n  ios\n❯ javascript\n? What javascript framework are you using react\n? Source Directory Path:  src\n? Distribution Directory Path: out\n? Build Command:  (npm run-script build)\n? Start Command: (npm run-script start)\n? Do you want to use an AWS profile? Y\n\n# </Interactive>\n```\n\n#### Add the API\n\n```sh\n$ amplify add api\n# <Interactive>\n? Please select from one of the below mentioned services (Use arrow keys)\n❯ GraphQL\n  REST\n? Provide API name: <API_NAME>\n? Choose an authorization type for the API (Use arrow keys)\n❯ API key\n  Amazon Cognito User Pool\n? Do you have an annotated GraphQL schema? (y/N) y\n? Provide your schema file path: ./schema.graphql\n# </Interactive>\n```\n\n#### Deploy infrastructure\n\n```sh\n$ amplify push\n# <Interactive>\n? Are you sure you want to continue? Y\n? Do you want to generate code for your newly created GraphQL API? Y\n? Choose the code generation language target (Use arrow keys)\n❯ javascript\n  typescript\n  flow\n? Enter the file name pattern of graphql queries, mutations and subscriptions (src/graphql/**/*.js)\n? Do you want to generate/update all possible GraphQL operations - queries, mutations and subscriptions (Y/n) Y\n? Enter maximum statement depth [increase from default if your schema is deeply nested] (2)\n\n# </Interactive>\n```\n\n### Install & Run\n\n```bash\nnpm install\nnpm run dev\n# or\nyarn\nyarn dev\n```\n\n### Edit GraphQL Schema\n\n1. Open `amplify/backend/api/projectname/schema.graphql` and change what you need to.\n2. Run `amplify push`\n3. 👍\n\n### Use with new Amplify project\n\nMake sure to commit your changes before doing this.\n\n```sh\nmv amplify/backend/api/nextjswithawsamplify/schema.graphql ./schema.graphql\nrm -rf amplify/ src/\namplify init\namplify add api\nrm ./schema.graphql\namplify push\n```\n","contributors":[["Timer",5],["todortotev",2],["rakannimer",1],["Baukaalm",1],["huv1k",1],["lfades",1],["chibicode",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1]]},{"name":"with-aws-amplify-typescript","title":"AWS Amplify and Typescript with NextJS","description":"\n[![amplifybutton](https://oneclick.amplifyapp.com/button.svg)](https://console.aws.amazon.com/amplify/home#/deploy?repo=https://github.com/vercel/next.js/tree/canary/examples/with-aws-amplify-typescript)\n\nThis example shows how to build a server rendered web application with NextJS and AWS Amplify. We use AWS Amplify to generate code and to manage and consume the AWS cloud resources needed for our app. The NextJS app has dynamic and static routes to demonstrate how to load data on the server based on the incoming request.\n\nTwo routes are implemented :\n\n- `/` : A server-rendered route that uses `getServersideProps` to load data from AppSync and renders it on the server (Code in [pages/index.tsx](src/pages/index.tsx))\n\n- `/todo/[id]` : A dynamic route that uses `getStaticPaths`, `getStaticProps` and the id from the provided context to load a single todo from AppSync and render it on the server. (Code in [pages/todo/[id].tsx](src/pages/todo/[id].tsx))\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-aws-amplify-typescript nextjs-aws-amplify-typescript-app\n# or\nyarn create next-app --example with-aws-amplify-typescript nextjs-aws-amplify-typescript-app\n```\n\n### Initialize and deploy the Amplify project\n\n<details>\n  <summary>If you've never used amplify before </summary>\n\n#### Install & Configure Amplify\n\n1. [Sign up](https://portal.aws.amazon.com/billing/signup#/start) for an AWS account\n2. Install the AWS Amplify cli:\n\n```sh\nnpm install -g @aws-amplify/cli\n```\n\n3. Configure the Amplify cli\n\n```sh\namplify configure\n```\n\n[Read More](https://aws-amplify.github.io/docs/cli-toolchain/quickstart?sdk=js)\n\n</details>\n\n#### Initialize Amplify\n\n```bash\n$ amplify init\n\n# <Interactive>\n? Enter a name for the project <PROJECT_NAME>\n? Enter a name for the environment: dev (or whatever you would like to call this env)\n? Choose your default editor: <YOUR_EDITOR_OF_CHOICE>\n? Choose the type of app that you're building (Use arrow keys)\n  android\n  ios\n❯ javascript\n? What javascript framework are you using react\n? Source Directory Path:  src\n? Distribution Directory Path: build\n? Build Command:  npm run build\n? Start Command: npm run start\n? Do you want to use an AWS profile? Y\n? Select the authentication method you want to use: AWS Profile\n? Please choose the profile you want to use: <Your profile\n\n# </Interactive>\n```\n\n#### Add the API and the Auth\n\n```sh\n$ amplify add api\n# <Interactive>\n? Please select from one of the below mentioned services (Use arrow keys)\n❯ GraphQL\n  REST\n? Provide API name: <API_NAME>\n? Choose the default authorization type for the API (Use arrow keys)\n❯ API key\n  Amazon Cognito User Pool\n  IAM\n  OpenID Connect\n? Enter a description for the API key: <API_DESCRIPTION>\n? After how many days from now the API key should expire (1-365): 7\n? Do you want to configure advanced settings for the GraphQL API:\n  No, I am done.\n❯ Yes, I want to make some additional changes.\n? Configure additional auth types? y\n? Choose the additional authorization types you want to configure for the API\n❯(*) Amazon Cognito User Pool\n ( ) IAM\n ( ) OpenID Connect\nDo you want to use the default authentication and security configuration? (Use arrow keys)\n❯ Default configuration\n  Default configuration with Social Provider (Federation)\n  Manual configuration\n  I want to learn more.\nHow do you want users to be able to sign in? (Use arrow keys)\n  Username\n❯ Email\n  Phone Number\n  Email or Phone Number\n  I want to learn more.\nDo you want to configure advanced settings? (Use arrow keys)\n❯ No, I am done.\n  Yes, I want to make some additional changes.\n? Enable conflict detection? N\n? Do you have an annotated GraphQL schema? N\n? Choose a schema template: (Use arrow keys)\n❯ Single object with fields (e.g., “Todo” with ID, name, description)\n  One-to-many relationship (e.g., “Blogs” with “Posts” and “Comments”)\n  Objects with fine-grained access control (e.g., a project management app with owner-based authorization)\n? Do you want to edit the schema now? Y\n# </Interactive>\n```\n\n#### Edit GraphQL Schema\n\nOpen [`amplify/backend/api/nextjswithamplifyts/schema.graphql`](amplify/backend/api/nextjswithamplifyts/schema.graphql) and change it to the following:\n\n```\ntype Todo\n  @model\n  @auth(\n    rules: [\n      { allow: owner } # Allow the creator of a todo to perform Create, Update, Delete operations.\n      { allow: public, operations: [read] } # Allow public (guest users without an account) to Read todos.\n      { allow: private, operations: [read] } # Allow private (other signed in users) to Read todos.\n    ]\n  ) {\n  id: ID!\n  name: String!\n  description: String\n}\n\n```\n\n#### Deploy infrastructure\n\n```sh\n$ amplify push\n# <Interactive>\n? Are you sure you want to continue? Y\n? Do you want to generate code for your newly created GraphQL API? Y\n? Choose the code generation language target (Use arrow keys)\n  javascript\n❯ typescript\n  flow\n? Enter the file name pattern of graphql queries, mutations and subscriptions (src/graphql/**/*.ts)\n? Do you want to generate/update all possible GraphQL operations - queries, mutations and subscriptions (Y/n) Y\n? Enter maximum statement depth [increase from default if your schema is deeply nested] (2)\n? Enter the file name for the generated code: src\\API.ts\n# </Interactive>\n```\n\n### Install & Run\n\n```bash\nnpm install\nnpm run dev\n# or\nyarn\nyarn dev\n```\n","contributors":[["Timer",5],["todortotev",2],["rakannimer",1],["huv1k",1],["hanneslund",1],["lfades",1],["chibicode",1],["ijjk",1],["tanmaylaud",1],["awareness481",1],["NorbertLuszkiewicz",1],["jarrodwatts",1]]},{"name":"with-babel-macros","title":"Example app with [babel-macros](https://github.com/kentcdodds/babel-macros)","description":"\nThis example features how to configure and use [`babel-macros`](https://github.com/kentcdodds/babel-macros) which allows you to easily add babel plugins which export themselves as a macro without needing to configure them.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-babel-macros&project-name=with-babel-macros&repository-name=with-babel-macros)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-babel-macros with-babel-macros-app\n# or\nyarn create next-app --example with-babel-macros with-babel-macros-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Note\n\nYou'll notice the configuration in `.babelrc` includes the `babel-macros`\nplugin, then we can use the `preval.macro` in `pages/index.js` to pre-evaluate\ncode at build-time. `preval.macro` is effectively transforming our code, but\nwe didn't have to configure it to make that happen!\n\nSpecifically what we're doing is we're prevaling the username of the user who\nran the build.\n","contributors":[["timneutkens",4],["chibicode",3],["Timer",3],["lfades",3],["jthegedus",2],["lucleray",2],["kentcdodds",1],["fouad",1],["mherodev",1],["garnerp",1],["j0lv3r4",1],["dav-is",1],["none23",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["neighborhood999",1]]},{"name":"with-carbon-components","title":"Example app with carbon-components-react","description":"\nThis example features how you use IBM's [carbon-components-react](https://github.com/IBM/carbon-components-react) [(Carbon Design System)](https://www.carbondesignsystem.com/components/overview) with Next.js.\n\nCreate your own theme with Carbon Design System's [theming tools](https://themes.carbondesignsystem.com/) and put it all together as demonstrated in `static/myCustomTheme.scss`\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-carbon-components&project-name=with-carbon-components&repository-name=with-carbon-components)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-carbon-components with-carbon-components-app\n# or\nyarn create next-app --example with-carbon-components with-carbon-components-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Optimizations\n\nIn this example we import carbon components in the `styles/custom-theme.scss` file like this:\n@import '~carbon-components/scss/globals/scss/styles.scss';\n\nWhen we start to consider the performance of this approach, however, it becomes clear that this will include every single bit of CSS that Carbon outputs. Sometimes, you totally need everything that the project provides, but for a good number of teams you may find yourself using only a subset of our components. Here is a great article about how you can optimize your application using carbon components:\nhttps://medium.com/carbondesign/minimal-css-with-carbon-b0c089ccfa71\n","contributors":[["timneutkens",5],["Timer",5],["chibicode",3],["lfades",3],["todortotev",2],["allpwrfulroot",1],["j0lv3r4",1],["ijjk",1],["tanmaylaud",1],["bogy0",1],["NorbertLuszkiewicz",1],["xom9ikk",1],["lucleray",1],["ludofischer",1]]},{"name":"with-cerebral","title":"Declarative State & Side-effect management with [CerebralJS](https://cerebraljs.com/)","description":"\nUse [CerebralJS](https://cerebraljs.com/) to manage an apps state and side effects in a declarative manner:\n\nDeclarative CerebralJS:\n\n```js\n;[\n  setLoading(true),\n  getUser,\n  {\n    success: setUser,\n    error: setError,\n  },\n  setLoading(false),\n]\n```\n\nvs imperative JS:\n\n```js\nfunction getUser() {\n  this.isLoading = true\n  ajax\n    .get('/user')\n    .then((user) => {\n      this.data = user\n      this.isLoading = false\n    })\n    .catch((error) => {\n      this.error = error\n      this.isLoading = false\n    })\n}\n```\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-cerebral&project-name=with-cerebral&repository-name=with-cerebral)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-cerebral with-cerebral-app\n# or\nyarn create next-app --example with-cerebral with-cerebral-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["timneutkens",5],["lfades",4],["chibicode",3],["todortotev",2],["christianalfoni",1],["jthegedus",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-chakra-ui","title":"Example app with [chakra-ui](https://github.com/chakra-ui/chakra-ui)","description":"\nThis example features how to use [chakra-ui](https://github.com/chakra-ui/chakra-ui) as the component library within a Next.js app.\n\nWe are connecting the Next.js `_app.js` with `chakra-ui`'s Theme and ColorMode containers so the pages can have app-wide dark/light mode. We are also creating some components which shows the usage of `chakra-ui`'s style props.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-chakra-ui&project-name=with-chakra-ui&repository-name=with-chakra-ui)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-chakra-ui with-chakra-ui-app\n# or\nyarn create next-app --example with-chakra-ui with-chakra-ui-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Notes\n\nChakra has supported Gradients and RTL in `v1.1`. To utilize RTL, [add RTL direction and swap](https://chakra-ui.com/docs/features/rtl-support).\n\nIf you don't have multi-direction app, you should make `<Html lang=\"ar\" dir=\"rtl\">` inside `_document.js`.\n","contributors":[["Timer",4],["chibicode",3],["Mzaien",2],["mathdroid",1],["adithwip",1],["timneutkens",1],["kolyasapphire",1],["todortotev",1],["ijjk",1],["tylev",1],["cristiand391",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["Prottoy2938",1],["awareness481",1],["chr-ge",1],["lundgren2",1],["lucleray",1],["lfades",1]]},{"name":"with-chakra-ui-typescript","title":"Example app with [chakra-ui](https://github.com/chakra-ui/chakra-ui) and Typescript","description":"\nThis example features how to use [chakra-ui](https://github.com/chakra-ui/chakra-ui) as the component library within a Next.js app with typescript.\n\nNext.js and chakra-ui have built-in TypeScript declarations, so we'll get autocompletion for their modules straight away.\n\nWe are connecting the Next.js `_app.js` with `chakra-ui`'s Provider and theme so the pages can have app-wide dark/light mode. We are also creating some components which shows the usage of `chakra-ui`'s style props.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-chakra-ui-typescript&project-name=with-chakra-ui-typescript&repository-name=with-chakra-ui-typescript)\n\n## How to use\n\n### Using `create-next-app`\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-chakra-ui-typescript with-chakra-ui-typescript-app\n# or\nyarn create next-app --example with-chakra-ui-typescript with-chakra-ui-typescript-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Notes\n\nChakra has supported Gradients and RTL in `v1.1`. To utilize RTL, [add RTL direction and swap](https://chakra-ui.com/docs/features/rtl-support).\n\nIf you don't have multi-direction app, you should make `<Html lang=\"ar\" dir=\"rtl\">` inside `_document.ts`.\n","contributors":[["tomasdisk",1],["Prottoy2938",1],["lundgren2",1],["lucleray",1],["lfades",1],["Cicada95",1],["Mzaien",1]]},{"name":"with-clerk","title":"Clerk.dev Example","description":"\nThis example shows how to use [Clerk.dev](https://www.clerk.dev/?utm_source=github&utm_medium=nextjs-examples&utm_campaign=nextjs) with Next.js. The example features adding sign up, sign in, and profile management to your Next.js application in minutes.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/clerkinc/clerk-nextjs-starter&integration-ids=oac_7uYNbc9CdDAZmNqbt3LEkO3a)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-clerk with-clerk-app\n# or\nyarn create next-app --example with-clerk with-clerk-app\n```\n\n## Learn More\n\nTo learn more about Clerk.dev and Next.js, take a look at the following resources:\n\n- [Quick start](https://docs.clerk.dev/frontend/quick-starts/next.js)\n- [Clerk.dev Documentation](https://docs.clerk.dev/) - learn about Clerk.dev features and API.\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n","contributors":[["SokratisVidros",2]]},{"name":"with-compiled-css","title":"Example app with [Compiled](https://github.com/atlassian-labs/compiled) (CSS-in-JS)","description":"\nThis example features how to use [Compiled](https://github.com/atlassian-labs/compiled) as the build time CSS-in-JS styling solution instead of [styled-jsx](https://github.com/zeit/styled-jsx).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-compiled-css&project-name=with-compiled-css&repository-name=with-compiled-css)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-compiled-css with-compiled-css-app\n# or\nyarn create next-app --example with-compiled-css with-compiled-css-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["madou",1]]},{"name":"with-context-api","title":"Hello World example","description":"\nThis example shows how to use react context api in our app.\n\nIt provides an example of using `pages/_app.js` to include the context api provider and then shows how both the `pages/index.js` and `pages/about.js` can both share the same data using the context api consumer.\n\nWe start off by creating two contexts. One that actually never changes (`CounterDispatchContext`) and one that changes more often (`CounterStateContext`).\n\nThe `pages/index.js` shows how to, from the home page, increment and decrement the context data by 1 (a hard code value in the context provider itself).\n\nThe `pages/about.js` shows how to pass an increment value from the about page into the context provider itself.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-context-api&project-name=with-context-api&repository-name=with-context-api)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-context-api with-context-api-app\n# or\nyarn create next-app --example with-context-api with-context-api-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["chibicode",3],["lfades",3],["HaNdTriX",2],["timneutkens",2],["maurodaprotis",1],["j0lv3r4",1],["pkellner",1],["crutchcorn",1],["dav-is",1],["mcsdevv",1],["AllenFang",1],["twumm",1],["teo-garcia",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["daviavmello",1]]},{"name":"with-cookie-auth","title":"This example has been deprecated and removed in favor of one of the following examples:","description":"\n- [auth0](https://github.com/vercel/next.js/tree/canary/examples/auth0)\n- [with-cookie-auth-fauna](https://github.com/vercel/next.js/tree/canary/examples/with-cookie-auth-fauna)\n- [with-passport](https://github.com/vercel/next.js/tree/canary/examples/with-passport)\n- [with-iron-session](https://github.com/vercel/next.js/tree/canary/examples/with-iron-session)\n- [with-next-auth](https://github.com/vercel/next.js/tree/canary/examples/with-next-auth)\n","contributors":[["j0lv3r4",4],["lfades",4],["Timer",4],["chibicode",3],["martonlanga",2],["pkellner",1],["samundra",1],["GaelS",1],["dav-is",1],["dunglas",1],["twltwl",1],["jamesmosier",1],["lv-kit",1],["timneutkens",1],["vvo",1],["ndom91",1],["tanmaylaud",1]]},{"name":"with-cookie-auth-fauna","title":"With Cookie Auth and Fauna","description":"\nIn this example, we authenticate users and store a token in a secure (non-JS) cookie. The example only shows how the user session works, keeping a user logged in between pages.\n\nThis example uses [Fauna](https://fauna.com/) as the auth service and DB.\n\nThe repo includes a minimal auth backend built with [API Routes](https://nextjs.org/docs/api-routes/introduction) and [Fauna for Auth](https://app.fauna.com/tutorials/authentication). The backend allows the user to create an account (a User document), login, and see their user id (User ref id).\n\nSession is synchronized across tabs. If you logout your session gets removed on all the windows as well. We use the HOC `withAuthSync` for this.\n\nThe helper function `auth` helps to retrieve the token across pages and redirects the user if not token was found.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-cookie-auth-fauna with-cookie-auth-fauna-app\n# or\nyarn create next-app --example with-cookie-auth-fauna with-cookie-auth-fauna-app\n```\n\n### Run locally\n\nFirst, you'll need to create an account on [Fauna](https://fauna.com/), then follow these steps:\n\n1. In the [FaunaDB Console](https://dashboard.fauna.com/), click \"New Database\". Name it whatever you like and click \"Save\".\n2. Click \"New Collection\", name it `User`, leave \"Create collection index\" checked, and click \"Save\".\n3. Now go to \"Indexes\" in the left sidebar, and click \"New Index\". Select the `User` collection, call it `users_by_email`, and in the \"terms\" field type `data.email`. Select the \"Unique\" checkbox and click \"Save\". This will create an index that allows looking up users by their email, which we will use to log a user in.\n4. Next, go to \"Security\" in the sidebar, then click \"New Key\". Create a new key with the `Server` role, call it `server-key`, and click \"Save\". Your key's secret will be displayed, copy that value.\n5. Create the `.env.local` file (which will be ignored by Git) based on the `.env.local.example` file in this directory:\n\n```bash\ncp .env.local.example .env.local\n```\n\n6. Paste the secret you copied as the value for `FAUNA_SERVER_KEY` in the `.env.local` file. Keep this key safely as it has privileged access to your database.\n\n> For more information, read the [User Authentication Tutorial in Fauna](https://app.fauna.com/tutorials/authentication).\n\nNow, install it and run:\n\n```bash\nnpm install\nnpm run dev\n# or\nyarn\nyarn dev\n```\n\n### Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-cookie-auth-fauna&project-name=with-cookie-auth-fauna&repository-name=with-cookie-auth-fauna&env=FAUNA_SERVER_KEY&envDescription=API%20Keys%20required%20by%20Fauna%20CMS&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-cookie-auth-fauna%23run-locally)\n","contributors":[["Timer",5],["chibicode",3],["todortotev",2],["vimota",1],["timneutkens",1],["ijjk",1],["timothyis",1],["khattakdev",1],["phillip055",1],["tanmaylaud",1],["Necmttn",1],["NorbertLuszkiewicz",1],["merceyz",1],["benbender",1],["lucleray",1]]},{"name":"with-cssed","title":"Example app with cssed","description":"\nThis example shows how to use [cssed](https://github.com/okotoki/cssed), a CSS-in-JS library, with Next.js.\n\nWe are creating `div` element with local scoped styles. The styles includes the use of pseudo-selector.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-cssed&project-name=with-cssed&repository-name=with-cssed)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-cssed with-cssed-app\n# or\nyarn create next-app --example with-cssed with-cssed-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["opudalo",1],["lucleray",1],["lfades",1]]},{"name":"with-custom-babel-config","title":"Using a custom Babel config","description":"\nThis example features:\n\n- An app using proposed [do expressions](https://babeljs.io/docs/plugins/transform-do-expressions/).\n- It uses babel-preset-stage-0, which allows us to use above JavaScript feature.\n- It uses '.babelrc' file in the app directory to add above preset.\n\n> Most of the time, when writing a custom `.babelrc` file, you need to add `next/babel` as a preset.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-custom-babel-config&project-name=with-custom-babel-config&repository-name=with-custom-babel-config)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-custom-babel-config with-custom-babel-config-app\n# or\nyarn create next-app --example with-custom-babel-config with-custom-babel-config-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",6],["Timer",4],["chibicode",3],["lfades",3],["arunoda",2],["todortotev",2],["impronunciable",1],["sedubois",1],["sakulstra",1],["paulmolluzzo",1],["jthegedus",1],["messa",1],["mherodev",1],["HaNdTriX",1],["kachkaev",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-custom-reverse-proxy","title":"Reverse Proxy example","description":"\nThis example applies this gist https://gist.github.com/jamsesso/67fd937b74989dc52e33 to Nextjs and provides:\n\n- Reverse proxy in development mode by add `http-proxy-middleware` to custom server\n- NOT a recommended approach to production scale (hence explicit dev flag) as we should scope proxy as outside UI applications and have separate web server taking care of that.\n\nSorry for the extra packages. I belong to the minority camp of writing ES6 code on Windows developers. Essentially you only need `http-proxy-middleware` on top of bare-bone Nextjs setup to run this example.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-custom-reverse-proxy with-custom-reverse-proxy-app\n# or\nyarn create next-app --example with-custom-reverse-proxy with-custom-reverse-proxy-app\n```\n\n## What it does\n\nTake any random query string to the index page and does a GET to `/api/<query string>` which gets routed internally to `https://swapi.co/api/<query string>`, or any API endpoint you wish to configure through the proxy.\n\n## Expectation\n\n/api/people/2 routed to https://swapi.co/api/people/2\nTry Reset\n\n```json\n{\n  \"name\": \"C-3PO\",\n  \"height\": \"167\",\n  \"mass\": \"75\",\n  \"hair_color\": \"n/a\",\n  \"skin_color\": \"gold\",\n  \"eye_color\": \"yellow\",\n  \"birth_year\": \"112BBY\",\n  \"gender\": \"n/a\",\n  \"homeworld\": \"https://swapi.co/api/planets/1/\",\n  \"films\": [\n    \"https://swapi.co/api/films/2/\",\n    \"https://swapi.co/api/films/5/\",\n    \"https://swapi.co/api/films/4/\",\n    \"https://swapi.co/api/films/6/\",\n    \"https://swapi.co/api/films/3/\",\n    \"https://swapi.co/api/films/1/\"\n  ],\n  \"species\": [\"https://swapi.co/api/species/2/\"],\n  \"vehicles\": [],\n  \"starships\": [],\n  \"created\": \"2014-12-10T15:10:51.357000Z\",\n  \"edited\": \"2014-12-20T21:17:50.309000Z\",\n  \"url\": \"https://swapi.co/api/people/2/\"\n}\n```\n","contributors":[["Timer",5],["timneutkens",3],["jthegedus",2],["lfades",2],["cheshirecode",1],["brikou",1],["mherodev",1],["danielr18",1],["j0lv3r4",1],["chibicode",1],["artemisart",1],["tanmaylaud",1],["NorbertLuszkiewicz",1]]},{"name":"with-cxs","title":"Example app with cxs","description":"\nThis example shows how to use a different styling solution than [styled-jsx](https://github.com/zeit/styled-jsx) that also supports universal styles. That means we can serve the required styles for the first render within the HTML and then load the rest in the client. In this case we are using [cxs](https://github.com/jxnblk/cxs/).\n\nFor this purpose we are extending the `<Document />` and injecting the server side rendered styles into the `<head>`.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-cxs&project-name=with-cxs&repository-name=with-cxs)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-cxs with-cxs-app\n# or\nyarn create next-app --example with-cxs with-cxs-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",6],["Timer",5],["chibicode",3],["lfades",3],["aranajhonny",2],["jthegedus",2],["lucleray",2],["sedubois",1],["sakulstra",1],["paulmolluzzo",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["ywppp",1],["agstover",1],["NorbertLuszkiewicz",1],["neighborhood999",1]]},{"name":"with-deta-base","title":"Deta Base Example","description":"\nAn example using [Deta Base](https://docs.deta.sh/docs/base/about) in a Next.js project.\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-2-setting-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-deta-base&project-name=with-deta-base&repository-name=with-deta-base&env=DETA_PROJECT_KEY&envDescription=The%20Deta%20Project%20Key%2C%20found%20in%20the%20Deta%20dashboard&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-deta-base%23configuration)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-deta-base with-deta-base-app\n# or\nyarn create next-app --example with-deta-base with-deta-base-app\n```\n\n## Configuration\n\n### Step 1. Create a Deta Account\n\nCreate an account on [Deta](https://www.deta.sh/?ref=next.js). Save the default _Project Key_ which will be auto-generated on account creation.\n\n### Step 2. Setting Up Environment Variables\n\nCopy the `.env.local.example` file from this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local`:\n\n- `DETA_PROJECT_KEY` should be the default _Project Key_ that you saved from step 1.\n\nThe resulting `env.local` file should look like this:\n\n```bash\nDETA_PROJECT_KEY=...\n```\n\n### Step 3. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour todo app should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 4. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-deta-base&project-name=with-deta-base&repository-name=with-deta-base&env=DETA_PROJECT_KEY&envDescription=The%20Deta%20Project%20Key%2C%20found%20in%20the%20Deta%20dashboard&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-deta-base%23configuration)\n","contributors":[["xeust",1],["LauraBeatris",1],["lucleray",1]]},{"name":"with-docker","title":"With Docker","description":"\nThis examples shows how to use Docker with Next.js based on the [deployment documentation](https://nextjs.org/docs/deployment#docker-image). Additionally, it contains instructions for deploying to Google Cloud Run. However, you can use any container-based deployment host.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-docker nextjs-docker\n# or\nyarn create next-app --example with-docker nextjs-docker\n```\n\n## Using Docker\n\n1. [Install Docker](https://docs.docker.com/get-docker/) on your machine.\n1. Build your container: `docker build -t nextjs-docker .`.\n1. Run your container: `docker run -p 3000:3000 nextjs-docker`.\n\nYou can view your images created with `docker images`.\n\n## Deploying to Google Cloud Run\n\nThe `start` script in `package.json` has been modified to accept a `PORT` environment variable (for compatability with Google Cloud Run).\n\n1. Install the [Google Cloud SDK](https://cloud.google.com/sdk/docs/install) so you can use `gcloud` on the command line.\n1. Run `gcloud auth login` to log in to your account.\n1. [Create a new project](https://cloud.google.com/run/docs/quickstarts/build-and-deploy) in Google Cloud Run (e.g. `nextjs-docker`). Ensure billing is turned on.\n1. Build your container image using Cloud Build: `gcloud builds submit --tag gcr.io/PROJECT-ID/helloworld --project PROJECT-ID`. This will also enable Cloud Build for your project.\n1. Deploy to Cloud Run: `gcloud run deploy --image gcr.io/PROJECT-ID/helloworld --project PROJECT-ID --platform managed`. Choose a region of your choice.\n\n   - You will be prompted for the service name: press Enter to accept the default name, `helloworld`.\n   - You will be prompted for [region](https://cloud.google.com/run/docs/quickstarts/build-and-deploy#follow-cloud-run): select the region of your choice, for example `us-central1`.\n   - You will be prompted to **allow unauthenticated invocations**: respond `y`.\n\n## Running Locally\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n\nYou can start editing the page by modifying `pages/index.js`. The page auto-updates as you edit the file.\n\n[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.js`.\n\nThe `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.\n","contributors":[["Timer",5],["timneutkens",2],["areai51",2],["evenchange4",1],["yhirano55",1],["mherodev",1],["lipp",1],["JeromeFitz",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["lfades",1],["chibicode",1],["sdhani",1],["willianjusten",1],["teo-garcia",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["nghiepit",1],["dlackty",1],["leerob",1],["AntelaBrais",1],["wodCZ",1]]},{"name":"with-dotenv","title":"`dotenv` Example","description":"\nNext.js automatically supports Environment Variable loading as of Next.js 9.4.\nYou can [read more about it in the blog post](https://nextjs.org/blog/next-9-4#new-environment-variables-support).\n\nVisit [the documentation](https://nextjs.org/docs/basic-features/environment-variables) to learn how to use Environment Variables support in Next.js 9.4+ and the [Environment Variables Example](/examples/environment-variables) to see it on action.\n","contributors":[["Timer",5],["timneutkens",4],["dav-is",3],["chibicode",3],["lfades",3],["jthegedus",2],["pencilcheck",1],["mineiro",1],["fouad",1],["mherodev",1],["HaNdTriX",1],["j0lv3r4",1],["Ephem",1],["mcsdevv",1],["fabienheureux",1],["francismarcus",1],["ijjk",1],["tanmaylaud",1]]},{"name":"with-draft-js","title":"DraftJS Medium editor inspiration","description":"\nHave you ever wanted to have an editor like medium.com in your Next.js app? DraftJS is available for SSR, but some plugins like the toolbar are using `window`, which does not work when doing SSR.\n\nThis example aims to provide a fully customizable example of the famous medium editor with DraftJS. The goal was to get it as customizable as possible, and fully working with Next.js without using the react-no-ssr package.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-draft-js&project-name=with-draft-js&repository-name=with-draft-js)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-draft-js with-draft-js-app\n# or\nyarn create next-app --example with-draft-js with-draft-js-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["chibicode",3],["timneutkens",3],["lfades",3],["jthegedus",2],["agarwalrounak",2],["aquiseb",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["sungpro",1],["lucleray",1],["caaatisgood",1]]},{"name":"with-dynamic-app-layout","title":"With dynamic `App` layout example","description":"\nShows how to use `pages/_app.js` to implement _dynamic_ layouts for pages. This is achieved by attaching a static `Layout` property to each page that needs a different layout. In that way, once we use `pages/_app.js` to wrap our pages, we can get it from `Component.Layout` and render it accordingly.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-dynamic-app-layout&project-name=with-dynamic-app-layout&repository-name=with-dynamic-app-layout)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-dynamic-app-layout with-dynamic-app-layout-app\n# or\nyarn create next-app --example with-dynamic-app-layout with-dynamic-app-layout-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["timneutkens",4],["chibicode",3],["lfades",3],["todortotev",2],["klujanrosas",1],["crutchcorn",1],["dav-is",1],["mcsdevv",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["oshdev",1],["lucleray",1]]},{"name":"with-dynamic-import","title":"Example app with dynamic-imports","description":"\nThis examples shows how to dynamically import modules via [`import()`](https://github.com/tc39/proposal-dynamic-import) API\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-dynamic-import&project-name=with-dynamic-import&repository-name=with-dynamic-import)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-dynamic-import with-dynamic-import-app\n# or\nyarn create next-app --example with-dynamic-import with-dynamic-import-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["arunoda",8],["timneutkens",7],["Timer",5],["chibicode",4],["lfades",4],["jthegedus",2],["HaNdTriX",2],["johhansantana",1],["achtan",1],["davidnguyen179",1],["sergiodxa",1],["fouad",1],["mherodev",1],["yuyokk",1],["j0lv3r4",1],["liulanz",1],["awareness481",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-electron","title":"Electron application example","description":"\nThis example shows how you can use Next.js inside an Electron application to avoid a lot of configuration. It uses the Next.js router as view and server-render to speed up the initial render of the application.\n\nFor development it's going to run an HTTP server and let Next.js handle routing. In production it uses `next export` to pre-generate HTML static files and uses them in your app instead of running an HTTP server.\n\n**You can find a detailed documentation about how to build Electron apps with Next.js [here](https://leo.im/2017/electron-next)!**\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-electron with-electron-app\n# or\nyarn create next-app --example with-electron with-electron-app\n```\n\nYou can create the production app using `npm run dist`.\n","contributors":[["Timer",6],["timneutkens",3],["merceyz",3],["jthegedus",2],["HaNdTriX",2],["sergiodxa",1],["leo",1],["fouad",1],["mherodev",1],["crutchcorn",1],["lfades",1],["codemonkey800",1],["chibicode",1],["ijjk",1],["todortotev",1],["tanmaylaud",1],["DavidLemayian",1],["NorbertLuszkiewicz",1],["sungpro",1]]},{"name":"with-electron-typescript","title":"Electron with Typescript application example","description":"\nThis example show how you can use Next.js inside an Electron application to avoid a lot of configuration, use Next.js router as view and use server-render to speed up the initial render of the application. Both Next.js and Electron layers are written in TypeScript and compiled to JavaScript during the build process.\n\n| Part       | Source code (Typescript) | Builds (JavaScript) |\n| ---------- | ------------------------ | ------------------- |\n| Next.js    | `/renderer`              | `/renderer`         |\n| Electron   | `/electron-src`          | `/main`             |\n| Production |                          | `/dist`             |\n\nFor development it's going to run a HTTP server and let Next.js handle routing. In production it use `next export` to pre-generate HTML static files and use them in your app instead of running an HTTP server.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-electron-typescript with-electron-typescript-app\n# or\nyarn create next-app --example with-electron-typescript with-electron-typescript-app\n```\n\nAvailable commands:\n\n```bash\n\"build-renderer\": build and transpile Next.js layer\n\"build-electron\": transpile electron layer\n\"build\": build both layers\n\"dev\": start dev version\n\"dist\": create production electron build\n\"type-check\": check TypeScript in project\n```\n\n## Notes\n\nYou can create the production app using `npm run dist`.\n\n_note regarding types:_\n\n- Electron provides its own type definitions, so you don't need @types/electron installed!\n  source: https://www.npmjs.com/package/@types/electron\n- There were no types available for `electron-next` at the time of creating this example, so until they are available there is a file `electron-next.d.ts` in `electron-src` directory.\n","contributors":[["Timer",5],["jakubkarabula",1],["huv1k",1],["lfades",1],["codemonkey800",1],["chibicode",1],["NMinhNguyen",1],["ijjk",1],["todortotev",1],["tanmaylaud",1],["laiso",1],["kmturley",1],["NorbertLuszkiewicz",1],["merceyz",1],["davidsonsns",1],["LittleboyHarry",1],["LauraBeatris",1],["Almad",1],["ShashiSrinath",1]]},{"name":"with-emotion","title":"Emotion Example","description":"\nExtract and inline critical css with\n[@emotion/css](https://github.com/emotion-js/emotion/tree/master/packages/css),\n[@emotion/server](https://github.com/emotion-js/emotion/tree/master/packages/server),\n[@emotion/react](https://github.com/emotion-js/emotion/tree/master/packages/react),\nand [@emotion/styled](https://github.com/emotion-js/emotion/tree/master/packages/styled).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-emotion&project-name=with-emotion&repository-name=with-emotion)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-emotion with-emotion-app\n# or\nyarn create next-app --example with-emotion with-emotion-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",6],["Timer",4],["chibicode",3],["lfades",3],["silvenon",2],["jthegedus",2],["bell-steven",2],["mitchellhamilton",1],["hamlim",1],["hawkins",1],["hmeissner",1],["fouad",1],["mherodev",1],["janczizikow",1],["JeroenKnoops",1],["mebrein",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["teo-garcia",1],["lboecker",1],["ijjk",1],["steph-query",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["neighborhood999",1],["merceyz",1],["JipSterk",1],["karlhorky",1],["xiaooye",1],["lucleray",1],["jpalmieri",1]]},{"name":"with-emotion-vanilla","title":"Emotion Vanilla Example","description":"\nExtract and inline critical css with\n[emotion](https://github.com/emotion-js/emotion/tree/master/packages/emotion),\n[@emotion/server](https://github.com/emotion-js/emotion/tree/master/packages/server),\n[@emotion/css](https://github.com/emotion-js/emotion/tree/master/packages/css)\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/import/project?template=https://github.com/vercel/next.js/tree/canary/examples/with-emotion-vanilla)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-emotion-vanilla with-emotion-vanilla-app\n# or\nyarn create next-app --example with-emotion-vanilla with-emotion-vanilla-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/import?filter=next.js&utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["MMT-LD",1]]},{"name":"with-env-from-next-config-js","title":"With env From next.config.js","description":"\nThis example demonstrates setting parameters that will be used by your application and set at build time (not run time).\nMore specifically, what that means, is that environmental variables are programmed into the special configuration file `next.config.js` and then\nreturned to your react components when the program is built with `next build`.\n\nAs the build process (`next build`) is proceeding, `next.config.js` is processed and passed in as a parameter is the variable `phase`.\n`phase` can have the values `PHASE_DEVELOPMENT_SERVER` or `PHASE_PRODUCTION_BUILD` (as defined in `next\\constants`). Based on the variable\n`phase`, different environmental variables can be set for use in your react app. That is, if you reference `process.env.RESTURL_SPEAKERS`\nin your react app, whatever is returned by `next.config.js` as the variable `env`, (or `env.RESTURL_SPEAKERS`) will be accessible in your\napp as `process.env.RESTURL_SPEAKERS`.\n\nView the docs on [`next.config.js`](https://nextjs.org/docs/api-reference/next.config.js/introduction) for more information.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-env-from-next-config-js&project-name=with-env-from-next-config-js&repository-name=with-env-from-next-config-js)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-env-from-next-config-js with-env-from-next-config-js-app\n# or\nyarn create next-app --example with-env-from-next-config-js with-env-from-next-config-js-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n> ## Special note\n>\n> `next build` does a hard coded variable substitution into your JavaScript before the final bundle is created. This means\n> that if you change your environmental variables outside of your running app, such as in windows with `set` or lunix with `setenv`\n> those changes will not be reflected in your running application until a build happens again (with `next build`).\n\n## Discussion regarding this example\n\nThis example is not meant to be a reference standard for how to do development, staging and\nproduction builds with Next. This is just one possible scenario that could be used if you want the\nfollowing behavior while you are doing development.\n\n- When your run `next dev` or `npm run dev`, you will always use the environmental variables assigned when `isDev` is true in the example.\n- When you run `next build` then `next start`, assuming you set externally the environmental variable STAGING to anything but 1, you will get the results assuming `isProd` is true.\n- When your run `next build` or `npm run build` in production, if the environmental variable `STAGING` is set to `1`, `isStaging` will be set and you will get those values returned.\n\nYou can read more about this feature in this blog post <a href=\"https://vercel.com/blog/next5-1\" target=\"_blank\">Next.js 5.1: Faster Page Resolution, Environment Config and More</a> (under Environment Config).\n","contributors":[["Timer",6],["lfades",4],["chibicode",3],["ijjk",2],["pkellner",1],["dav-is",1],["mcsdevv",1],["nicolasrouanne",1],["timneutkens",1],["dzigg",1],["sdhani",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["LauraBeatris",1],["lucleray",1],["caaatisgood",1]]},{"name":"with-expo","title":"With Expo","description":"\n[![supports iOS](https://img.shields.io/badge/iOS-4630EB.svg?style=flat-square&logo=APPLE&labelColor=999999&logoColor=fff)](https://itunes.apple.com/app/apple-store/id982107779)\n[![supports Android](https://img.shields.io/badge/Android-4630EB.svg?style=flat-square&logo=ANDROID&labelColor=A4C639&logoColor=fff)](https://play.google.com/store/apps/details?id=host.exp.exponent&referrer=www)\n[![supports web](https://img.shields.io/badge/web-4630EB.svg?style=flat-square&logo=GOOGLE-CHROME&labelColor=4285F4&logoColor=fff)](https://docs.expo.io/workflow/web/)\n\nThis is a starter project for creating universal React apps with Next.js and Expo.\n\n> 💡 For the most updated info, see the [Expo + Next.js Docs](https://docs.expo.io/guides/using-nextjs/)!\n\n![iOS, Android, and web running with Expo and Next.js](./public/demo.png)\n\n- Next.js cannot be used for SSR in your native app.\n- The native bundle is built using the [Metro bundler](https://facebook.github.io/metro/) and may not have the same level of optimization as the web bundle which is compiled using the Next.js Webpack configuration.\n- Expo transpiles `react-native-web` packages by default to enable the use of `react-native` in a browser or Node.js environment.\n- All [Expo packages](https://docs.expo.io/versions/latest/) work in the browser. If you experience issues using them in a Node environment, please report them here: [Expo issues](https://github.com/expo/expo/issues).\n- Most community `react-native-*` packages do not support web, please refer to [reactnative.directory](https://reactnative.directory/?web=true) for a list of web compatible packages.\n- Eject the `pages/_document` component by running `yarn next-expo customize`.\n- To use fonts and images, see [the Expo docs](https://docs.expo.io/guides/using-nextjs/#image-support).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) (web only):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-expo&project-name=with-expo&repository-name=with-expo)\n\nDeploy the native app to the App store and Play store using [Expo deployment](https://docs.expo.io/distribution/app-stores/).\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-expo with-expo-app\n# or\nyarn create next-app --example with-expo with-expo-app\n```\n\n### Running web\n\n> 🚨 Using default Expo web with Next.js is not supported.\n\n- Start the Next.js project with `yarn dev` (`yarn next dev`).\n\nDeploy the web app to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n### Running native\n\n- Install the Expo CLI `npm i -g expo-cli`.\n- Start the Metro bundler with `yarn ios` or `yarn android` -- This runs `expo start` with the Expo CLI.\n- You can run the mobile app using the [Expo client app](https://expo.io/tools), or by running `yarn eject` and building the project manually (this requires a macbook for iOS).\n\nDeploy the native app to the App store and Play store using [Expo deployment](https://docs.expo.io/distribution/app-stores/).\n\n## Troubleshooting\n\nYou may find that certain packages like `@ui-kitten/components` do not work in the browser. This is because they need to be transpiled by Next.js, you can fix this by doing the following:\n\n- Install the following:\n\n```sh\nyarn add -D next-compose-plugins next-transpile-modules\n```\n\n- Modify the Next.js config `next.config.js`:\n\n```js\nconst { withExpo } = require('@expo/next-adapter')\nconst withPlugins = require('next-compose-plugins')\nconst withTM = require('next-transpile-modules')([\n  // Add the name of your package here...\n  '@ui-kitten/components',\n])\n\nmodule.exports = withPlugins([withTM, [withExpo, { projectRoot: __dirname }]], {\n  // ...\n})\n```\n","contributors":[["Timer",2],["EvanBacon",1],["brunocrosier",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["kmkzt",1],["lucleray",1],["lfades",1]]},{"name":"with-expo-typescript","title":"With Expo TypeScript","description":"\n[![supports iOS](https://img.shields.io/badge/iOS-4630EB.svg?style=flat-square&logo=APPLE&labelColor=999999&logoColor=fff)](https://itunes.apple.com/app/apple-store/id982107779)\n[![supports Android](https://img.shields.io/badge/Android-4630EB.svg?style=flat-square&logo=ANDROID&labelColor=A4C639&logoColor=fff)](https://play.google.com/store/apps/details?id=host.exp.exponent&referrer=www)\n[![supports web](https://img.shields.io/badge/web-4630EB.svg?style=flat-square&logo=GOOGLE-CHROME&labelColor=4285F4&logoColor=fff)](https://docs.expo.io/workflow/web/)\n\nThis is a starter project for creating universal React apps with Next.js, Expo, and TypeScript.\n\n> 💡 For the most updated info, see the [Expo + Next.js Docs](https://docs.expo.io/guides/using-nextjs/)!\n\n![iOS, Android, and web running with Expo and Next.js](./public/demo.png)\n\n- Next.js cannot be used for SSR in your native app.\n- The native bundle is built using the [Metro bundler](https://facebook.github.io/metro/) and may not have the same level of optimization as the web bundle which is compiled using the Next.js Webpack configuration.\n- Expo transpiles `react-native-web` packages by default to enable the use of `react-native` in a browser or Node.js environment.\n- All [Expo packages](https://docs.expo.io/versions/latest/) work in the browser. If you experience issues using them in a Node environment, please report them here: [Expo issues](https://github.com/expo/expo/issues).\n- Most community `react-native-*` packages do not support web, please refer to [reactnative.directory](https://reactnative.directory/?web=true) for a list of web compatible packages.\n- Eject the `pages/_document` component by running `yarn next-expo customize`.\n- To use fonts and images, see [the Expo docs](https://docs.expo.io/guides/using-nextjs/#image-support).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) (web only):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-expo&project-name=with-expo&repository-name=with-expo)\n\nDeploy the native app to the App store and Play store using [Expo deployment](https://docs.expo.io/distribution/app-stores/).\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-expo-typescript with-expo-typescript-app\n# or\nyarn create next-app --example with-expo-typescript with-expo-typescript-app\n```\n\n### Running web\n\n> 🚨 Using default Expo web with Next.js is not supported.\n\n- Start the Next.js project with `yarn dev` (`yarn next dev`).\n\nDeploy the web app to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n### Running native\n\n- Install the Expo CLI `npm i -g expo-cli`.\n- Start the Metro bundler with `yarn ios` or `yarn android` -- This runs `expo start` with the Expo CLI.\n- You can run the mobile app using the [Expo client app](https://expo.io/tools), or by running `yarn eject` and building the project manually (this requires a macbook for iOS).\n\nDeploy the native app to the App store and Play store using [Expo deployment](https://docs.expo.io/distribution/app-stores/).\n\n## Troubleshooting\n\nYou may find that certain packages like `@ui-kitten/components` do not work in the browser. This is because they need to be transpiled by Next.js, you can fix this by doing the following:\n\n- Install the following:\n\n```sh\nyarn add -D next-compose-plugins next-transpile-modules\n```\n\n- Modify the Next.js config `next.config.js`:\n\n```js\nconst { withExpo } = require('@expo/next-adapter')\nconst withPlugins = require('next-compose-plugins')\nconst withTM = require('next-transpile-modules')([\n  // Add the name of your package here...\n  '@ui-kitten/components',\n])\n\nmodule.exports = withPlugins([withTM, [withExpo, { projectRoot: __dirname }]], {\n  // ...\n})\n```\n","contributors":[["arvigeus",2],["Timer",2],["jtmthf",1],["tanmaylaud",1],["awareness481",1],["NorbertLuszkiewicz",1],["kmkzt",1],["lucleray",1],["lfades",1]]},{"name":"with-facebook-pixel","title":"#Example app using Facebook Pixel","description":"\nThis example shows how to use Next.js along with Facebook Pixel. A custom [\\_document](https://nextjs.org/docs/advanced-features/custom-document) is used to inject [base code](https://developers.facebook.com/docs/facebook-pixel/implementation/?locale=en_US). A [\\_app](https://nextjs.org/docs/advanced-features/custom-app) is used to track route changes and send page views to Facebook Pixel.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-facebook-pixel&project-name=with-facebook-pixel&repository-name=with-facebook-pixel)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-facebook-pixel with-facebook-pixel-app\n# or\nyarn create next-app --example with-facebook-pixel with-facebook-pixel-app\n```\n\nNext, copy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nSet the `NEXT_PUBLIC_FACEBOOK_PIXEL_ID` variable in `.env.local` to match your facebook app's pixel ID.\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["niko20",2],["ashconnell",1],["FutureKode",1],["lucleray",1],["lfades",1]]},{"name":"with-fela","title":"Example app with Fela","description":"\nThis example features how to use a different styling solution than [styled-jsx](https://github.com/zeit/styled-jsx) that also supports universal styles. That means we can serve the required styles for the first render within the HTML and then load the rest in the client. In this case we are using [fela](https://github.com/rofrischmann/fela).\n\nFor this purpose we are extending the `<Document />` and injecting the server side rendered styles into the `<head>`.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-fela&project-name=with-fela&repository-name=with-fela)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-fela with-fela-app\n# or\nyarn create next-app --example with-fela with-fela-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",8],["Timer",6],["robinweser",5],["chibicode",3],["lfades",3],["steida",2],["jthegedus",2],["lucleray",2],["sakulstra",1],["paulmolluzzo",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["TxHawks",1],["dav-is",1],["keanulee",1],["aga5tya",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["neighborhood999",1],["danielstocks",1]]},{"name":"with-filbert","title":"Using Next.js with filbert-js","description":"\nA light weight(~1KB) css-in-js solution(framework)🎨\n\nThis example showcase how to perform SSR & extract and inline critical css with [@filbert-js/server-stylesheet](https://www.npmjs.com/package/@filbert-js/server-stylesheet) and [@filbert-js/core](https://www.npmjs.com/package/@filbert-js/core)\n\nIf you are running into any issues with this example, feel free to open-up an issue at https://github.com/kuldeepkeshwar/filbert-js/issues.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-filbert&project-name=with-filbert&repository-name=with-filbert)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-filbert with-filbert-app\n# or\nyarn create next-app --example with-filbert with-filbert-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["kuldeepkeshwar",2],["Timer",2],["NorbertLuszkiewicz",1],["lucleray",1],["lfades",1]]},{"name":"with-firebase","title":"Firebase Example","description":"\nThis is a simple set up for Firebase for client side applications.\n\nThe firebase app is initialized in `firebase/clientApp.js`, to use you just have to import it anywhere in the app\n\nThe React Context API is used to provide user state.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-firebase&project-name=with-firebase&repository-name=with-firebase)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-firebase with-firebase-app\n# or\nyarn create next-app --example with-firebase with-firebase-app\n```\n\n## Configuration\n\n1. [Create a Firebase project](https://console.firebase.google.com/u/0/) and add a new app to it.\n2. Create a `.env.local` file and copy the contents of `.env.local.example` into it:\n\n```bash\ncp .env.local.example .env.local\n```\n\n3. Set each variable on `.env.local` with your Firebase Configuration (found in \"Project settings\").\n\n4. If you want to check the SSR page, get your account credentials from the Firebase console at _Project settings > Service accounts_, where you can click on _Generate new private key_ and download the credentials as a json file. Then set `FIREBASE_CLIENT_EMAIL` and `FIREBASE_PRIVATE_KEY` in `.env.local`\n\n## Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n","contributors":[["Timer",4],["captDaylight",1],["paulmolluzzo",1],["Ehesp",1],["HaNdTriX",1],["jthegedus",1],["julianbenegas",1],["timneutkens",1],["ijjk",1],["timothyis",1],["mvllow",1],["tanmaylaud",1],["matamatanot",1],["futantan",1],["mikan3rd",1],["louison",1],["thomaswang",1],["lucleray",1],["lfades",1]]},{"name":"with-firebase-authentication","title":"With Firebase Authentication","description":"\nCheck out the [next-firebase-auth](https://github.com/gladly-team/next-firebase-auth) package and their [official example](https://github.com/gladly-team/next-firebase-auth/tree/main/example) for a powerful implementation of Firebase authentication.\n","contributors":[["Timer",6],["timneutkens",5],["jthegedus",3],["chibicode",3],["abelta",2],["lfades",2],["todortotev",2],["joejknowles",2],["brikou",1],["goldensunliu",1],["lquixada",1],["Ehesp",1],["fouad",1],["sarovin",1],["mherodev",1],["obedparla",1],["JeroenKnoops",1],["moflo",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["0x80",1],["jeanbauer",1],["bokuweb",1],["ssong",1],["djanda97",1],["kohchihao",1],["willianjusten",1],["ijjk",1],["Remeic",1],["GorvGoyl",1],["Wssn",1],["matamatanot",1],["elsigh",1],["abhik-b",1],["tanmaylaud",1],["francisrod01",1],["NorbertLuszkiewicz",1],["gr-qft",1],["toshi1127",1],["mongolyy",1],["lucleray",1],["kmjennison",1]]},{"name":"with-firebase-authentication-serverless","title":"This example has been moved to [with-firebase-authentication](/examples/with-firebase-authentication)","description":"","contributors":[["chibicode",2],["kmjennison",1],["timneutkens",1],["aemiro-allison",1],["NavizDev",1],["lfades",1],["tanmaylaud",1]]},{"name":"with-firebase-cloud-messaging","title":"With Firebase Cloud Messaging example","description":"\nTo demo how to implement firebase cloud messaging to send web push notification in next.js.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-firebase-cloud-messaging with-firebase-cloud-messaging-app\n# or\nyarn create next-app --example with-firebase-cloud-messaging with-firebase-cloud-messaging-app\n```\n\n## Set your send id\n\nset your `messagingSenderId` in `static/firebase-messaging-sw.js` and `utils/webPush.js`\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## How to send a notification\n\nhttps://firebase.google.com/docs/cloud-messaging/js/first-message,\n","contributors":[["Timer",5],["chibicode",3],["todortotev",2],["eldyvoon",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["ssong",1],["aviaryan",1],["timneutkens",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["awareness481",1],["Sm1t",1],["lucleray",1],["VictorAssis",1]]},{"name":"with-firebase-hosting","title":"with Firebase Hosting example","description":"\nThe goal is to host the Next.js app on Firebase Cloud Functions with Firebase Hosting rewrite rules so our app is served from our Firebase Hosting URL. Each individual `page` bundle is served in a new call to the Cloud Function which performs the initial server render.\n\nIf you are having issues, feel free to tag @jthegedus in the [issue you create on the next.js repo](https://github.com/vercel/next.js/issues/new)\n\n<details>\n<summary><b>Make sure that firebase is set up and you have the projectID</b></summary>\n\n- Install Firebase Tools: `npm i -g firebase-tools`\n- Create a project through the [firebase web console](https://console.firebase.google.com/)\n- Login to the Firebase CLI tool with `firebase login`\n- Grab the **projectID** from [`firebase projects:list`](https://firebase.google.com/docs/cli#admin-commands) or the web consoles URL: `https://console.firebase.google.com/project/<projectID>`\n  </details>\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-firebase-hosting with-firebase-hosting-app\n# or\nyarn create next-app --example with-firebase-hosting with-firebase-hosting-app\n```\n\n**Important:** Update `.firebaserc` and add your firebase project ID.\n\nTo run Firebase locally for testing:\n\n```bash\nnpm run serve\n# or\nyarn serve\n```\n\nTo deploy it to the cloud with Firebase:\n\n```bash\nnpm run deploy\n# or\nyarn deploy\n```\n\n## Typescript\n\nTo use Typescript, simply follow [Typescript setup](https://nextjs.org/learn/excel/typescript/setup) as normal (package.json scripts are already set).\n\ni.e: `npm install --save-dev typescript @types/react @types/node`\n\nThen you can create components and pages in `.tsx` or `.ts`\n\n**Only `src/next.config.js` and `firebaseFunctions.js` must remain in `*.js` format.**\n\n## Good to know\n\n- [`firebase.json`](firebase.json:#L7) outlines the catchall rewrite rule for our Cloud Function.\n- The empty `public/.gitignore` file is to ensure `public/` dir exists as it is required for Firebase Hosting. It is [configured](firebase.json:#L4) (by [default](https://firebase.google.com/docs/hosting/full-config#ignore)) that dotfiles (`public/.*`) are ignored from being publicly served.\n- The Cloud Function is named `nextjsFunc` (changeable in [firebaseFunctions.js](firebaseFunctions.js#L16) and [firebase.json](firebase.json#L8)).\n- `public/*` files are statically served through [Firebase hosting](https://firebase.google.com/docs/hosting/full-config#public), not through [NextJs server](https://nextjs.org/docs/basic-features/static-file-serving).\n\n#### Customization\n\nNext App is in `src/` directory.\n\nThe crucial files for the setup:\n\n- `.firebaserc`\n- `firebase.json`\n- `firebaseFunctions.js`\n- `src/next.config.js`\n- In `package.json`: `firebase-*` packages.\n\n## References\n\n- [geovanisouza92/serverless-firebase](https://github.com/geovanisouza92/serverless-firebase) repo\n- [jthegedus/firebase-functions-next-example](https://github.com/jthegedus/firebase-functions-next-example) repo\n- [this medium article](https://medium.com/@jthegedus/next-js-on-cloud-functions-for-firebase-with-firebase-hosting-7911465298f2)\n- [Crash Course: Node.js apps on Firebase Hosting](https://youtu.be/LOeioOKUKI8)\n- [Official documentation](https://firebase.google.com/docs/cli).\n","contributors":[["jthegedus",8],["Timer",6],["timneutkens",5],["lfades",2],["fouad",1],["sarovin",1],["jonjamz",1],["mherodev",1],["kachkaev",1],["oBusk",1],["j0lv3r4",1],["afuggini",1],["crutchcorn",1],["chaitanyareddyk",1],["chibicode",1],["ssong",1],["petamoriken",1],["hossam-magdy",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["sakito21",1],["NorbertLuszkiewicz",1],["LauraBeatris",1],["maerzhase",1]]},{"name":"with-flow","title":"Example app with [Flow](https://flowtype.org/)","description":"\nThis example shows how you can use Flow, with the transform-flow-strip-types babel plugin stripping flow type annotations from your output code.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-flow&project-name=with-flow&repository-name=with-flow)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-flow with-flow-app\n# or\nyarn create next-app --example with-flow with-flow-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",9],["Timer",5],["chibicode",3],["lfades",3],["jagreehal",2],["jthegedus",2],["mizchi",1],["sakulstra",1],["nkzawa",1],["sedubois",1],["paulmolluzzo",1],["CraigRamey",1],["fouad",1],["davscro",1],["matiasfha",1],["vasco3",1],["mherodev",1],["Tomekmularczyk",1],["DullReferenceException",1],["j0lv3r4",1],["jhoffmcd",1],["dav-is",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["madiknox",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-framer-motion","title":"framer-motion example","description":"\nFramer [`Motion`](https://github.com/framer/motion) is a production-ready animation library. By using a custom [`<App>`](https://nextjs.org/docs/advanced-features/custom-app) along with Motion's [`AnimatePresence`](https://www.framer.com/api/motion/animate-presence/) component, transitions between Next pages becomes simple and declarative.\n\nWhen using Next's `<Link>` component, you will likely want to [disable the default scroll behavior](https://nextjs.org/docs/api-reference/next/link#disable-scrolling-to-the-top-of-the-page) for a more seamless navigation experience. Scrolling to the top of a page can be re-enabled by adding a `onExitComplete` callback on the `AnimatePresence` component.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-framer-motion&project-name=with-framer-motion&repository-name=with-framer-motion)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-framer-motion with-framer-motion-app\n# or\nyarn create next-app --example with-framer-motion with-framer-motion-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",4],["chibicode",3],["timneutkens",2],["lfades",2],["natemoo-re",1],["todortotev",1],["ijjk",1],["stefanprobst",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["caaatisgood",1]]},{"name":"with-glamorous","title":"Glamorous has been deprecated in favor of Emotion. Please see https://github.com/paypal/glamorous/issues/419 for more information.","description":"\nYou can find the Next.js example for Emotion here: https://github.com/vercel/next.js/tree/canary/examples/with-emotion\n","contributors":[["timneutkens",5],["chibicode",3],["paulmolluzzo",2],["jthegedus",2],["Timer",2],["ooade",1],["HaNdTriX",1],["bermanboris",1],["fouad",1],["Hurtak",1],["thomhos",1],["mherodev",1],["lucleray",1],["hozefaj",1],["j0lv3r4",1],["dav-is",1],["lfades",1],["tanmaylaud",1]]},{"name":"with-global-stylesheet","title":"Global Stylesheet Example","description":"\nThis example has been deprecated. Please use [examples/with-next-css](../with-next-css) instead.\n","contributors":[["orlin",3],["timneutkens",3],["jthegedus",2],["HaNdTriX",2],["davibe",1],["fabienheureux",1],["LarryLuTW",1],["paulmolluzzo",1],["coox",1],["fouad",1],["timhuff",1],["yuzhva",1],["yhirano55",1],["mherodev",1],["tanmaylaud",1]]},{"name":"with-global-stylesheet-simple","title":"Global Stylesheet simple example","description":"\nThis example has been deprecated. Please use [examples/with-next-css](../with-next-css) instead.\n","contributors":[["chibicode",1],["timneutkens",1],["jthegedus",1],["yhirano55",1],["mherodev",1],["HaNdTriX",1],["tanmaylaud",1]]},{"name":"with-goober","title":"Example with goober","description":"\nThis is an example of how [🥜 goober](https://github.com/cristianbote/goober) can be used with `Next.js` to fully render a SSR website or app. [🥜 goober](https://github.com/cristianbote/goober) proposal is: \"a less than 1KB css-in-js alternative with a familiar API\" and offering the same functionality one would need.\n\nIf you are running into any issues with this example, feel free to open-up an issue at https://github.com/cristianbote/goober/issues.\n\nWhy is there a peanut emoji?\n\nGoober initially started with a slogan as \"a less than 1KB css-in-js library at the cost of _peanuts_\". Goober also means a kind of peanut so, it fits!\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-goober&project-name=with-goober&repository-name=with-goober)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-goober with-goober-app\n# or\nyarn create next-app --example with-goober with-goober-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["cristianbote",1],["tanmaylaud",1],["agstover",1],["NorbertLuszkiewicz",1],["neighborhood999",1],["merceyz",1],["lucleray",1],["lfades",1]]},{"name":"with-google-analytics","title":"Example app with analytics","description":"\nThis example shows how to use [Next.js](https://github.com/vercel/next.js) along with [Google Analytics](https://developers.google.com/analytics/devguides/collection/gtagjs/). A custom [\\_document](https://nextjs.org/docs/advanced-features/custom-document) is used to inject [tracking snippet](https://developers.google.com/analytics/devguides/collection/gtagjs/) and track [pageviews](https://developers.google.com/analytics/devguides/collection/gtagjs/pages) and [event](https://developers.google.com/analytics/devguides/collection/gtagjs/events).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-google-analytics&project-name=with-google-analytics&repository-name=with-google-analytics)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example::\n\n```bash\nnpx create-next-app --example with-google-analytics with-google-analytics-app\n# or\nyarn create next-app --example with-google-analytics with-google-analytics-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["chibicode",4],["lfades",3],["timneutkens",2],["prichodko",1],["mherodev",1],["DullReferenceException",1],["HaNdTriX",1],["j0lv3r4",1],["Macil",1],["dav-is",1],["shanekunz",1],["micahalcorn",1],["cjimmy",1],["todortotev",1],["ijjk",1],["sshyam-gupta",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["neighborhood999",1],["lucleray",1],["Segolene-Alquier",1]]},{"name":"with-google-analytics-amp","title":"Example app with google analytics & amp","description":"\nThis example shows how to use [Next.js](https://github.com/vercel/next.js) along with [Google Analytics](https://developers.google.com/analytics/devguides/collection/gtagjs/) in conjunction with [AMP](https://nextjs.org/docs/advanced-features/amp-support/introduction). A custom [\\_document](https://nextjs.org/docs/advanced-features/custom-document) is used to inject [tracking snippet](https://developers.google.com/analytics/devguides/collection/gtagjs/) and track [pageviews](https://developers.google.com/analytics/devguides/collection/gtagjs/pages) and [event](https://developers.google.com/analytics/devguides/collection/gtagjs/events). There are two separate initializations of the Google Analytics tracking code; one for AMP and one for non-AMP pages.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-google-analytics-amp&project-name=with-google-analytics-amp&repository-name=with-google-analytics-amp)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example::\n\n```bash\nnpx create-next-app --example with-google-analytics-amp with-google-analytics-amp-app\n# or\nyarn create next-app --example with-google-analytics-amp with-google-analytics-amp-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["chibicode",3],["jamesmosier",1],["timneutkens",1],["todortotev",1],["ijjk",1],["sshyam-gupta",1],["stefanprobst",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["neighborhood999",1],["philihp",1],["lucleray",1],["lfades",1]]},{"name":"with-google-tag-manager","title":"#Example app using Google Tag Manager","description":"\nThis example shows how to use Next.js along with Google Tag Manager. [`pages/_document.js`](pages/_document.js) is used to inject [base code](https://developers.google.com/tag-manager/quickstart). [`pages/_app.js`](pages/_app.js) is used to track route changes and send page views to Google Tag Manager.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-google-tag-manager&project-name=with-google-tag-manager&repository-name=with-google-tag-manager)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-google-tag-manager with-google-tag-manager-app\n# or\nyarn create next-app --example with-google-tag-manager with-google-tag-manager-app\n```\n\nNext, copy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nSet the `NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID` variable in `.env.local` to match your Google Tag Manager ID.\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["niko20",1],["bar7b",1],["lucleray",1],["lfades",1],["balazsorban44",1]]},{"name":"with-graphql-faunadb","title":"FaunaDB Graphql Starter Example -- The FaunaDB Guestbook","description":"\nThis simple Guestbook SPA example shows you how to use [FaunaDB's GraphQL endpoint](https://docs.fauna.com/fauna/current/api/graphql/) in your Next.js project.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-graphql-faunadb&project-name=my-nextjs-guestbook&repository-name=my-nextjs-guestbook&env=NEXT_PUBLIC_FAUNADB_SECRET,NEXT_PUBLIC_FAUNADB_GRAPHQL_ENDPOINT&envDescription=Client%20secret%20and%20GraphQL%20endpoint%20needed%20for%20communicating%20with%20the%20live%20Fauna%20database&demo-title=Next.js%20Fauna%20Guestbook%20App&demo-description=A%20simple%20guestbook%20application%20built%20with%20Next.js%20and%20Fauna&demo-url=https%3A%2F%2Fnextjs-guestbook.vercel.app%2F)\n\n## Why FaunaDB\n\nBy importing a `.gql` or `.graphql` schema into FaunaDB ([see our sample schema file](./schema.gql)), FaunaDB will generate required Indexes and GraphQL resolvers for you -- hands free 👐 ([some limitations exist](https://docs.fauna.com/fauna/current/api/graphql/#limitations)).\n\n## How to use\n\nYou can start with this template [using `create-next-app`](#using-create-next-app) or by [downloading the repository manually](#download-manually).\n\nTo use a live FaunaDB database, create a database at [dashboard.fauna.com](https://dashboard.fauna.com/) and generate an admin token by going to the **Security** tab on the left and then click **New Key**. Give the new key a name and select the 'Admin' Role. Copy the token since the setup script will ask for it. Do not use it in the frontend, it has superpowers which you don't want to give to your users.\n\nThe database can then be set up with the delivered setup by running:\n\n```\nnpm run setup\n# or\nyarn setup\n```\n\nThis script will ask for the admin token. Once you provide it with a valid token, this is what the script automatically does for you:\n\n- **Import the GraphQL schema**, by importing a GraphQL schema in FaunaDB, FaunaDB automatically sets up collections and indexes to support your queries. This is now done for you with this script but can also be done from the [dashboard.fauna.com](https://dashboard.fauna.com/) UI by going to the GraphQL tab\n- **Create a role suitable for the Client**, FaunaDB has a security system that allows you to define which resources can be accessed for a specific token. That's how we limit our clients powers, feel free to look at the scripts/setup.js script to see how we make roles and tokens.\n- **Create a token for that role** which is printed, this is the token to be used in the frontend.\n\nAt the end, a `.env.local` [file](https://nextjs.org/docs/basic-features/environment-variables) will be created for you with the newly generated client token assigned to an environment variable.\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```\nnpx create-next-app --example with-graphql-faunadb with-graphql-faunadb-app\n# or\nyarn create next-app --example with-graphql-faunadb with-graphql-faunadb-app\n```\n\n### Run locally\n\nInstall packages, then run the development server:\n\n```bash\nnpm install\nnpm run dev\n# or\nyarn\nyarn dev\n```\n\nYour app should be up and running on [http://localhost:3000](http://localhost:3000)!\n\n### Deploy\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-graphql-faunadb&project-name=my-nextjs-guestbook&repository-name=my-nextjs-guestbook&env=NEXT_PUBLIC_FAUNADB_SECRET,NEXT_PUBLIC_FAUNADB_GRAPHQL_ENDPOINT&envDescription=Client%20secret%20and%20GraphQL%20endpoint%20needed%20for%20communicating%20with%20the%20live%20Fauna%20database&demo-title=Next.js%20Fauna%20Guestbook%20App&demo-description=A%20simple%20guestbook%20application%20built%20with%20Next.js%20and%20Fauna&demo-url=https%3A%2F%2Fnextjs-guestbook.vercel.app%2F)\n","contributors":[["Timer",6],["lfades",5],["chibicode",3],["fauna-brecht",2],["apollonian",1],["lgordey",1],["timneutkens",1],["ijjk",1],["tanmaylaud",1],["rdimaio",1],["NorbertLuszkiewicz",1],["coetry",1],["c316",1],["lucleray",1],["caaatisgood",1],["leerob",1]]},{"name":"with-graphql-hooks","title":"GraphQL Hooks Example","description":"\n[GraphQL Hooks](https://github.com/nearform/graphql-hooks) is a library from NearForm that intends to be a minimal hooks-first GraphQL client. Providing a similar API to Apollo.\n\nYou'll see this shares the same [graph.cool](https://www.graph.cool) backend as the Apollo example, this is so you can compare the two side by side. The app itself should also look identical.\n\nThis started life as a copy of the `with-apollo` example. We then stripped out Apollo and replaced it with `graphql-hooks`. This was mostly as an exercise in ensuring basic functionality could be achieved in a similar way to Apollo. The [bundle size](https://bundlephobia.com/result?p=graphql-hooks@3.2.1) of `graphql-hooks` is tiny in comparison to Apollo and should cover a fair amount of use cases.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-graphql-hooks&project-name=with-graphql-hooks&repository-name=with-graphql-hooks)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-graphql-hooks with-graphql-hooks-app\n# or\nyarn create next-app --example with-graphql-hooks with-graphql-hooks-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",11],["lfades",4],["chibicode",3],["timneutkens",2],["Joezo",1],["alexparish",1],["dav-is",1],["HaNdTriX",1],["supaspoida",1],["willianjusten",1],["todortotev",1],["ijjk",1],["danwilliams",1],["tywmick",1],["youhosi",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["ludofischer",1]]},{"name":"with-graphql-react","title":"Next.js example with [`graphql-react`](https://github.com/jaydenseric/graphql-react)","description":"\n[`graphql-react`](https://github.com/jaydenseric/graphql-react) is a [GraphQL](https://graphql.org) client for [React](https://reactjs.org) using modern [context](https://reactjs.org/docs/context) and [hooks](https://reactjs.org/docs/hooks-intro) APIs that is lightweight (&lt; 3 KB [size limited](https://github.com/ai/size-limit)) but powerful; the first [Relay](https://facebook.github.io/relay) and [Apollo](https://apollographql.com/docs/react) alternative with server side rendering.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-graphql-react&project-name=with-graphql-react&repository-name=with-graphql-react)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-graphql-react with-graphql-react-app\n# or\nyarn create next-app --example with-graphql-react with-graphql-react-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Notes\n\n- In `pages/_app.js` a [custom `App` component](https://github.com/vercel/next.js#custom-app) is decorated with the [`withGraphQLApp`](https://github.com/jaydenseric/next-graphql-react/#function-withgraphqlapp) [higher-order component](https://reactjs.org/docs/higher-order-components) from [`next-graphql-react`](https://github.com/jaydenseric/next-graphql-react), generating a `graphql` prop that populates the [`GraphQLProvider`](https://github.com/jaydenseric/graphql-react#function-graphqlprovider) component from [`graphql-react`](https://github.com/jaydenseric/graphql-react).\n- In `pages/index.js` the [`useGraphQL`](https://github.com/jaydenseric/graphql-react#function-usegraphql) React hook from [`graphql-react`](https://github.com/jaydenseric/graphql-react) is used to query the [GraphQL Pokémon API](https://github.com/lucasbento/graphql-pokemon) and show a picture of Pikachu.\n","contributors":[["Timer",7],["jaydenseric",4],["chibicode",3],["timneutkens",2],["lfades",2],["laiso",1],["crutchcorn",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1],["leerob",1]]},{"name":"with-grommet","title":"Example app with Grommet","description":"\nThis example shows how to use the [Grommet UI library](https://grommet.io/) with Next.js.\n\nIt works by extending the `<Document />` to enable server-side rendering of `styled-components`, which are used by Grommet, and extending `<App />` to provide a Grommet context (and optionally a theme) for all child pages and components.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-grommet&project-name=with-grommet&repository-name=with-grommet)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-grommet with-grommet-app\n# or\nyarn create next-app --example with-grommet with-grommet-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n### Try it on CodeSandbox\n\n[Open this example on CodeSandbox](https://codesandbox.io/s/github/vercel/next.js/tree/canary/examples/with-grommet)\n","contributors":[["Timer",6],["chibicode",3],["lfades",3],["timneutkens",2],["rogerhutchings",1],["crutchcorn",1],["dav-is",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-gsap","title":"Example app with GSAP","description":"\nThis example features how to use [GSAP](https://greensock.com/gsap/) as the animation library within a Next.js app.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-gsap&project-name=with-gsap&repository-name=with-gsap)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-gsap with-gsap-app\n# or\nyarn create next-app --example with-gsap with-gsap-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["galanggg",1],["lucleray",1],["lfades",1],["leerob",1]]},{"name":"with-hls-js","title":"HLS.js example","description":"\nThis example shows how to use Next.js along with [HLS.js](https://github.com/video-dev/hls.js/) to playback HLS videos in all modern browsers.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-hls-js&project-name=with-hls-js&repository-name=with-hls-js)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-hls-js with-hls-js-app\n# or\nyarn create next-app --example with-hls-js with-hls-js-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",3],["dylanjha",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["lfades",1]]},{"name":"with-http2","title":"HTTP2 server example","description":"\nThis example shows the most basic example using an HTTP2 server. We have 2 pages: `pages/index.js` and `pages/about.js`. The former responds to `/` requests and the latter to `/about`. Using `next/link` you can add hyperlinks between them with universal routing capabilities.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-http2 with-http2-app\n# or\nyarn create next-app --example with-http2 with-http2-app\n```\n\nCreate the public and private keys:\n\n```bash\nopenssl req -x509 -newkey rsa:2048 -nodes -sha256 -subj '/CN=localhost' \\\n  -keyout localhost-privkey.pem -out localhost-cert.pem\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",8],["chibicode",3],["lfades",2],["shahzeb1",1],["dav-is",1],["oguzzkilic",1],["areai51",1],["timneutkens",1],["ijjk",1],["jamesmosier",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["awareness481",1],["mohsen1",1],["lucleray",1]]},{"name":"with-i18n-next-intl","title":"next-intl example","description":"\nThis example uses [next-intl](https://github.com/amannn/next-intl), a minimal, but complete solution for managing internationalization in Next.js apps.\n\n## Features\n\n- 🌟 I18n is an essential part of the user experience, therefore this library doesn't compromise on flexibility and never leaves you behind when you need to fine tune a translation. Messages use the proven [ICU syntax](https://formatjs.io/docs/core-concepts/icu-syntax) which covers interpolation, numbers, dates, times, plurals, ordinal pluralization, label selection based on enums and rich text.\n- ⚔️ Based on battle-tested building blocks from [Format.JS](https://formatjs.io/) (used by `react-intl`), this library is a thin wrapper around high-quality, lower-level APIs for i18n.\n- 💯 Built-in number and date formatting that is integrated with translations, e.g. allowing for the usage of global formats for a consistent look & feel of your app.\n- 💡 A hooks-only API ensures that you can use the same API for `children` as well as for attributes which expect strings.\n- 🚀 Integrates with both static as well as server side rendering.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/import/project?template=https://github.com/vercel/next.js/tree/canary/examples/with-i18n-next-intl)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-i18n-next-intl\n# or\nyarn create next-app --example with-i18n-next-intl\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/import?filter=next.js&utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["amannn",1]]},{"name":"with-i18n-rosetta","title":"rosetta example","description":"\nThis example uses [rosetta](https://github.com/lukeed/rosetta), react hooks and context to provide a SSR, SSG, CSR compatible i18n solution.\n\nIn `next.config.js` you can configure the fallback language.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-i18n-rosetta&project-name=with-i18n-rosetta&repository-name=with-i18n-rosetta)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-i18n-rosetta with-i18n-rosetta-app\n# or\nyarn create next-app --example with-i18n-rosetta with-i18n-rosetta-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["StarpTech",2],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["seosmmbusiness",1],["merceyz",1],["lucleray",1],["lfades",1],["caaatisgood",1],["Parnswir",1]]},{"name":"with-ionic-typescript","title":"Ionic with TypeScript Example","description":"\nExample app using Next.js with [Ionic](https://ionicframework.com/) and [TypeScript](https://www.typescriptlang.org/). You can learn more about Ionic in the [documentation](https://ionicframework.com/docs).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-ionic-typescript&project-name=with-ionic-typescript&repository-name=with-ionic-typescript)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) or [npx](https://github.com/zkat/npx#readme) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-ionic-typescript with-ionic-typescript-app\n# or\nyarn create next-app --example with-ionic-typescript with-ionic-typescript-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["hideokamoto",1],["lucleray",1],["lfades",1]]},{"name":"with-iron-session","title":"Example application using [`next-iron-session`](https://github.com/vvo/next-iron-session)","description":"\nThis example creates an authentication system that uses a **signed and encrypted cookie to store session data**. It relies on [`next-iron-session`](https://github.com/vvo/next-iron-session).\n\nIt uses current best practices for authentication in the Next.js ecosystem.\n\n**Features:**\n\n- [Static Generation](https://nextjs.org/docs/basic-features/pages#static-generation-recommended) (SG), recommended example\n- [Server-side Rendering](https://nextjs.org/docs/basic-features/pages#server-side-rendering) (SSR) example in case you need it\n- Logged in status synchronized between browser windows/tabs using **`useUser`** hook and [`swr`](https://swr.vercel.app/) module\n- Layout based on the user's logged-in/out status\n- Session data is signed and encrypted in a cookie\n\n[`next-iron-session`](https://github.com/vvo/next-iron-session) also supports:\n\n- Express / Connect middlewares\n- Multiple encryption keys (password) to allow for seamless updates or just password rotation\n\n---\n\n<p align=\"center\"><b>Online demo at <a href=\"https://next-iron-session.vercel.app/\">https://next-iron-session.vercel.app/</a> 👀</b></p>\n\n---\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-iron-session&project-name=with-iron-session&repository-name=with-iron-session)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-iron-session with-iron-session-app\n# or\nyarn create next-app --example with-iron-session with-iron-session-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["vvo",5],["Timer",4],["awareness481",2],["lfades",2],["stigkj",1],["justincy",1],["timneutkens",1],["Oxicode",1],["chibicode",1],["ijjk",1],["timothyis",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["mjr",1],["lucleray",1],["maxnowack",1],["leerob",1]]},{"name":"with-jest","title":"Next.js + Jest","description":"\nThis example shows how to configure Jest to work with Next.js.\n\nThis includes Next.js' built-in support for Global CSS, CSS Modules, and TypeScript!\n\n## How to Use\n\nQuickly get started using [Create Next App](https://github.com/vercel/next.js/tree/canary/packages/create-next-app#readme)!\n\nIn your terminal, run the following command:\n\n```bash\nnpx create-next-app --example with-jest with-jest-app\n# or\nyarn create next-app --example with-jest with-jest-app\n```\n\n## Run Jest Tests\n\n```bash\nnpm test\n```\n","contributors":[["timneutkens",6],["brikou",4],["Timer",4],["impronunciable",3],["arunoda",3],["lucleray",3],["nkzawa",2],["jthegedus",2],["HaNdTriX",2],["chibicode",2],["pksjce",1],["tryggvigy",1],["rauchg",1],["sedubois",1],["sakulstra",1],["paulmolluzzo",1],["trevordmiller",1],["kentcdodds",1],["MFCo",1],["fouad",1],["tusbar",1],["mherodev",1],["5t111111",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["lfades",1],["aganglada",1],["rokinsky",1],["todortotev",1],["tanmaylaud",1],["caaatisgood",1]]},{"name":"with-kea","title":"kea example","description":"\nThis example uses [kea](https://github.com/keajs/kea).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-kea&project-name=with-kea&repository-name=with-kea)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-kea with-kea-app\n# or\nyarn create next-app --example with-kea with-kea-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",6],["Timer",6],["lfades",4],["chibicode",3],["jthegedus",2],["yuyaohshimo",1],["fouad",1],["mherodev",1],["HaNdTriX",1],["j0lv3r4",1],["dav-is",1],["aga5tya",1],["AnsonT",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-knex","title":"#Example app using Knex","description":"\n[Knex](https://knexjs.org/) is a SQL query builder that works with a variety of SQL databases including Postgres and MySQL. This example shows you how to use Knex with Next.js to connect and query a Postgres database. The same code can also connect to all other databases supported by Knex.\n\n## Deploy your own\n\nOnce you have access to the environment variables you'll need, deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-knex&project-name=with-knex&repository-name=with-knex&env=PG_URI&envDescription=Required%20to%20connect%20the%20app%20with%20Postgres)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-knex with-knex-app\n# or\nyarn create next-app --example with-knex with-knex-app\n```\n\n## Configuration\n\n### Install dependencies\n\n```bash\nnpm install\n# or\nyarn\n```\n\n### Set up a Postgres database\n\nSet up a Postgres database locally or use a DBaaS provider such as AWS or Digital Ocean\n\n### Configure environment variables\n\nCopy the `.env.local.example` file in this directory to `.env.local` (this will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nSet the `PG_URI` variable in `.env.local` to the connection uri of your postgres database.\n\n### Apply migrations\n\nYou can create, apply and rollback migrations using the scripts in `package.json`. For now we will run the example migrations in the `knex/migrations` folder, which will add some Todos to the database.\n\n```bash\nnpm run migrate:latest\n# or\nyarn migrate:latest\n```\n\n### Start Next.js in development mode\n\n```bash\nnpm run dev\n# or\nyarn dev\n```\n\nYour app should now be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\nYou should now see a list of Todos that were fetched from the database via the API Route defined in `/pages/api/todos.js`.\n\n## Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-knex&project-name=with-knex&repository-name=with-knex&env=PG_URI&envDescription=Required%20to%20connect%20the%20app%20with%20Knex)\n","contributors":[["lucleray",2],["ashconnell",1],["xom9ikk",1],["caaatisgood",1]]},{"name":"with-linaria","title":"Example app with [linaria](https://linaria.dev/)","description":"\nThis example features how to use [linaria](https://linaria.dev/) as the styling solution instead of [styled-jsx](https://github.com/vercel/styled-jsx).\n\nWe are creating three `div` elements with custom styles being shared across the elements. The styles includes the use of pseudo-selector and CSS animations.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-linaria&project-name=with-linaria&repository-name=with-linaria)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-linaria with-linaria-app\n# or\nyarn create next-app --example with-linaria with-linaria-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",7],["chibicode",3],["lfades",3],["shashkovdanil",2],["crutchcorn",1],["dav-is",1],["timneutkens",1],["ijjk",1],["marbiano",1],["jamesmosier",1],["awareness481",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["petecorreia",1],["turadg",1]]},{"name":"with-lingui","title":"With Lingui example","description":"\nThis example shows a way to use [lingui.js](https://lingui.js.org) with next.js.\n\nIt adds a webpack loader for the messages to avoid having to manually compile while developing as well as adds the compile step to the `next build` script for production builds.\n\nThe example also uses a Higher order Component which can be added to all pages which will be translated and that checks for a `?lang` query string switch the language. Next.js will dynamically load in the messages for the locale when navigating using a Next.js `<Link />` component.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-lingui&project-name=with-lingui&repository-name=with-lingui)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-lingui with-lingui-app\n# or\nyarn create next-app --example with-lingui with-lingui-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n### How to add more translated strings\n\nTo add new strings use the [react component](https://lingui.js.org/tutorials/react-patterns.html#common-i18n-patterns-in-react) `<Trans />` and then run `yarn export` to export the messages into `locale/{language}/messages.po`.\n\n### How to add another language\n\nTo add another language simply run `yarn add-locale <locale ...>` and it will create a new locale in the `locale/messages/` directory.\n","contributors":[["Timer",8],["chibicode",3],["lfades",3],["timneutkens",2],["slaskis",1],["crutchcorn",1],["dav-is",1],["mcsdevv",1],["mcwebb",1],["raphaelchaula",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-loading","title":"Example app with page loading indicator","description":"\nSometimes when switching between pages, Next.js needs to download pages(chunks) from the server before rendering the page. And it may also need to wait for the data. So while doing these tasks, the browser might be non responsive.\n\nWe can simply fix this issue by showing a loading indicator. That's what this examples shows.\n\nIt features:\n\n- An app with two pages which uses a common [Header](./components/Header.js) component for navigation links.\n- Using `next/router` to identify different router events\n- Uses [nprogress](https://github.com/rstacruz/nprogress) as the loading indicator.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-loading&project-name=with-loading&repository-name=with-loading)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-loading with-loading-app\n# or\nyarn create next-app --example with-loading with-loading-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",7],["timneutkens",6],["chibicode",3],["lfades",3],["arunoda",2],["jthegedus",2],["HaNdTriX",2],["sedubois",1],["sakulstra",1],["paulmolluzzo",1],["fouad",1],["mherodev",1],["Tomekmularczyk",1],["DullReferenceException",1],["j0lv3r4",1],["dav-is",1],["John-Spraul",1],["mcsdevv",1],["ismamz",1],["JazibJafri",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-magic","title":"Magic Example","description":"\nThis example shows how to use [Magic](https://magic.link) with Next.js. The example features cookie-based, passwordless authentication with email-based magic links.\n\nThe example shows how to do a login and logout; and to get the user info using a hook with [SWR](https://swr.vercel.app).\n\nA DB is not included. But you can add any DB you like!.\n\nThe login cookie is `httpOnly`, meaning it can only be accessed by the API, and it's encrypted using [@hapi/iron](https://hapi.dev/family/iron) for more security.\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#configuration), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-magic&project-name=with-magic&repository-name=with-magic&env=NEXT_PUBLIC_MAGIC_PUBLISHABLE_KEY,MAGIC_SECRET_KEY,TOKEN_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20Magic&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-magic%23configuration)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-magic with-magic-app\n# or\nyarn create next-app --example with-magic with-magic-app\n```\n\n## Configuration\n\nLogin to the [Magic Dashboard](https://dashboard.magic.link/) and get the keys of your application\n\n![Magic Dashboard](https://gblobscdn.gitbook.com/assets%2F-M1XNjqusnKyXZc7t7qQ%2F-M3HsSftOAghkNs-ttU3%2F-M3HsllfdwdDmeFXBK3U%2Fdashboard-pk.png?alt=media&token=4d6e7543-ae20-4355-951c-c6421b8f1b5f)\n\nNext, copy the `.env.local.example` file in this directory to .env.local (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local`:\n\n- `NEXT_PUBLIC_MAGIC_PUBLISHABLE_KEY` should look like `pk_test_abc` or `pk_live_ABC`\n- `MAGIC_SECRET_KEY` should look like `sk_test_ABC` or `sk_live_ABC`\n- `TOKEN_SECRET` should be a string with at least 32 characters\n\nNow, run Next.js in development mode\n\n```bash\nnpm run dev\n# or\nyarn dev\n```\n\nYour app should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n## Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-magic&project-name=with-magic&repository-name=with-magic&env=NEXT_PUBLIC_MAGIC_PUBLISHABLE_KEY,MAGIC_SECRET_KEY,TOKEN_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20Magic&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-magic%23configuration)\n","contributors":[["Timer",4],["lfades",2],["seanli",1],["akhila-ariyachandra",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["cascandaliato",1],["PaulPCIO",1],["gr-qft",1],["lucleray",1],["leerob",1],["ijjk",1]]},{"name":"with-markdown","title":"You can find how to use Markdown in Next.js at https://github.com/vercel/next.js/tree/canary/examples/blog-starter","description":"","contributors":[["timneutkens",4],["chibicode",3],["Timer",3],["jthegedus",2],["lfades",2],["teleginzhenya",1],["mherodev",1],["Tomekmularczyk",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["tanmaylaud",1]]},{"name":"with-material-ui","title":"material-ui example","description":"\nThis example have been moved here: [mui-org/material-ui](https://github.com/mui-org/material-ui/blob/master/examples/nextjs)\n","contributors":[["jthegedus",2],["timneutkens",2],["palafoxernesto",1],["paulmolluzzo",1],["cncolder",1],["Rowno",1],["oliviertassinari",1],["HaNdTriX",1],["fouad",1],["JeromeFitz",1],["mherodev",1],["rouzbeh84",1],["Timer",1],["lfades",1],["prabusah",1],["tanmaylaud",1]]},{"name":"with-mdbreact","title":"mdbreact Example","description":"\nThis example shows how to use [MDBReact](https://mdbootstrap.com/docs/react) with Next.js.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-mdbreact&project-name=with-mdbreact&repository-name=with-mdbreact)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-mdbreact with-mdbreact-app\n# or\nyarn create next-app --example with-mdbreact with-mdbreact-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["enochndika",1],["lucleray",1],["lfades",1]]},{"name":"with-mdx","title":"Example app with MDX","description":"\nThis example shows using [MDX](https://github.com/mdx-js/mdx) as top level pages for your next.js app.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-mdx&project-name=with-mdx&repository-name=with-mdx)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-mdx with-mdx-app\n# or\nyarn create next-app --example with-mdx with-mdx-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["chibicode",3],["lfades",3],["timneutkens",2],["merceyz",2],["jesstelford",1],["j0lv3r4",1],["dav-is",1],["lachlanjc",1],["bitjson",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-mdx-remote","title":"MDX Remote Example","description":"\nThis example shows how a simple blog might be built using the [next-mdx-remote](https://github.com/hashicorp/next-mdx-remote) library, which allows mdx content to be loaded via `getStaticProps` or `getServerSideProps`. The mdx content is loaded from a local folder, but it could be loaded from a database or anywhere else.\n\nThe example also showcases [next-remote-watch](https://github.com/hashicorp/next-remote-watch), a library that allows next.js to watch files outside the `pages` folder that are not explicitly imported, which enables the mdx content here to trigger a live reload on change.\n\nSince `next-remote-watch` uses undocumented Next.js APIs, it doesn't replace the default `dev` script for this example. To use it, run `npm run dev:watch` or `yarn dev:watch`.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-mdx-remote&project-name=with-mdx-remote&repository-name=with-mdx-remote)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-mdx-remote with-mdx-remote-app\n# or\nyarn create next-app --example with-mdx-remote with-mdx-remote-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Notes\n\n### Conditional custom components\n\nWhen using `next-mdx-remote`, you can pass custom components to the MDX renderer. However, some pages/MDX files might use components that are used infrequently, or only on a single page. To avoid loading those components on every MDX page, you can use `next/dynamic` to conditionally load them.\n\nFor example, here's how you can change `getStaticProps` to conditionally add certain components:\n\n```js\nimport dynamic from 'next/dynamic'\n\n// ...\n\nexport async function getStaticProps() {\n  const { content, data } = matter(source)\n\n  const components = {\n    ...defaultComponents,\n    SomeHeavyComponent: /<SomeHeavyComponent/.test(content)\n      ? dynamic(() => import('SomeHeavyComponent'))\n      : null,\n  }\n\n  const mdxSource = await renderToString(content, { components })\n}\n```\n\nIf you do this, you'll also need to check in the page render function which components need to be dynamically loaded. You can pass a list of component names via `getStaticProps` to accomplish this.\n","contributors":[["daneden",1],["lucleray",1],["lfades",1]]},{"name":"with-mobx","title":"MobX example","description":"\nUsually splitting your app state into `pages` feels natural but sometimes you'll want to have global state for your app. This is an example on how you can use mobx that also works with our universal rendering approach.\n\nIn this example we are going to display a digital clock that updates every second. The first render is happening in the server and then the browser will take over. To illustrate this, the server rendered clock will have a different background color than the client one.\n\nTo illustrate SSG and SSR, go to `/ssg` and `/ssr`, those pages are using Next.js data fetching methods to get the date in the server and return it as props to the page, and then the browser will hydrate the store and continue updating the date.\n\nThe trick here for supporting universal mobx is to separate the cases for the client and the server. When we are on the server we want to create a new store every time, otherwise different users data will be mixed up. If we are in the client we want to use always the same store. That's what we accomplish on `store.js`.\n\nThe clock, under `components/Clock.js`, has access to the state using the `inject` and `observer` functions from `mobx-react`. In this case Clock is a direct child from the page but it could be deep down the render tree.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-mobx&project-name=with-mobx&repository-name=with-mobx)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-mobx with-mobx-app\n# or\nyarn create next-app --example with-mobx with-mobx-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",8],["Timer",7],["lfades",4],["chibicode",3],["brikou",2],["jthegedus",2],["maranomynet",2],["dav-is",2],["Rokt33r",2],["fdidron",1],["sedubois",1],["impronunciable",1],["sakulstra",1],["aranajhonny",1],["ptomasroos",1],["paulmolluzzo",1],["HaNdTriX",1],["4nduril",1],["fouad",1],["vuldin",1],["yhirano55",1],["mherodev",1],["AwesomeObserver",1],["mertcan",1],["lucifer1004",1],["j0lv3r4",1],["felixmosh",1],["crutchcorn",1],["mcsdevv",1],["Dashue",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["davidgolden",1],["ivandotv",1],["lucleray",1]]},{"name":"with-mobx-react-lite","title":"MobX V6 with Mobx React Lite","description":"\nUsually splitting your app state into `pages` feels natural but sometimes you'll want to have global state for your app. This is an example on how you can use mobx that also works with our universal rendering approach.\n\nIn this example we are going to display a digital clock that updates every second. The first render is happening in the server and then the browser will take over. To illustrate this, the server rendered clock will have a different background color than the client one.\n\nTo illustrate SSG and SSR, go to `/ssg` and `/ssr`, those pages are using Next.js data fetching methods to get the date in the server and return it as props to the page, and then the browser will hydrate the store and continue updating the date.\n\nThe trick here for supporting universal mobx is to separate the cases for the client and the server. When we are on the server we want to create a new store every time, otherwise different users data will be mixed up. If we are in the client we want to use always the same store. That's what we accomplish on `store.js`.\n\nPage.js component is using the clock store to start and stop the store clock.\n\nClock.js component is using the clock store to read the time.\n\nStoreProvider.js component is used to instantiate the `Store` both on the server and on the client.\n\nBoth components are using a custom hook `useStore` to pull in the `Store` from the provider.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-mobx-react-lite&project-name=with-mobx-react-lite&repository-name=with-mobx-react-lite)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-mobx-react-lite with-mobx-react-lite-app\n# or\nyarn create next-app --example with-mobx-react-lite with-mobx-react-lite-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["lfades",4],["chibicode",3],["timneutkens",3],["ijjk",2],["ivandotv",2],["programbo",1],["crutchcorn",1],["dav-is",1],["mcsdevv",1],["tanmaylaud",1],["Necmttn",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1],["Pomaio",1]]},{"name":"with-mobx-state-tree","title":"MobX State Tree example","description":"\nUsually splitting your app state into `pages` feels natural but sometimes you'll want to have global state for your app. This is an example on how you can use mobx that also works with our universal rendering approach.\n\nIn this example we are going to display a digital clock that updates every second. The first render is happening in the server and the date will be `00:00:00`, then the browser will take over and it will start updating the date.\n\nTo illustrate SSG and SSR, go to `/ssg` and `/ssr`, those pages are using Next.js data fetching methods to get the date in the server and return it as props to the page, and then the browser will hydrate the store and continue updating the date.\n\nThe trick here for supporting universal mobx is to separate the cases for the client and the server. When we are on the server we want to create a new store every time, otherwise different users data will be mixed up. If we are in the client we want to use always the same store. That's what we accomplish on `store.js`\n\nThe clock, under `components/Clock.js`, has access to the state using the `inject` and `observer` functions from `mobx-react`. In this case Clock is a direct child from the page but it could be deep down the render tree.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-mobx-state-tree&project-name=with-mobx-state-tree&repository-name=with-mobx-state-tree)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-mobx-state-tree with-mobx-state-tree-app\n# or\nyarn create next-app --example with-mobx-state-tree with-mobx-state-tree-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["timneutkens",4],["lfades",4],["chibicode",3],["giuseppeg",1],["vuldin",1],["jthegedus",1],["mherodev",1],["HaNdTriX",1],["yoDon",1],["Meowmanize",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-mobx-state-tree-typescript","title":"MobX State Tree with Typescript example","description":"\nUsually splitting your app state into `pages` feels natural but sometimes you'll want to have global state for your app. This is an example on how you can use mobx that also works with our universal rendering approach.\n\nIn this example we are going to display a digital clock that updates every second. The first render is happening in the server and the date will be `00:00:00`, then the browser will take over and it will start updating the date.\n\nTo illustrate SSG and SSR, go to `/ssg` and `/ssr`, those pages are using Next.js data fetching methods to get the date in the server and return it as props to the page, and then the browser will hydrate the store and continue updating the date.\n\nThe trick here for supporting universal mobx is to separate the cases for the client and the server. When we are on the server we want to create a new store every time, otherwise different users data will be mixed up. If we are in the client we want to use always the same store. That's what we accomplish on `store.js`\n\nThe clock, under `components/Clock.js`, has access to the state using the `inject` and `observer` functions from `mobx-react`. In this case Clock is a direct child from the page but it could be deep down the render tree.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-mobx-state-tree-typescript&project-name=with-mobx-state-tree-typescript&repository-name=with-mobx-state-tree-typescript)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-mobx-state-tree-typescript with-mobx-state-tree-typescript-app\n# or\nyarn create next-app --example with-mobx-state-tree-typescript with-mobx-state-tree-typescript-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["lfades",5],["chibicode",3],["timneutkens",3],["yoDon",2],["IanMitchell",1],["HaNdTriX",1],["j0lv3r4",1],["crutchcorn",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["kevinsproles",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-mocha","title":"Example app with Mocha tests","description":"\nThis example features an app with Mocha tests.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-mocha with-mocha-app\n# or\nyarn create next-app --example with-mocha with-mocha-app\n```\n\n## Run Mocha tests\n\n```bash\nnpm run test\n# or\nyarn test\n```\n\n> A very important part of this example is the `.babelrc` file which configures the `test` environment to use `babel-preset-env` and configures it to transpile modules to `commonjs`). [Learn more](https://github.com/vercel/next.js/issues/2895).\n","contributors":[["Timer",4],["stephensauceda",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["lfades",1],["chibicode",1],["bbortt",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1]]},{"name":"with-monaco-editor","title":"Example app with Monaco Editor","description":"\nThis example adds support for [Monaco Editor](https://github.com/Microsoft/monaco-editor) integration using the\n[`react-monaco-editor`](https://github.com/react-monaco-editor/react-monaco-editor) library.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-monaco-editor&project-name=with-monaco-editor&repository-name=with-monaco-editor)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-monaco-editor with-monaco-editor-app\n# or\nyarn create next-app --example with-monaco-editor with-monaco-editor-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",4],["Ehesp",1],["todortotev",1],["danielpaz6",1],["awareness481",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["lfades",1]]},{"name":"with-mongodb","title":"#Example app using MongoDB","description":"\n[MongoDB](https://www.mongodb.com/) is a general purpose, document-based, distributed database built for modern application developers and for the cloud era. This example will show you how to connect to and use MongoDB as your backend for your Next.js app.\n\nIf you want to learn more about MongoDB, visit the following pages:\n\n- [MongoDB Atlas](https://mongodb.com/atlas)\n- [MongoDB Documentation](https://docs.mongodb.com/)\n\n## Deploy your own\n\nOnce you have access to the environment variables you'll need, deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-mongodb&project-name=with-mongodb&repository-name=with-mongodb&env=MONGODB_URI,MONGODB_DB&envDescription=Required%20to%20connect%20the%20app%20with%20MongoDB)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-mongodb with-mongodb-app\n# or\nyarn create next-app --example with-mongodb with-mongodb-app\n```\n\n## Configuration\n\n### Set up a MongoDB database\n\nSet up a MongoDB database either locally or with [MongoDB Atlas for free](https://mongodb.com/atlas).\n\n### Set up environment variables\n\nCopy the `env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nSet each variable on `.env.local`:\n\n- `MONGODB_URI` - Your MongoDB connection string. If you are using [MongoDB Atlas](https://mongodb.com/atlas) you can find this by clicking the \"Connect\" button for your cluster.\n- `MONGODB_DB` - The name of the MongoDB database you want to use.\n\n### Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour app should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\nYou will either see a message stating \"You are connected to MongoDB\" or \"You are NOT connected to MongoDB\". Ensure that you have provided the correct `MONGODB_URI` and `MONGODB_DB` environment variables.\n\nWhen you are successfully connected, you can refer to the [MongoDB Node.js Driver docs](https://mongodb.github.io/node-mongodb-native/3.4/tutorials/collections/) for further instructions on how to query your database.\n\n## Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-mongodb&project-name=with-mongodb&repository-name=with-mongodb&env=MONGODB_URI,MONGODB_DB&envDescription=Required%20to%20connect%20the%20app%20with%20MongoDB)\n","contributors":[["lucleray",2],["kukicado",1],["NorbertLuszkiewicz",1],["ashconnell",1],["LauraBeatris",1],["Zertz",1],["caaatisgood",1]]},{"name":"with-mongodb-mongoose","title":"MongoDB and Mongoose with Next.js","description":"\nThis example shows how you can use a MongoDB database to support your Next.js application.\n\n**Pet** is an application that allows users to add their pets' information (e.g., name, owner's name, diet, age, dislikes, likes, and photo). They can also delete it or edit it anytime.\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-2-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-mongodb-mongoose&project-name=with-mongodb-mongoose&repository-name=with-mongodb-mongoose&env=MONGODB_URI&envDescription=Required%20to%20connect%20the%20app%20with%20MongoDB&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-mongodb-mongoose%23step-2-set-up-environment-variables)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-mongodb-mongoose with-mongodb-mongoose-app\n# or\nyarn create next-app --example with-mongodb-mongoose with-mongodb-mongoose-app\n```\n\n## Configuration\n\n### Step 1. Get the connection string of your MongoDB server\n\nIn the case of MongoDB Atlas, it should be a string like this:\n\n```\nmongodb+srv://<username>:<password>@my-project-abc123.mongodb.net/test?retryWrites=true&w=majority\n```\n\nFor more details, follow this [MongoDB Guide](https://docs.mongodb.com/guides/server/drivers/) on how to connect to MongoDB.\n\n### Step 2. Set up environment variables\n\nCopy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local`:\n\n- `MONGODB_URI` should be the MongoDB connection string you got from step 1.\n\n### Step 3. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour app should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n## Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/import/git?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-mongodb-mongoose&project-name=with-mongodb-mongoose&repository-name=with-mongodb-mongoose&env=MONGODB_URI&envDescription=Required%20to%20connect%20the%20app%20with%20MongoDB&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-mongodb-mongoose%23step-2-set-up-environment-variables)\n","contributors":[["Timer",2],["MichelleLucero",1],["khattakdev",1],["tanmaylaud",1],["lwpamihiranga",1],["NorbertLuszkiewicz",1],["helloworld",1],["mustafaKamal-fe",1],["ciruz",1],["lucleray",1],["botv",1],["lfades",1],["vkarpov15",1]]},{"name":"with-mqtt-js","title":"MQTT Client example","description":"\nThis example shows how to use [MQTT.js](https://github.com/mqttjs/MQTT.js) with Next.js.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-mqtt-js&project-name=with-mqtt-js&repository-name=with-mqtt-js)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-mqtt-js with-mqtt-js-app\n# or\nyarn create-next-app --example with-mqtt-js with-mqtt-js-app\n```\n\nTo set up a connection URI with a mqtt client, copy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local`:\n\n- `NEXT_MQTT_URI`: The URI of the broker. For example `wss://test.mosquitto.org:8081/mqtt`\n- `NEXT_MQTT_CLIENTID`: An arbritrary string of max. 23 characters.\n- `NEXT_MQTT_USERNAME`: The username for the connection to the broker.\n- `NEXT_MQTT_PASSWORD`: The password for the connection to the broker.\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["smaktacular",1],["lucleray",1],["lfades",1],["lemarier",1]]},{"name":"with-msw","title":"Mock Service Worker Example","description":"\n[Mock Service Worker](https://github.com/mswjs/msw) is an API mocking library for browser and Node. It provides seamless mocking by interception of actual requests on the network level using Service Worker API. This makes your application unaware of any mocking being at place.\n\nIn this example we integrate Mock Service Worker with Next by following the next steps:\n\n1. Define a set of [request handlers](./mocks/handlers.js) shared between client and server.\n1. Setup a [Service Worker instance](./mocks/browser.js) that would intercept all runtime client-side requests via `setupWorker` function.\n1. Setup a [\"server\" instance](./mocks/server.js) to intercept any server/build time requests (e.g. the one happening in `getServerSideProps`) via `setupServer` function.\n\nMocking is enabled using the `NEXT_PUBLIC_API_MOCKING` environment variable. By default, mocking is enabled for both development and production. This allows you to have working preview deployments before implementing an actual API. To disable MSW for a specific environment, change the environment variable value in the file corresponding to the environment from `enabled` to `disabled`.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-msw&project-name=with-msw&repository-name=with-msw)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-msw with-msw-app\n# or\nyarn create next-app --example with-msw with-msw-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["kettanaito",2],["lucleray",1],["lfades",1]]},{"name":"with-mux-video","title":"Mux Video","description":"\nThis example uses Mux Video, an API-first platform for video. The example features video uploading and playback in a Next.js application.\n\n## Demo\n\n### [https://with-mux-video.vercel.app/](https://with-mux-video.vercel.app/)\n\n### This project was used to create [stream.new](https://stream.new/)\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com/home):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-mux-video&project-name=with-mux-video&repository-name=with-mux-video)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-mux-video with-mux-video-app\n# or\nyarn create next-app --example with-mux-video with-mux-video-app\n```\n\n## Note\n\n**Important:** When creating uploads, this demo sets `cors_origin: \"*\"` in the [`pages/api/upload.js`](pages/api/upload.js) file. For extra security, you should update this value to be something like `cors_origin: 'https://your-app.com'`, to restrict uploads to only be allowed from your application.\n\nThis example uses:\n\n- [SWR](https://swr.vercel.app/) — dynamically changing the `refreshInterval` depending on if the client should be polling for updates or not\n- [`/pages/api`](pages/api) routes — a couple endpoints for making authenticated requests to the Mux API.\n- Dynamic routes using [`getStaticPaths` and `fallback: true`](https://nextjs.org/docs/basic-features/data-fetching#getstaticpaths-static-generation), as well as dynamic API routes.\n\n## Configuration\n\n### Step 1. Create an account in Mux\n\nAll you need to set this up is a [Mux account](https://mux.com). You can sign up for free and pricing is pay-as-you-go. There are no upfront charges, you get billed monthly only for what you use.\n\nWithout entering a credit card on your Mux account all videos are in “test mode” which means they are watermarked and clipped to 10 seconds. If you enter a credit card all limitations are lifted and you get \\$20 of free credit. The free credit should be plenty for you to test out and play around with everything before you are charged.\n\n### Step 2. Set up environment variables\n\nCopy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen, go to the [settings page](https://dashboard.mux.com/settings/access-tokens) in your Mux dashboard set each variable on `.env.local`, get a new **API Access Token** and set each variable in `.env.local`:\n\n- `MUX_TOKEN_ID` should be the `TOKEN ID` of your new token\n- `MUX_TOKEN_SECRET` should be `TOKEN SECRET`\n\n### Step 3. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\nTo deploy on Vercel, you need to set the environment variables using [Vercel CLI](https://vercel.com/download) ([Documentation](https://vercel.com/docs/cli#commands/secrets)).\n\nInstall the [Vercel CLI](https://vercel.com/download), log in to your account from the CLI, and run the following commands to add the environment variables. Replace the values with the corresponding strings in `.env.local`:\n\n```bash\nvercel secrets add next_example_mux_token_id <MUX_TOKEN_ID>\nvercel secrets add next_example_mux_token_secret <MUX_TOKEN_SECRET>\n```\n\nThen push the project to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) to deploy.\n","contributors":[["Timer",3],["dylanjha",3],["leerob",2],["chibicode",1],["tanmaylaud",1],["lucleray",1]]},{"name":"with-mysql","title":"MySQL Example","description":"\nThis is an example of using [MySQL](https://www.mysql.com/) in a Next.js project.\n\n## Demo\n\n### [https://next-mysql.vercel.app](https://next-mysql.vercel.app/)\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-5-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-mysql&project-name=nextjs-mysql&repository-name=nextjs-mysql&env=MYSQL_HOST,MYSQL_DATABASE,MYSQL_USERNAME,MYSQL_PASSWORD&envDescription=Required%20to%20connect%20the%20app%20with%20MySQL&envLink=https%3A%2F%2Fgithub.com%2Fvercel%2Fnext.js%2Ftree%2Fcanary%2Fexamples%2Fwith-mysql%23step-2-set-up-environment-variables&demo-title=Next.js%20%2B%20MySQL%20Demo&demo-description=A%20simple%20app%20demonstrating%20Next.js%20and%20MySQL%20&demo-url=https%3A%2F%2Fnext-mysql.vercel.app%2F)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-mysql next-mysql-app\n# or\nyarn create next-app --example with-mysql next-mysql-app\n```\n\n## Configuration\n\n### Step 1. Set up a MySQL database\n\nSet up a MySQL server either locally or any cloud provider.\n\n### Step 2. Set up environment variables\n\nCopy the `env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nSet each variable on `.env.local`:\n\n- `MYSQL_HOST` - Your MySQL host URL.\n- `MYSQL_DATABASE` - The name of the MySQL database you want to use.\n- `MYSQL_USERNAME` - The name of the MySQL user with access to database.\n- `MYSQL_PASSWORD` - The passowrd of the MySQL user.\n\n### Step 3. Run migration script\n\nYou'll need to run a migration to create the necessary table for the example.\n\n```bash\nnpm run migrate\n# or\nyarn migrate\n```\n\n### Step 4. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n# or\nyarn install\nyarn dev\n```\n\nYour app should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n## Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-mysql&project-name=nextjs-mysql&repository-name=nextjs-mysql&env=MYSQL_HOST,MYSQL_DATABASE,MYSQL_USERNAME,MYSQL_PASSWORD&envDescription=Required%20to%20connect%20the%20app%20with%20MySQL&envLink=https%3A%2F%2Fgithub.com%2Fvercel%2Fnext.js%2Ftree%2Fcanary%2Fexamples%2Fwith-mysql%23step-2-set-up-environment-variables&demo-title=Next.js%20%2B%20MySQL%20Demo&demo-description=A%20simple%20app%20demonstrating%20Next.js%20and%20MySQL%20&demo-url=https%3A%2F%2Fnext-mysql.vercel.app%2F)\n","contributors":[["lucleray",2],["coetry",1],["farhankk360",1],["unimprobable",1],["rekomat",1]]},{"name":"with-neo4j","title":"Neo4j Example","description":"\nThis is a simple set up for Next using Neo4j Database with api routes. Neo4j's Movies dataset example is used to run the example.\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-3-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-neo4j&project-name=with-neo4j&repository-name=with-neo4j&env=NEO4J_URI,NEO4J_USER,NEO4J_PASSWORD&envDescription=Required%20to%20connect%20the%20app%20with%20a%20Neo4j%20database&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-neo4j%23step-3-set-up-environment-variables)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-neo4j with-neo4j-app\n# or\nyarn create next-app --example with-neo4j with-neo4j-app\n```\n\n## Configuration\n\n### Step 1. Create a Neo4j database\n\nFirst, you'll need a Neo4j database. [Neo4j Desktop](https://neo4j.com/download/) and [Neo4j Online Sandbox](https://neo4j.com/sandbox/) are good and free to use options.\n\n### Step 2. Add the movie graph model to the database\n\nThis example uses a database containing _Movies_, you can add it like so:\n\n```bash\n:play movie-graph\n```\n\nAlso included is a Cypher [movie sample](./movie-sample.md) query if needed.\n\n### Step 3. Set up environment variables\n\nNext, copy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local` to match your database uri and credentials.\n\n## Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-neo4j&project-name=with-neo4j&repository-name=with-neo4j&env=NEO4J_URI,NEO4J_USER,NEO4J_PASSWORD&envDescription=Required%20to%20connect%20the%20app%20with%20a%20Neo4j%20database&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-neo4j%23step-3-set-up-environment-variables)\n","contributors":[["nikosantis",1],["lucleray",1]]},{"name":"with-netlify-cms","title":"Example app using Netlify CMS","description":"\n[Netlify CMS](https://www.netlifycms.org/) is an open source content management system for your Git workflow that enables you to provide editors with a friendly UI and intuitive workflows. You can use it with any static site generator to create faster, more flexible web projects. Content is stored in your Git repository alongside your code for easier versioning, multi-channel publishing, and the option to handle content updates directly in Git.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-netlify-cms with-netlify-cms-app\n# or\nyarn create next-app --example with-netlify-cms with-netlify-cms-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## How it works\n\nSites take its content from markdown files in `/content`. Two of pages (`home` and `about`) are referencing directly their respective markdown files.\n\nBlog component loads all posts (during build!) and lists them out [How to load multiple md files](https://medium.com/@shawnstern/importing-multiple-markdown-files-into-a-react-component-with-webpack-7548559fce6f)\n\nUpdated to take advantange of the new `getStaticPaths` and `getStaticProps` data-fetching functions.\n","contributors":[["Timer",6],["chibicode",3],["masives",1],["supaspoida",1],["timneutkens",1],["roniemeque",1],["ijjk",1],["tanmaylaud",1],["Necmttn",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-next-auth","title":"NextAuth.js Example","description":"\nThe official example is maintained by the NextAuth.js team. You can find it at this url: https://github.com/nextauthjs/next-auth-example\n","contributors":[["ndom91",1],["muslax",1],["RickyAbell",1],["tanmaylaud",1],["Necmttn",1],["NorbertLuszkiewicz",1],["Timer",1],["merceyz",1],["belgattitude",1],["lucleray",1],["balazsorban44",1]]},{"name":"with-next-css","title":"next-css example","description":"\nThis example demonstrates how to use Next.js' built-in CSS imports and CSS modules support.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-next-css&project-name=with-next-css&repository-name=with-next-css)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-next-css with-next-css-app\n# or\nyarn create next-app --example with-next-css with-next-css-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["timneutkens",4],["chibicode",3],["lfades",3],["jthegedus",2],["AriLFrankel",1],["mherodev",1],["tomaswitek",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1]]},{"name":"with-next-i18next","title":"with-next-i18next - internationalization using i18next","description":"\nThe next-i18next module is the simplest way to add internationalization based on i18next to your next.js application providing all the benefits of react-i18next.\n\nLearn more on [next-i18next](https://github.com/isaachinman/next-i18next/tree/master/examples/simple).\n","contributors":[["jamuhl",1],["timneutkens",1],["tanmaylaud",1]]},{"name":"with-next-less","title":"Example App with next-less","description":"\nThis example demonstrates how to use the [next-less plugin](https://github.com/zeit/next-plugins/tree/master/packages/next-less).\n\nIt includes patterns for with and without CSS Modules, with PostCSS and with additional webpack configurations on top of the next-less plugin.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-next-less&project-name=with-next-less&repository-name=with-next-less)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-next-less with-next-less-app\n# or\nyarn create next-app --example with-next-less with-next-less-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["chibicode",3],["lfades",3],["timneutkens",2],["shuding",1],["mherodev",1],["Mosoc",1],["j0lv3r4",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["neighborhood999",1],["merceyz",1],["lucleray",1]]},{"name":"with-next-offline","title":"next-offline example","description":"\nThis example demonstrates how to use the [next-offline plugin](https://github.com/hanford/next-offline) It includes manifest.json to install app via chrome\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-next-offline with-next-offline-app\n# or\nyarn create next-app --example with-next-offline with-next-offline-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["chibicode",3],["aganglada",2],["ijjk",2],["armspkt",1],["lfades",1],["SZharkov",1],["SarKurd",1],["timneutkens",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-next-page-transitions","title":"next-page-transitions example","description":"\nThe [`next-page-transitions`](https://github.com/illinois/next-page-transitions) library is a component that sits at the app level and allows you to animate page changes. It works especially nicely with apps with a shared layout element, like a navbar. This component will ensure that only one page is ever mounted at a time, and manages the timing of animations for you. This component works similarly to [`react-transition-group`](https://github.com/reactjs/react-transition-group) in that it applies classes to a container around your page; it's up to you to write the CSS transitions or animations to make things pretty!\n\nThis example includes two pages with links between them. The \"About\" page demonstrates how `next-page-transitions` makes it easy to add a loading state when navigating to a page: it will wait for the page to \"load\" its content (in this examples, that's simulated with a timeout) and then hide the loading indicator and animate in the page when it's done.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-next-page-transitions&project-name=with-next-page-transitions&repository-name=with-next-page-transitions)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-next-page-transitions with-next-page-transitions-app\n# or\nyarn create next-app --example with-next-page-transitions with-next-page-transitions-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",4],["chibicode",3],["timneutkens",3],["lfades",3],["nwalters512",1],["mherodev",1],["j0lv3r4",1],["andy-ob",1],["dav-is",1],["mcsdevv",1],["awareness481",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["neighborhood999",1],["merceyz",1],["danielivert",1],["lucleray",1],["caaatisgood",1]]},{"name":"with-next-routes","title":"Dynamic routes are now supported by default in Next.js: https://nextjs.org/docs/routing/dynamic-routes","description":"","contributors":[["timneutkens",6],["chibicode",3],["jthegedus",2],["fridays",1],["paulmolluzzo",1],["HaNdTriX",1],["brikou",1],["fouad",1],["mherodev",1],["lucleray",1],["j0lv3r4",1],["dav-is",1],["lfades",1],["Timer",1],["tanmaylaud",1]]},{"name":"with-next-sass","title":"Example app with next-sass","description":"\nThis example demonstrates how to use Next.js' built-in Global Sass/Scss imports and Component-Level Sass/Scss modules support.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-next-sass&project-name=with-next-sass&repository-name=with-next-sass)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-next-sass with-next-sass-app\n# or\nyarn create next-app --example with-next-sass with-next-sass-app\n```\n\nRun production build with:\n\n```bash\nnpm run build\nnpm run start\n# or\nyarn build\nyarn start\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["timneutkens",4],["chibicode",3],["lfades",3],["jthegedus",2],["Albert-Gao",1],["mherodev",1],["IanMitchell",1],["Mosoc",1],["j0lv3r4",1],["A-Tokyo",1],["dav-is",1],["mcsdevv",1],["juanmiguelbesada",1],["nataliemarleny",1],["SarKurd",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1]]},{"name":"with-next-seo","title":"Next SEO example","description":"\nThis example shows how you integrate [next-seo](https://github.com/garmeeh/next-seo), a plugin to help manage your SEO in Next.js.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-next-seo&project-name=with-next-seo&repository-name=with-next-seo)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-next-seo next-seo-app\n# or\nyarn create next-app --example with-next-seo next-seo-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["chibicode",3],["lfades",3],["timneutkens",2],["garmeeh",1],["crutchcorn",1],["dav-is",1],["zhe",1],["ijjk",1],["ralphilius",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-next-sitemap","title":"next-sitemap example","description":"\nThis example uses [`next-sitemap`](https://github.com/iamvishnusankar/next-sitemap) to generate a sitemap file for all pages (including all pre-rendered/static pages).\n\n`next-sitemap` allows the generation of sitemaps along with `robots.txt` and provides the feature to split large sitemaps into multiple files. Checkout the [`next-sitemap` documentation](https://github.com/iamvishnusankar/next-sitemap) to learn more.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-next-sitemap&project-name=with-next-sitemap&repository-name=with-next-sitemap)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-next-sitemap with-next-sitemap-app\n# or\nyarn create next-app --example with-next-sitemap with-next-sitemap-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["iamvishnusankar",1],["Timer",1],["lucleray",1],["lfades",1]]},{"name":"with-next-translate","title":"next-translate example","description":"\nThis is an example of using [next-translate](https://github.com/vinissimus/next-translate) in a Next.js project.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-next-translate&project-name=with-next-translate&repository-name=with-next-translate)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-next-translate with-next-translate-app\n# or\nyarn create next-app --example with-next-translate with-next-translate-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Notes\n\nThis example is a basic starting point for using [next-translate](https://github.com/vinissimus/next-translate) with Next.js.\nIt's a tool to translate Next.js applications respecting the [Automatic Static Optimization](https://nextjs.org/docs/advanced-features/automatic-static-optimization). Deploy static sites with full i18n support!\n","contributors":[["Timer",3],["aralroca",3],["sospedra",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["lfades",1],["laithyounes",1]]},{"name":"with-nhost-auth-realtime-graphql","title":"Auth & Realtime GraphQL Example Using Next.js and Nhost","description":"\nThis example showcases Next.js as the frontend using [Nhost](https://nhost.io/) as the backend.\n\n## Demo\n\n### [https://nhost-nextjs-example.vercel.app/](https://nhost-nextjs-example.vercel.app/)\n\n## Deploy Your Own\n\nOnce you have created a Nhost project and have access to [the environment variables you'll need](#step-4-add-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-nhost-auth-realtime-graphql&project-name=with-nhost-auth-realtime-graphql&repository-name=with-nhost-auth-realtime-graphql&env=NEXT_PUBLIC_GRAPHQL_URL,NEXT_PUBLIC_BACKEND_URL&envDescription=Enter%20your%20Nhost%20project%27s%20URLs)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example nhost nhost-app\n# or\nyarn create next-app --example nhost nhost-app\n```\n\n## Configuration\n\n### Step 1. Create an account and a project on Nhost\n\n[Create an account and project on Nhost](https://console.nhost.io).\n\n### Step 2. Create `items` database\n\nGo to your project's Hasura console. Go to the **DATA** tab in the top menu and click **SQL** in the bottom left menu.\n\nThen copy the content from `setup/data.sql` in this example and paste it in the **Raw SQL** form in the Hasura Console. Make sure **Track this** is checked and click **Run!**\n\n### Step 3. Add API metadata\n\nAgain, in the Hasura console, click on the **gearwheel** (settings) in the top right menu. Click on **Import metadata** and select the file `setup/hasura-metadata.json` in this repository.\n\n### Step 4. Add environment variables\n\nCopy `.env.local.example` to `.env.local` and update the two URLs with your Nhost project URLs. You find the URLs in the Nhost console dashboard of your project.\n\n### Step 5. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour app should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 6. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["elitan",1]]},{"name":"with-now-env","title":"Next.js automatically supports Environment Variable loading as of [Next.js 9.4](https://nextjs.org/blog/next-9-4#new-environment-variables-support). Visit the [documentation for environment variables](https://nextjs.org/docs/basic-features/environment-variables) to learn more and the [Environment Variables Example](/examples/environment-variables) to see it on action.","description":"\nNow Secrets (previously used by this example) is no longer needed as you can now add environment variables directly in your [Vercel](https://vercel.com/) project.\n","contributors":[["lfades",5],["Timer",4],["chibicode",3],["ijjk",2],["tim-phillips",1],["mherodev",1],["j0lv3r4",1],["crutchcorn",1],["dav-is",1],["AndyBitz",1],["timneutkens",1],["timothyis",1],["tanmaylaud",1]]},{"name":"with-orbit-components","title":"Example app with styled-components","description":"\n[Orbit-components](https://orbit.kiwi) is a React component library which provides developers with the easiest possible way of building Kiwi.com’s products.\n\nFor this purpose we are extending `<App />` of injected `<ThemeProvider/>`, and also adding `@kiwicom/babel-plugin-orbit-components`.\n\nThis fork comes from [styled-components-example](https://github.com/vercel/next.js/tree/canary/examples/with-styled-components).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-orbit-components&project-name=with-orbit-components&repository-name=with-orbit-components)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-orbit-components with-orbit-components-app\n# or\nyarn create next-app --example with-orbit-components with-orbit-components-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["chibicode",3],["lfades",3],["timneutkens",2],["tomashapl",1],["crutchcorn",1],["dav-is",1],["mcsdevv",1],["RobinCsl",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-overmind","title":"Overmind example","description":"\nThis example uses [overmind](https://overmindjs.org/?view=react&typescript=false).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-overmind&project-name=with-overmind&repository-name=with-overmind)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-overmind with-overmind-app\n# or\nyarn create next-app --example with-overmind with-overmind-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Notes\n\nLook at the comments for more information on how the application is structured. This is just one of several ways you can manage hydration and rehydration of state. It depends heavily on how you want to manage it, do code sharing between client and server etc. The exampled approach should give you the hooks and flexibility to get you started on your endeavor :-)\n","contributors":[["Timer",7],["chibicode",3],["timneutkens",3],["lfades",3],["awareness481",2],["christianalfoni",1],["crutchcorn",1],["dav-is",1],["mcsdevv",1],["ijjk",1],["tanmaylaud",1],["Necmttn",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1]]},{"name":"with-passport","title":"Passport.js Example","description":"\nThis example show how to use [Passport.js](http://www.passportjs.org) with Next.js. The example features cookie based authentication with username and password.\n\nThe example shows how to do a login, signup and logout; and to get the user info using a hook with [SWR](https://swr.vercel.app).\n\nA DB is not included. You can use any db you want and add it [here](lib/user.js).\n\nThe login cookie is httpOnly, meaning it can only be accessed by the API, and it's encrypted using [@hapi/iron](https://hapi.dev/family/iron) for more security.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-passport&project-name=with-passport&repository-name=with-passport)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-passport with-passport-app\n# or\nyarn create next-app --example with-passport with-passport-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",4],["lfades",4],["jamesmosier",1],["timneutkens",1],["ijjk",1],["tanmaylaud",1],["marcmll",1],["NorbertLuszkiewicz",1],["lucleray",1],["leerob",1]]},{"name":"with-passport-and-next-connect","title":"next-connect and Passport","description":"\nThis example creates a basic [CRUD](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete) app using [next-connect](https://github.com/hoangvvo/next-connect) and cookie-based authentication with [Passport.js](http://www.passportjs.org/). The cookie is securely encrypted using [@hapi/iron](https://github.com/hapijs/iron).\n\nThe example shows how to do a sign up, login, logout, and account deactivation. It utilizes [SWR](https://swr.vercel.app/) to fetch the API.\n\nFor demo purpose, the users database is stored in the cookie session. You need to replace it with an actual database to store users in [db.js](lib/db.js).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-passport-and-next-connect&project-name=with-passport-and-next-connect&repository-name=with-passport-and-next-connect)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-passport-and-next-connect with-passport-and-next-connect-app\n# or\nyarn create next-app --example with-passport-and-next-connect with-passport-and-next-connect-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",3],["lfades",2],["hoangvvo",1],["timneutkens",1],["ijjk",1],["tanmaylaud",1],["lucleray",1],["leerob",1]]},{"name":"with-paste-typescript","title":"Example app with Paste and TypeScript","description":"\nThis example features how to use [Paste](https://paste.twilio.design) as the component library within a Next.js app with [TypeScript](https://www.typescriptlang.org/).\n\nNext.js and Paste have built-in TypeScript declarations, so you'll get autocompletion for their modules straight away.\n\n[`pages/_app.tsx`](pages/_app.tsx) is used to connect `Paste`'s Theme Provider so the pages can have app-wide styles.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-paste-typescript&project-name=with-paste-typescript&repository-name=with-paste-typescript)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-paste-typescript with-paste-typescript-app\n# or\nyarn create next-app --example with-paste-typescript with-paste-typescript-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["SiTaggart",1],["lucleray",1],["lfades",1]]},{"name":"with-patternfly","title":"Patternfly example","description":"\nThis example shows how to use Next.js along with [Patterfly](https://www.patternfly.org/v4/) including handling of external styles and assets. This is intended to show the integration of this design system with the Framework.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-patternfly&project-name=with-patternfly&repository-name=with-patternfly)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-patternfly with-patternfly-app\n# or\nyarn create next-app --example with-patternfly with-patternfly-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",7],["chibicode",3],["lfades",2],["danielr18",1],["vvo",1],["timneutkens",1],["ijjk",1],["tanmaylaud",1],["Necmttn",1],["martpie",1],["NorbertLuszkiewicz",1],["mohd-akram",1],["lucleray",1]]},{"name":"with-plausible","title":"Example app with Plausible","description":"\nThis example shows how to use [Next.js](https://github.com/vercel/next.js) along with [Plausible](https://plausible.io) via the [next-plausible](https://github.com/4lejandrito/next-plausible) package. A custom [\\_app.js](https://nextjs.org/docs/advanced-features/custom-app) is used to wrap our app with the [`PlausibleProvider`](https://github.com/4lejandrito/next-plausible#plausibleprovider-props) to track page views and [custom events](https://github.com/4lejandrito/next-plausible#send-custom-events) are shown as well.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-plausible&project-name=with-plausible&repository-name=with-plausible)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example::\n\n```bash\nnpx create-next-app --example with-plausible with-plausible-app\n# or\nyarn create next-app --example with-plausible with-plausible-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["dominikwilkowski",1]]},{"name":"with-polyfills","title":"With Polyfills","description":"\nNext.js supports IE11 and all modern browsers (Edge, Firefox, Chrome, Safari, Opera, et al) with no required configuration. It also adds [some polyfills](https://nextjs.org/docs/basic-features/supported-browsers-features#polyfills) by default.\n\nIf your own code or any external npm dependencies require features not supported by your target browsers, you need to add polyfills yourself.\n\nIn this case, you should add a top-level import for the specific polyfill you need in your Custom `<App>` or the individual component.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-polyfills&project-name=with-polyfills&repository-name=with-polyfills)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-polyfills with-polyfills-app\n# or\nyarn create next-app --example with-polyfills with-polyfills-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["timneutkens",4],["chibicode",4],["lfades",3],["arunoda",1],["timteeling",1],["jthegedus",1],["bhoule",1],["mherodev",1],["tuoxiansp",1],["j0lv3r4",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["karlhorky",1],["NorbertLuszkiewicz",1],["lucleray",1],["leerob",1]]},{"name":"with-portals","title":"Example with portals","description":"\nThis example show how to use the React [Portals](https://reactjs.org/docs/portals.html) feature with Next.js.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-portals&project-name=with-portals&repository-name=with-portals)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-portals with-portals-app\n# or\nyarn create next-app --example with-portals with-portals-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["chibicode",3],["timneutkens",3],["lfades",3],["jthegedus",2],["sergiodxa",1],["fouad",1],["brikou",1],["mherodev",1],["darrylsepeda",1],["j0lv3r4",1],["HaNdTriX",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["neighborhood999",1],["merceyz",1],["lucleray",1]]},{"name":"with-portals-ssr","title":"Example with Server Side Rendered portals","description":"\nAn example of Server Side Rendered React [Portals](https://reactjs.org/docs/portals.html) with [`@jesstelford/react-portal-universal`](https://www.npmjs.com/package/@jesstelford/react-portal-universal) and Next.js.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-portals-ssr&project-name=with-portals-ssr&repository-name=with-portals-ssr)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-portals-ssr with-portals-ssr-app\n# or\nyarn create next-app --example with-portals-ssr with-portals-ssr-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",7],["chibicode",3],["lfades",3],["timneutkens",2],["todortotev",2],["jesstelford",1],["crutchcorn",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1],["caaatisgood",1]]},{"name":"with-prefetching","title":"Example app with prefetching pages","description":"\nThis example features an app with four simple pages:\n\n- Home/Features: Default API\n- About: Imperative API\n- Contact: Disable API\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-prefetching&project-name=with-prefetching&repository-name=with-prefetching)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-prefetching with-prefetching-app\n# or\nyarn create next-app --example with-prefetching with-prefetching-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["rauchg",6],["timneutkens",6],["Timer",5],["impronunciable",4],["arunoda",3],["chibicode",3],["lfades",3],["nkzawa",2],["jthegedus",2],["sedubois",1],["sakulstra",1],["paulmolluzzo",1],["fouad",1],["mherodev",1],["Tomekmularczyk",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["HaNdTriX",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-pretty-url-routing","title":"Dynamic routes are now supported by default in Next.js: https://nextjs.org/docs/routing/dynamic-routes","description":"","contributors":[["timneutkens",5],["chibicode",3],["jthegedus",2],["BDav24",1],["t32k",1],["chentsulin",1],["paulmolluzzo",1],["aranajhonny",1],["jaeh",1],["HaNdTriX",1],["brikou",1],["fouad",1],["yhirano55",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["lfades",1],["Timer",1],["tanmaylaud",1]]},{"name":"with-prisma","title":"Prisma.io maintains it's own Next.Js examples","description":"\n- [Javascript](https://github.com/prisma/prisma-examples/tree/master/javascript/rest-nextjs)\n- [Typescript: rest-api-routes-auth](https://github.com/prisma/prisma-examples/tree/latest/typescript/rest-nextjs-api-routes-auth)\n- [Typescript: rest-api-routes](https://github.com/prisma/prisma-examples/tree/latest/typescript/rest-nextjs-api-routes)\n- [Typescript: rest-api-express](https://github.com/prisma/prisma-examples/tree/latest/typescript/rest-nextjs-express)\n- [Typescript: graphql](https://github.com/prisma/prisma-examples/tree/latest/typescript/graphql-nextjs)\n","contributors":[["khattakdev",1],["tanmaylaud",1],["davidsonsns",1]]},{"name":"with-quill-js","title":"Quilljs editor Example","description":"\n[Quill](https://quilljs.com/) is powerful rich text editor. This example uses [react-quill](https://github.com/zenoamaro/react-quill) to integrate Quill with Next.js.\n\nQuill does not suppport SSR, so it's only loaded and rendered in the browser.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-quill-js&project-name=with-quill-js&repository-name=with-quill-js)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-quill-js with-quill-js-app\n# or\nyarn create next-app --example with-quill-js with-quill-js-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["chibicode",3],["lfades",3],["timneutkens",2],["aryasadeghy",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-rbx-bulma-pro","title":"rbx & bulma-pro example","description":"\nThis example shows how to use Next.js along with [rbx](https://github.com/dfee/rbx)(Bulma UI Framework for react) and [Bulma Pro](https://mubaidr.js.org/bulma-pro/).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-rbx-bulma-pro&project-name=with-rbx-bulma-pro&repository-name=with-rbx-bulma-pro)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-rbx-bulma-pro with-rbx-bulma-pro-app\n# or\nyarn create next-app --example with-rbx-bulma-pro with-rbx-bulma-pro-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["lfades",4],["chibicode",3],["timneutkens",2],["Restoration",1],["ijjk",1],["jamesmosier",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-react-bootstrap","title":"Next.js with react-bootstrap example","description":"\nThis example shows how to use Next.js along with [react-bootstrap](https://react-bootstrap.github.io/).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-react-bootstrap&project-name=with-react-bootstrap&repository-name=with-react-bootstrap)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-react-bootstrap with-react-bootstrap-app\n# or\nyarn create next-app --example with-react-bootstrap with-react-bootstrap-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",2],["lwz7512",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["lfades",1]]},{"name":"with-react-ga","title":"React-GA example","description":"\nThis example shows the most basic way to use [react-ga](https://github.com/react-ga/react-ga) using custom [App](https://github.com/vercel/next.js#custom-app)\ncomponent with NextJs. Modify `Tracking ID` in `utils/analytics.js` file for testing this example.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-react-ga&project-name=with-react-ga&repository-name=with-react-ga)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-react-ga with-react-ga-app\n# or\nyarn create next-app --example with-react-ga with-react-ga-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",6],["Timer",5],["chibicode",3],["lfades",3],["jthegedus",2],["vinaypuppal",1],["HaNdTriX",1],["fouad",1],["mherodev",1],["Tomekmularczyk",1],["j0lv3r4",1],["dav-is",1],["EvHaus",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["valse",1],["lucleray",1]]},{"name":"with-react-helmet","title":"react-helmet example","description":"\nThis an minimalistic example of how to combine next.js and [react-helmet](https://github.com/nfl/react-helmet).\nThe title of the page shall be changed to \"Hello next.js!\"\nIf you go to the page `/about`, the title will be overridden to \"About | Hello next.js!\"\nThe rest is all up to you.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-react-helmet&project-name=with-react-helmet&repository-name=with-react-helmet)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-react-helmet with-react-helmet-app\n# or\nyarn create next-app --example with-react-helmet with-react-helmet-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",8],["Timer",6],["chibicode",3],["lfades",3],["jthegedus",2],["cia48621793",1],["HaNdTriX",1],["Coobaha",1],["paulmolluzzo",1],["micooz",1],["marciovsena",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["Ephem",1],["crutchcorn",1],["dav-is",1],["dvaJi",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["neighborhood999",1],["lucleray",1]]},{"name":"with-react-intl","title":"Example app with [React Intl][]","description":"\nThis example app shows how to integrate [React Intl][] with Next.js.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-react-intl with-react-intl-app\n# or\nyarn create next-app --example with-react-intl with-react-intl-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Features of this example app\n\n- Server-side language negotiation\n- React Intl locale data loading via `pages/_document.js` customization\n- React Intl integration with [custom App](https://github.com/vercel/next.js#custom-app) component\n- `<IntlProvider>` creation with `locale`, `messages` props\n- Default message extraction via `@formatjs/cli` integration\n- Pre-compile messages into AST with `babel-plugin-react-intl` for performance\n- Translation management via build script and customized Next server\n\n### Translation Management\n\nThis app stores translations and default strings in the `lang/` dir. The default messages (`en.json` in this example app) is also generated by the build script. This file can then be sent to a translation service to perform localization for the other locales the app should support.\n\nThe translated messages files that exist at `lang/*.json` are only used during production, and are automatically provided to the `<IntlProvider>`. During development the `defaultMessage`s defined in the source code are used. To prepare the example app for localization and production run the build script and start the server in production mode:\n\n```bash\n$ npm run build\n$ npm start\n```\n\nYou can then switch your browser's language preferences to French and refresh the page to see the UI update accordingly.\n\n[react intl]: https://formatjs.io\n","contributors":[["timneutkens",7],["Timer",7],["chibicode",3],["longlho",3],["jthegedus",2],["fabianishere",2],["jonespen",2],["awareness481",2],["Bacher",2],["ericf",1],["paulmolluzzo",1],["coluccini",1],["HaNdTriX",1],["brikou",1],["ptomasroos",1],["fouad",1],["soulmachine",1],["tobitos",1],["mherodev",1],["Tomekmularczyk",1],["r13v",1],["istarkov",1],["ultrox",1],["matthewlilley",1],["exogen",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["DevSpeak",1],["huv1k",1],["lfades",1],["s-h-a-d-o-w",1],["YUFENGWANG",1],["lemonCMS",1],["lostfictions",1],["todortotev",1],["ijjk",1],["marbiano",1],["darshkpatel",1],["jamesmosier",1],["tanmaylaud",1],["kaykdm",1],["lucleray",1],["emmanuelgautier",1]]},{"name":"with-react-jss","title":"react-jss example","description":"\nThis example shows how to integrate react-jss and jss in Next.js\n\nThe critical styles will be injected into the head when server rendered.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-react-jss&project-name=with-react-jss&repository-name=with-react-jss)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-react-jss with-react-jss-app\n# or\nyarn create next-app --example with-react-jss with-react-jss-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["HenriBeck",3],["chibicode",3],["lfades",3],["Janpot",2],["timneutkens",2],["IanMitchell",1],["j0lv3r4",1],["crutchcorn",1],["dav-is",1],["todortotev",1],["ijjk",1],["LukasPolak",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-react-md","title":"ReactMD and Next.js Example","description":"\nThis example sets up a simple [ReactMD](https://github.com/mlaursen/react-md) and Next.js\napp featuring:\n\n- [\\_variables.scss](./styles/_variables.scss) to override the default\n  `react-md` theme and feature toggles\n- [app.scss](./styles/app.scss) global styles that conditionally apply the dark theme\n  based on the user's OS preferences\n- a custom [\\_app.jsx](./pages/_app.jsx) that uses a persistent layout\n- a reusable [Layout.jsx](./components/Layout/Layout.jsx) that:\n  - updates all the icons to use `SVGIcon`s instead of `FontIcon`s\n  - initializes the `Layout` component from `react-md` with navigation items\n\nFor more information about ReactMD's features, styling, components, and API, check out\nthe [main documentation](https://react-md.dev). You can also view the\n[documentation site's source code](https://github.com/mlaursen/react-md/tree/master/packages/documentation)\nfor a more complex example of using ReactMD + Next.js or the [with-react-md-typescript](../with-react-md-typescript)\nexample for Typescript support.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-react-md&project-name=with-react-md&repository-name=with-react-md)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-react-md with-react-md-app\n# or\nyarn create next-app --example with-react-md with-react-md-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",7],["Timer",7],["lfades",4],["frol",3],["chibicode",3],["jthegedus",2],["paulmolluzzo",1],["HaNdTriX",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["darshkpatel",1],["mlaursen",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-react-md-typescript","title":"ReactMD, Next.js, and Typescript Example","description":"\nThis example sets up a simple [ReactMD](https://github.com/mlaursen/react-md), Next.js, and Typescript\napp featuring:\n\n- [\\_variables.scss](./styles/_variables.scss) to override the default\n  `react-md` theme and feature toggles\n- [app.scss](./styles/app.scss) global styles that conditionally apply the dark theme\n  based on the user's OS preferences\n- a custom [\\_app.tsx](./pages/_app.tsx) that uses a persistent layout\n- a reusable [Layout.tsx](./components/Layout/Layout.tsx) that:\n  - updates all the icons to use `SVGIcon`s instead of `FontIcon`s\n  - initializes the `Layout` component from `react-md` with navigation items\n\nFor more information about ReactMD's features, styling, components, and API, check out\nthe [main documentation](https://react-md.dev). You can also view the\n[documentation site's source code](https://github.com/mlaursen/react-md/tree/master/packages/documentation)\nfor a more complex example of using ReactMD + Next.js.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-react-md-typescript&project-name=with-react-md-typescript&repository-name=with-react-md-typescript)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-react-md-typescript with-react-md-typescript-app\n# or\nyarn create next-app --example with-react-md-typescript with-react-md-typescript-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["mlaursen",1],["NorbertLuszkiewicz",1],["Timer",1],["lucleray",1],["ludofischer",1],["lfades",1]]},{"name":"with-react-multi-carousel","title":"react-multi-carousel example","description":"\n[react-multi-carousel](https://www.npmjs.com/package/react-multi-carousel) is a React component that provides a Carousel that renders on the server-side that supports multiple items with no external dependency.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-react-multi-carousel&project-name=with-react-multi-carousel&repository-name=with-react-multi-carousel)\n\n_Live Example: https://react-multi-carousel.vercel.app_\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-react-multi-carousel with-react-multi-carousel-app\n# or\nyarn create next-app --example with-react-multi-carousel with-react-multi-carousel-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## How does it work with ssr?\n\n- On the server-side, we detect the user's device to decide how many items we are showing and then using flex-basis to assign \\* width to the carousel item.\n- On the client-side, old fashion getting width of the container and assign the average of it to each carousel item.\n\nThe UI part of this example is copy paste from for the sake of simplicity. [with-material-ui](https://github.com/vercel/next.js/tree/canary/examples/with-material-ui)\n\nSource code is hosted on the [react-multi-carorusel](https://github.com/YIZHUANG/react-multi-carousel/tree/master/examples/ssr) repository.\n","contributors":[["Timer",9],["timneutkens",5],["chibicode",3],["lfades",2],["john015",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1],["leerob",1]]},{"name":"with-react-native-web","title":"React Native Web example","description":"\nThis example features how to use [react-native-web](https://github.com/necolas/react-native-web) to bring the platform-agnostic Components and APIs of React Native to the web.\n\n> **High-quality user interfaces**: React Native for Web makes it easy to create fast, adaptive web UIs in JavaScript. It provides native-like interactions, support for multiple input modes (touch, mouse, keyboard), optimized vendor-prefixed styles, built-in support for RTL layout, built-in accessibility, and integrates with React Dev Tools.\n>\n> **Write once, render anywhere**: React Native for Web interoperates with existing React DOM components and is compatible with the majority of the React Native API. You can develop new components for native and web without rewriting existing code. React Native for Web can also render to HTML and critical CSS on the server using Node.js.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-react-native-web&project-name=with-react-native-web&repository-name=with-react-native-web)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-react-native-web with-react-native-web-app\n# or\nyarn create next-app --example with-react-native-web with-react-native-web-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["dcalhoun",4],["chibicode",3],["timneutkens",3],["lfades",3],["jthegedus",2],["raibima",2],["gHashTag",1],["mherodev",1],["komcal",1],["j0lv3r4",1],["Cauldrath",1],["dav-is",1],["mcsdevv",1],["EvanBacon",1],["flybayer",1],["MoOx",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["agstover",1],["NorbertLuszkiewicz",1],["neighborhood999",1],["orYoffe",1],["lucleray",1],["caaatisgood",1]]},{"name":"with-react-relay-network-modern","title":"Relay Modern Example","description":"\n[Relay Modern](https://relay.dev/) is a new version of Relay designed from the ground up to be easier to use, more extensible and, most of all, able to improve performance on mobile devices. Relay Modern accomplishes this with static queries and ahead-of-time code generation.\n\nThis example relies on [Prisma + Nexus](https://github.com/prisma-labs/nextjs-graphql-api-examples) for its GraphQL backend.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-react-relay-network-modern&project-name=with-react-relay-network-modern&repository-name=with-react-relay-network-modern)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-react-relay-network-modern with-react-relay-network-modern-app\n# or\nyarn create next-app --example with-react-relay-network-modern with-react-relay-network-modern-app\n```\n\nDownload schema introspection data from configured Relay endpoint\n\n```bash\nnpm run schema\n# or\nyarn schema\n```\n\nRun Relay ahead-of-time compilation (should be re-run after any edits to components that query data with Relay)\n\n```bash\nnpm run relay\n# or\nyarn relay\n```\n\nRun the project\n\n```bash\nnpm run dev\n# or\nyarn dev\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",7],["lfades",4],["chibicode",3],["timneutkens",3],["HsuTing",3],["j0lv3r4",1],["dav-is",1],["olgn",1],["millette",1],["messa",1],["rishabhsaxena",1],["willianjusten",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["Weakky",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-react-toolbox","title":"With react-toolbox example","description":"\nThis is a simple example of getting react-toolbox up and running, using [react-toolbox-themr](https://github.com/react-toolbox/react-toolbox-themr).\n\nFor actual use, you probably also want to add Roboto Font, and Material Design Icons. See <http://react-toolbox.io/#/install>\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-react-toolbox&project-name=with-react-toolbox&repository-name=with-react-toolbox)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-react-toolbox with-react-toolbox-app\n# or\nyarn create next-app --example with-react-toolbox with-react-toolbox-app\n```\n\nNotice that `yarn toolbox` (or `npm run toolbox`) should be rerun every time the `\"reactToolbox\"` configuration in `package.json` is changed, in order to update `/theme.js` and `public/theme.css`. The `\"reactToolbox\"` configuration includes styling, and the list of react-toolbox components to include.\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["chibicode",3],["timneutkens",3],["lfades",3],["jthegedus",2],["ismamz",2],["rasmuserik",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["mottox2",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-react-with-styles","title":"Example app with react-with-styles","description":"\nThis example features how you use a different styling solution than [styled-jsx](https://github.com/zeit/styled-jsx) that also supports universal styles.\nThat means we can serve the required styles for the first render within the HTML and then load the rest in the client.\nIn this case we are using [react-with-styles](https://github.com/airbnb/react-with-styles).\n\nFor this purpose we are extending the `<Document />` and injecting the server side rendered styles into the `<head>`.\n\nWe are using `pages/_index.js` from this example [with-aphrodite](https://github.com/vercel/next.js/tree/master/examples/with-aphrodite).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-react-with-styles&project-name=with-react-with-styles&repository-name=with-react-with-styles)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-react-with-styles with-react-with-styles-app\n# or\nyarn create next-app --example with-react-with-styles with-react-with-styles-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["chibicode",3],["timneutkens",3],["Timer",3],["lfades",3],["jthegedus",2],["mohsen1",2],["miguelcast",1],["ismamz",1],["C3-TKO",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["HelloRusk",1],["dav-is",1],["awareness481",1],["ijjk",1],["marbiano",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-reactstrap","title":"reactstrap Example","description":"\nThis example shows how to use Next.js with [reactstrap](https://reactstrap.github.io/).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-reactstrap&project-name=with-reactstrap&repository-name=with-reactstrap)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-reactstrap with-reactstrap-app\n# or\nyarn create next-app --example with-reactstrap with-reactstrap-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["khasty720",1],["Timer",1],["lucleray",1],["lfades",1]]},{"name":"with-realm-web","title":"Realm-Web SDK Example","description":"\nThis example uses [Realm-Web SDK](https://docs.mongodb.com/realm/web/) to query a realm graphql endpoint using [swr](https://swr.vercel.app/).\n\nThis example relies on [MongoDB Realm](https://www.mongodb.com/realm) for its GraphQL backend.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-realm-web&project-name=with-realm-web&repository-name=with-realm-web)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-realm-web with-realm-web-app\n# or\nyarn create next-app --example with-realm-web with-realm-web-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Configuration\n\nTo set up your app:\n\n1. Link a cluster that includes the [Atlas sample data sets](https://docs.atlas.mongodb.com/sample-data/)\n2. Configure permissions for the `sample_mflix.movies` collection. For this\n   demo, you can assign ready only permissions for all authenticated users.\n3. Generate a collection schema for the `sample_mflix.movies` collection.\n   Add a root-level \"title\" field to the schema with the value set to \"movie\".\n4. Enable anonymous authentication\n5. Once your app is set up, replace the value of NEXT_PUBLIC_REALM_APP_ID in `.env` file with your App ID\n","contributors":[["darshkpatel",1],["tanmaylaud",1],["Necmttn",1],["NorbertLuszkiewicz",1],["Timer",1],["lucleray",1],["lfades",1],["leerob",1],["4ortytwo",1]]},{"name":"with-reason-relay","title":"Reason Relay Example","description":"\n[Reason Relay](https://reason-relay-documentation.zth.vercel.app/)\n\nThis example relies on [Prisma + Nexus](https://github.com/prisma-labs/nextjs-graphql-api-examples) for its GraphQL backend.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-reason-relay&project-name=with-reason-relay&repository-name=with-reason-relay)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-reason-relay with-reason-relay-app\n# or\nyarn create next-app --example with-reason-relay with-reason-relay-app\n```\n\nDownload schema introspection data from configured Relay endpoint:\n\n```bash\nnpm run schema\n# or\nyarn schema\n```\n\nRun Relay ahead-of-time compilation (should be re-run after any edits to components that query data with Relay)\n\n```bash\nnpm run relay\n# or\nyarn relay\n```\n\nBuild and run the Relay project\n\n```bash\nnpm run build\nnpm run dev\n# or\nyarn build\nyarn dev\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["lfades",2],["leerob",2],["Arnarkari93",1],["timneutkens",1],["tanmaylaud",1],["martpie",1],["Weakky",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1],["caaatisgood",1],["m-leon",1]]},{"name":"with-reasonml","title":"Example app using ReasonML & ReasonReact components","description":"\nThis example features:\n\n- An app that mixes together JavaScript and ReasonML components and functions\n- An app with two pages which has a common Counter component\n- That Counter component maintain the counter inside its module. This is used\n  primarily to illustrate that modules get initialized once and their state\n  variables persist in runtime\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-reasonml&project-name=with-reasonml&repository-name=with-reasonml)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-reasonml with-reasonml-app\n# or\nyarn create next-app --example with-reasonml with-reasonml-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n### Recommendation:\n\nRun BuckleScript build system `bsb -w` and `next -w` separately. For the sake\nof simple convention, `npm run dev` run both `bsb` and `next` concurrently.\nHowever, this doesn't offer the full [colorful and very, very, veeeery nice\nerror\noutput](https://reasonml.github.io/blog/2017/08/25/way-nicer-error-messages.html)\nexperience that ReasonML can offer, don't miss it!\n\nThere are 2 convenience scripts to facilitate running these separate processes:\n\n1. `npm run dev:reason` - This script will start the ReasonML toolchain in\n   watch mode to re-compile whenever you make changes.\n2. `npm run dev:next` - This script will start the next.js development server\n   so that you will be able to access your site at the location output by the\n   script. This will also hot reload as you make changes.\n\nYou should start the scripts in the presented order.\n","contributors":[["Timer",5],["scull7",4],["timneutkens",4],["rase-",3],["Enalmada",3],["chibicode",3],["lfades",3],["jthegedus",2],["nrako",1],["idkjs",1],["adrianmcli",1],["fouad",1],["romainquellec",1],["mherodev",1],["dav-is",1],["sync",1],["nataliemarleny",1],["vasco3",1],["ijjk",1],["tanmaylaud",1],["martpie",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-reasonml-todo","title":"Example app using ReasonML & ReasonReact components","description":"\nThis example builds upon the original `with-reasonml` example to show how a\nglobal state object can be used to track state across page within the application.\n\nIt is intended to show how to build a simple, stateful application using hooks\nwithout the added complexity of a redux type library.\n\nThis example features:\n\n- An app that mixes together JavaScript and ReasonML components and functions\n- An app with two pages which has a common Counter component\n- That Counter component maintain the counter inside its module. This is used\n  primarily to illustrate that modules get initialized once and their state\n  variables persist in runtime\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-reasonml-todo&project-name=with-reasonml-todo&repository-name=with-reasonml-todo)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-reasonml-todo with-reasonml-app\n# or\nyarn create next-app --example with-reasonml-todo with-reasonml-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n### Recommendation:\n\nRun BuckleScript build system `bsb -w` and `next -w` separately. For the sake\nof simple convention, `npm run dev` run both `bsb` and `next` concurrently.\nHowever, this doesn't offer the full [colorful and very, very, veeeery nice\nerror\noutput](https://reasonml.github.io/blog/2017/08/25/way-nicer-error-messages.html)\nexperience that ReasonML can offer, don't miss it!\n\nThere are 2 convenience scripts to facilitate running these separate processes:\n\n1. `npm run dev:reason` - This script will start the ReasonML toolchain in\n   watch mode to re-compile whenever you make changes.\n2. `npm run dev:next` - This script will start the next.js development server\n   so that you will be able to access your site at the location output by the\n   script. This will also hot reload as you make changes.\n\nYou should start the scripts in the presented order.\n","contributors":[["Timer",4],["chibicode",3],["lfades",3],["scull7",2],["timneutkens",2],["none23",1],["vvo",1],["ijjk",1],["tanmaylaud",1],["martpie",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1]]},{"name":"with-rebass","title":"Example app with Rebass","description":"\nThis example features how you use [Rebass](https://jxnblk.com/rebass/) functional UI library with Next.js.\n\n![Screenshot](https://cloud.githubusercontent.com/assets/304265/22472564/b2e04ff0-e7de-11e6-921e-d0c9833ac805.png)\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-rebass&project-name=with-rebass&repository-name=with-rebass)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-rebass with-rebass-app\n# or\nyarn create next-app --example with-rebass with-rebass-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",4],["Timer",4],["chibicode",3],["lfades",3],["jthegedus",2],["lucleray",2],["sergiodxa",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["neighborhood999",1],["merceyz",1],["austingmhuang",1],["xom9ikk",1],["jaisharx",1]]},{"name":"with-recoil","title":"Recoil Example","description":"\nThis example shows how to integrate Recoil in Next.js.\n\n[Recoil](https://recoiljs.org) is an experimental set of utilities for state management with React used by some teams at Facebook. This example takes the code from the redux examples and demonstrates how it would be implemented with Recoil.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-recoil&project-name=with-recoil&repository-name=with-recoil)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-recoil with-recoil-app\n# or\nyarn create next-app --example with-recoil with-recoil-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["lucleray",2],["wilbert-abreu",1],["alexej-d",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["Timer",1],["lfades",1]]},{"name":"with-redis","title":"Redis Example (with Upstash)","description":"\nThis example showcases how to use Redis as a data store in a Next.js project.\n\nThe example is a roadmap voting application where users can enter and vote for feature requests. It features the following:\n\n- Users can add and upvote items (features in the roadmap)\n- Users can enter their email addresses to be notified about the released items.\n- The API records the ip-addresses of the voters, so it does not allow multiple votes on the same item from the same IP address.\n\n## Demo\n\n- [https://roadmap-redis.vercel.app/](https://roadmap-redis.vercel.app/)\n\n## Deploy Your Own\n\nThis examples uses [Upstash](https://upstash.com) (Serverless Redis Database) as its data storage. During deployment,\nyou will be asked to connect with Upstash. The integration will help you create a free Redis database and link it to your Vercel project automatically.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https%3A%2F%2Fgithub.com%2Fvercel%2Fnext.js%2Ftree%2Fcanary%2Fexamples%2Fwith-redis&project-name=redis-roadmap&repository-name=redis-roadmap&demo-title=Redis%20Roadmap&demo-description=Create%20and%20upvote%20features%20for%20your%20product.&demo-url=https%3A%2F%2Froadmap-redis.vercel.app%2F&integration-ids=oac_V3R1GIpkoJorr6fqyiwdhl17)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-redis roadmap\n# or\nyarn create next-app --example with-redis roadmap\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["lucleray",1],["elsigh",1],["noahfschr",1],["leerob",1]]},{"name":"with-redux","title":"Redux example","description":"\nThis example shows how to integrate Redux in Next.js.\n\nUsually splitting your app state into `pages` feels natural but sometimes you'll want to have global state for your app. This is an example on how you can use Redux that also works with Next.js's universal rendering approach.\n\nIn the first example we are going to display a digital clock that updates every second. The first render is happening in the server and then the browser will take over. To illustrate this, the server rendered clock will have a different background color (black) than the client one (grey).\n\nTo illustrate SSG and SSR, go to `/ssg` and `/ssr`, those pages are using Next.js data fetching methods to get the date in the server and return it as props to the page, and then the browser will hydrate the store and continue updating the date.\n\nThe trick here for supporting universal Redux is to separate the cases for the client and the server. When we are on the server we want to create a new store every time, otherwise different users data will be mixed up. If we are in the client we want to use always the same store. That's what we accomplish on `store.js`.\n\nAll components have access to the Redux store using `useSelector`, `useDispatch` or `connect` from `react-redux`.\n\nOn the server side every request initializes a new store, because otherwise different user data can be mixed up. On the client side the same store is used, even between page changes.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-redux&project-name=with-redux&repository-name=with-redux)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-redux with-redux-app\n# or\nyarn create next-app --example with-redux with-redux-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",10],["Timer",5],["lfades",4],["impronunciable",3],["HaNdTriX",3],["chibicode",3],["nkzawa",2],["huzidaha",2],["jthegedus",2],["NorbertLuszkiewicz",2],["borellvi",1],["possibilities",1],["sedubois",1],["stephenmathieson",1],["sakulstra",1],["kirill-konshin",1],["rauchg",1],["paulmolluzzo",1],["spencersmb",1],["davincho",1],["jpsc",1],["brunocascio",1],["NeXTs",1],["fouad",1],["shogunsea",1],["omaksi",1],["karthikmuralidharan",1],["yhirano55",1],["lon-io",1],["mherodev",1],["j0lv3r4",1],["ravindermahajan890",1],["slv",1],["crutchcorn",1],["dav-is",1],["Naturalclar",1],["ijjk",1],["chandan-reddy-k",1],["tanmaylaud",1],["lucleray",1]]},{"name":"with-redux-code-splitting","title":"Redux with code splitting example","description":"\nRedux uses single store per application and usually it causes problems for code splitting when you want to load actions and reducers used on the current page only.\n\nThis example utilizes [fast-redux](https://github.com/dogada/fast-redux) to split Redux's actions and reducers across pages. In result each page's javascript bundle contains only code that is used on the page. When user navigates to a new page, its actions and reducers are connected to the single shared application store.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-redux-code-splitting&project-name=with-redux-code-splitting&repository-name=with-redux-code-splitting)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-redux-code-splitting with-redux-code-splitting-app\n# or\nyarn create next-app --example with-redux-code-splitting with-redux-code-splitting-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["timneutkens",4],["chibicode",3],["lfades",3],["jthegedus",2],["ismamz",1],["fouad",1],["mherodev",1],["muhaimincs",1],["HaNdTriX",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-redux-observable","title":"Redux-Observable example","description":"\nThis example is a page that renders information about Star-Wars characters. It\nfetches new character every 3 seconds having the initial character fetched on\na server.\n\nExample also uses `redux-logger` to log every action.\n\n![demo page](demo.png)\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-redux-observable&project-name=with-redux-observable&repository-name=with-redux-observable)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-redux-observable with-redux-observable-app\n# or\nyarn create next-app --example with-redux-observable with-redux-observable-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\nNote: we are not using `AjaxObservable` from the `rxjs` library; as of rxjs\nv5.5.6, it will not work on both the server- and client-side. Instead we call\nthe default export from\n[universal-rxjs-ajax](https://www.npmjs.com/package/universal-rxjs-ajax) (as\n`request`).\n\nWe transform the Observable we get from `ajax` into a Promise in order to await\nits resolution. That resolution should be a action (since the epic returns\nObservables of actions). We immediately dispatch that action to the store.\n\nThis server-side solution allows compatibility with Next. It may not be\nsomething you wish to emulate. In other situations, calling or awaiting epics\ndirectly and passing their result to the store would be an anti-pattern. You\nshould only trigger epics by dispatching actions. This solution may not\ngeneralise to resolving more complicated sets of actions.\n\nThe layout of the redux related functionality is split between:\n\n    - actions (in `redux/actions.js`)\n    - actionTypes (in `redux/actionTypes.js`)\n    - epics (in `redux/epics.js`)\n    - reducer (in `redux/reducer.js`)\n\nand organized in `redux/index.js`.\n\nExcepting in those manners discussed above, the configuration is similar the\nconfiguration found in [with-redux example](https://github.com/vercel/next.js/tree/canary/examples/with-redux)\nand [redux-observable docs](https://redux-observable.js.org/).\n","contributors":[["timneutkens",6],["Timer",5],["chibicode",3],["lfades",3],["jthegedus",2],["Tomekmularczyk",2],["fouad",1],["mpacer",1],["jayphelps",1],["mherodev",1],["kalabro",1],["duncanleung",1],["j0lv3r4",1],["teo-garcia",1],["ijjk",1],["todortotev",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-redux-persist","title":"Redux Persist example","description":"\nThis example shows how to integrate Redux with the power of Redux Persist in Next.js.\n\nWith the advantage of having a global state for your app using `redux`. You'll also require some of your state values to be available offline. There comes `redux-persist` using which you can persist your states in browser's local storage. While there are various ways of persisting your states which you can always find in there [documentation](https://github.com/rt2zz/redux-persist/blob/master/README.md). This is an example of how you can integrate `redux-persist` with redux along with Next.js's universal rendering approach.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-redux-persist&project-name=with-redux-persist&repository-name=with-redux-persist)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-redux-persist with-redux-persist-app\n# or\nyarn create next-app --example with-redux-persist with-redux-persist-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Notes\n\nIn this example, we are going to use the Next.js example [with-redux](https://github.com/vercel/next.js/tree/master/examples/with-redux-persist) to see how you can add a layer of persistence for one of the state from global redux state. To know more about how to create a Next.js project with Redux, you can browse the example project [with-redux](https://github.com/vercel/next.js/tree/master/examples/with-redux) to know more about its implementation.\n\nThe Redux Persist has been initialized in `store.js`. You can modify the `redux-persist` configuration (In this example, we are persisting only one state termed `exampleData` which is added in the `persist configuration`) if you need something more with `redux-persist` by following their [docs](https://github.com/rt2zz/redux-persist/blob/master/README.md). To wrap out our component in the `Persist Gate` which rehydrates the global state with combining the persisted values and global state values, we'll have to make some modifications in the implementation of Redux in `pages/_app.js`.\n\nThe example under `components/data-list.js`, shows a simple component that fetches data after being mounted and then dispatches an action to populate the redux state `exampleData` with the fetched data. And in `store.js`, since we have included the `exampleData` state to be persisted, So once the redux state receives the persisted data from browser's local storage, it will be then updated to the global redux state. So if you open the app next time and there is no Internet connection or whatsoever condition, the app will load the persisted data and will render it on the screen.\n\nFor simplicity and readability, Reducers, Actions, Redux Persist configuration, and Store creators are all in the same file: `store.js`\n","contributors":[["Timer",6],["chibicode",3],["timneutkens",3],["lfades",3],["ijjk",2],["todortotev",2],["jrusso1020",1],["teo-garcia",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["weichienhung",1],["merceyz",1],["lucleray",1],["SystemDisc",1]]},{"name":"with-redux-saga","title":"redux-saga example","description":"\nUsually splitting your app state into `pages` feels natural, but sometimes you'll want to have global state for your app. This is an example using `redux` and `redux-saga` that works with universal rendering. This is just one way it can be done. If you have any suggestions or feedback please submit an issue or PR.\n\n> This example and documentation is based on the [with-redux](https://github.com/vercel/next.js/tree/master/examples/with-redux) example.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-redux-saga&project-name=with-redux-saga&repository-name=with-redux-saga)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-redux-saga with-redux-saga-app\n# or\nyarn create next-app --example with-redux-saga with-redux-saga-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Notes\n\nIn the first example we are going to display a digital clock that updates every second. The first render is happening in the server and then the browser will take over. To illustrate this, the server rendered clock will have a different background color than the client one.\n\n![](https://i.imgur.com/JCxtWSj.gif)\n\nOur page is located at `pages/index.js` so it will map the route `/`. To get the initial data for rendering we are implementing the static method `getInitialProps`, initializing the redux store and dispatching the required actions until we are ready to return the initial state to be rendered. Since the component is wrapped with `next-redux-wrapper`, the component is automatically connected to Redux and wrapped with `react-redux Provider`, that allows us to access redux state immediately and send the store down to children components so they can access to the state when required.\n\nFor safety it is recommended to wrap all pages, no matter if they use Redux or not, so that you should not care about it anymore in all child components.\n\n`withRedux` function accepts `makeStore` as first argument, all other arguments are internally passed to `react-redux connect()` function. `makeStore` should return a new instance of redux store each time when called, no memoization needed here. See the [full example](https://github.com/kirill-konshin/next-redux-wrapper#usage) in the Next Redux Wrapper repository.\n\nThe trick here for supporting universal redux is to separate the cases for the client and the server. When we are on the server we want to create a new store every time, otherwise different users data will be mixed up. If we are in the client we want to use always the same store and hydrate it when needed. That's what we accomplish in `store.js`\n\nThe clock, under `components/clock.js`, has access to the state using the `connect` function from `react-redux`. In this case Clock is a direct child from the page but it could be deep down the render tree.\n\nThe second example, under `components/counter.js`, shows a simple add counter function with a class component implementing a common redux pattern of mapping state and props. Again, the first render is happening in the server and instead of starting the count at 0, it will dispatch an action in redux that starts the count at 1. This continues to highlight how each navigation triggers a server render first and then a client render second, when you navigate between pages.\n","contributors":[["timneutkens",5],["Timer",5],["bbortt",4],["chibicode",3],["lfades",3],["jthegedus",2],["todortotev",2],["bmealhouse",1],["ismamz",1],["lquixada",1],["fouad",1],["gavin1995",1],["UltCombo",1],["gastonfartek",1],["yhirano55",1],["mherodev",1],["a-barbieri",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["willianjusten",1],["teo-garcia",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["xom9ikk",1],["lucleray",1]]},{"name":"with-redux-thunk","title":"Redux Thunk example","description":"\nThis example shows how to integrate Redux and Redux Thunk in Next.js.\n\nUsually splitting your app state into `pages` feels natural but sometimes you'll want to have global state for your app. This is an example on how you can use redux that also works with Next.js's universal rendering approach.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-redux-thunk&project-name=with-redux-thunk&repository-name=with-redux-thunk)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-redux-thunk with-redux-thunk-app\n# or\nyarn create next-app --example with-redux-thunk with-redux-thunk-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Notes\n\nThe Redux `Provider` is implemented in `pages/_app.js`. The `MyApp` component is wrapped in a `withReduxStore` function, the redux `store` will be initialized in the function and then passed down to `MyApp` as `this.props.initialReduxState`, which will then be utilized by the `Provider` component.\n\nEvery initial server-side request will utilize a new `store`. However, every `Router` or `Link` action will persist the same `store` as a user navigates through the `pages`. To demonstrate this example, we can navigate back and forth to `/show-redux-state` using the provided `Link`s. However, if we navigate directly to `/show-redux-state` (or refresh the page), this will cause a server-side render, which will then utilize a new store.\n\nIn the `clock` component, we are going to display a digital clock that updates every second. The first render is happening on the server and then the browser will take over. To illustrate this, the server rendered clock will initially have a black background; then, once the component has been mounted in the browser, it changes from black to a grey background.\n\nIn the `counter` component, we are going to display a user-interactive counter that can be increased or decreased when the provided buttons are pressed.\n\nThis example includes two different ways to access the `store` or to `dispatch` actions:\n\n1.) `pages/index.js` will utilize `connect` from `react-redux` to `dispatch` the `startClock` redux action once the component has been mounted in the browser.\n\n2.) `components/counter.js` and `components/examples.js` have access to the redux store using `useSelector` and can dispatch actions using `useDispatch` from `react-redux@^7.1.0`\n\nYou can either use the `connect` function to access redux state and/or dispatch actions or use the hook variations: `useSelector` and `useDispatch`. It's up to you.\n\nThis example also includes hot-reloading when one of the `reducers` has changed. However, there is one caveat with this implementation: If you're using the `Redux DevTools` browser extension, then all previously recorded actions will be recreated when a reducer has changed (in other words, if you increment the counter by 1 using the `+1` button, and then change the increment action to add 10 in the reducer, Redux DevTools will playback all actions and adjust the counter state by 10 to reflect the reducer change). Therefore, to avoid this issue, the store has been set up to reset back initial state upon a reducer change. If you wish to persist redux state regardless (or you don't have the extension installed), then in `store.js` change (line 19) `store.replaceReducer(createNextReducer(initialState))` to `store.replaceReducer(createNextReducer)`.\n","contributors":[["Timer",6],["chibicode",3],["lfades",3],["timneutkens",2],["todortotev",2],["ravindermahajan890",1],["dav-is",1],["matamatanot",1],["mattcarlotta",1],["teo-garcia",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-redux-toolkit","title":"Redux Toolkit example","description":"\nThis example shows how to integrate Next.js with [Redux Toolkit](https://redux-toolkit.js.org).\n\nThe **Redux Toolkit** is intended to be the standard way to write Redux logic (create actions and reducers, setup the store with some default middlewares like redux devtools extension). This example demonstrates each of these features with Next.js\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-redux-toolkit&project-name=with-redux-toolkit&repository-name=with-redux-toolkit)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-redux-toolkit with-redux-toolkit-app\n# or\nyarn create next-app --example with-redux-toolkit with-redux-toolkit-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n### TypeScript Setup (optional)\n\nIf you haven't already added [TypeScript](https://www.typescriptlang.org/) to your project, follow the [steps in the Next.js documentation](https://nextjs.org/docs/basic-features/typescript). If you are new to TypeScript, go through the Next.js [learning lesson on TypeScript](https://nextjs.org/learn/excel/TypeScript).\n\nOnce TypeScript is added, follow the instructions given on the Redux Toolkit [documentation](https://redux-toolkit.js.org/tutorials/TypeScript) to set up and use Redux Toolkit and React-Redux with TypeScript\n","contributors":[["Timer",3],["Mokshit06",2],["JazibJafri",1],["timneutkens",1],["teo-garcia",1],["leosuncin",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["lfades",1],["DeHoKo",1]]},{"name":"with-redux-toolkit-typescript","title":"Redux Toolkit TypeScript Example","description":"\nThis example shows how to integrate Next.js with [Redux Toolkit](https://redux-toolkit.js.org).\n\nThe **Redux Toolkit** is a standardized way to write Redux logic (create actions and reducers, setup the store with some default middlewares like redux devtools extension). This example demonstrates each of these features with Next.js\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-redux-toolkit-typescript&project-name=with-redux-toolkit&repository-name=with-redux-toolkit)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-redux-toolkit-typescript with-redux-toolkit-app\n# or\nyarn create next-app --example with-redux-toolkit-typescript with-redux-toolkit-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["JulienKode",1],["leerob",1],["leosuncin",1]]},{"name":"with-redux-wrapper","title":"With Redux Wrapper Example","description":"\nUsually splitting your app state into `pages` feels natural but sometimes you'll want to have global state for your app. This is an example on how you can use redux that also works with our universal rendering approach. This is just a way you can do it but it's not the only one.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-redux-wrapper&project-name=with-redux-wrapper&repository-name=with-redux-wrapper)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-redux-wrapper with-redux-wrapper-app\n# or\nyarn create next-app --example with-redux-wrapper with-redux-wrapper-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Notes\n\nIn the first example we are going to display a digital clock that updates every second. The first render is happening in the server and then the browser will take over. To illustrate this, the server rendered clock will have a different background color than the client one.\n\n![](https://i.imgur.com/JCxtWSj.gif)\n\nOur page is located at `pages/index.js` so it will map the route `/`. To get the initial data for rendering we are implementing the static method `getInitialProps`, initializing the redux store and dispatching the required actions until we are ready to return the initial state to be rendered. Since the component is wrapped with `next-redux-wrapper`, the component is automatically connected to Redux and wrapped with `react-redux Provider`, that allows us to access redux state immediately and send the store down to children components so they can access to the state when required.\n\nFor safety it is recommended to wrap all pages, no matter if they use Redux or not, so that you should not care about it anymore in all child components.\n\nThis example wraps pages individually using `getStaticProps` and `getServerSideProps`. See the [full example](https://github.com/kirill-konshin/next-redux-wrapper#usage) in the Next Redux Wrapper repository, you can also opt-in to use `App.getInitialProps` and `Page.getInitialProps` as before.\n\nTo pass the initial state from the server to the client we pass it as a prop called `initialState` so then it's available when the client takes over.\n\nThe trick here for supporting universal redux is to separate the cases for the client and the server. When we are on the server we want to create a new store every time, otherwise different users data will be mixed up. If we are in the client we want to use always the same store. That's what we accomplish on `store.js`\n\nThe clock, under `components/Clock.js`, has access to the state using the `connect` function from `react-redux`. In this case Clock is a direct child from the page but it could be deep down the render tree.\n\nThe second example, under `components/AddCount.js`, shows a simple add counter function with a class component implementing a common redux pattern of mapping state and props. Again, the first render is happening in the server and instead of starting the count at 0, it will dispatch an action in redux that starts the count at 1. This continues to highlight how each navigation triggers a server render first and then a client render second, when you navigate between pages.\n","contributors":[["Timer",7],["timneutkens",4],["chibicode",3],["kirill-konshin",3],["lfades",3],["jthegedus",2],["omaksi",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["lv-kit",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["Pitasi",1],["xom9ikk",1],["lucleray",1]]},{"name":"with-reflexjs","title":"Next.js + Reflexjs Example","description":"\nReflexjs is a library for rapid UI development with style props, color modes, themes and variants.\n\nThis example shows how to use [Reflexjs](https://github.com/reflexjs/reflexjs) with Next.js.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-reflexjs&project-name=with-reflexjs&repository-name=with-reflexjs)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-reflexjs with-reflexjs-app\n# or\nyarn create next-app --example with-reflexjs with-reflexjs-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["arshad",1]]},{"name":"with-reflux","title":"Pass Server Data Directly to a Next.js Page during SSR","description":"\nUse [reflux](https://github.com/reflux/refluxjs) to manage an application store with unidirectional dataflow.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-reflux&project-name=with-reflux&repository-name=with-reflux)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-reflux with-reflux-app\n# or\nyarn create next-app --example with-reflux with-reflux-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",4],["chibicode",3],["lfades",3],["timneutkens",2],["rickyplouis",1],["jthegedus",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-relay-modern","title":"Relay Modern Example","description":"\n[Relay Modern](https://relay.dev/) is a new version of Relay designed from the ground up to be easier to use, more extensible and, most of all, able to improve performance on mobile devices. Relay Modern accomplishes this with static queries and ahead-of-time code generation.\n\nThis example relies on [Prisma + Nexus](https://github.com/prisma-labs/nextjs-graphql-api-examples) for its GraphQL backend.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-relay-modern&project-name=with-relay-modern&repository-name=with-relay-modern)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-relay-modern with-relay-modern-app\n# or\nyarn create next-app --example with-relay-modern with-relay-modern-app\n```\n\nDownload schema introspection data from configured Relay endpoint\n\n```bash\nnpm run schema\n# or\nyarn schema\n```\n\nRun Relay ahead-of-time compilation (should be re-run after any edits to components that query data with Relay)\n\n```bash\nnpm run relay\n# or\nyarn relay\n```\n\nRun the project\n\n```bash\nnpm run dev\n# or\nyarn dev\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",8],["timneutkens",5],["lfades",4],["chibicode",3],["petrvlcek",2],["jthegedus",2],["messa",2],["lquixada",1],["fouad",1],["odinuge",1],["mherodev",1],["HaNdTriX",1],["dutradda",1],["j0lv3r4",1],["crutchcorn",1],["dav-is",1],["millette",1],["thibaultboursier",1],["willianjusten",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["Weakky",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-rematch","title":"Rematch example","description":"\nThis example has two pages. The first page has a counter which can be incremented synchronously or asynchronously. The second page is a page which shows a list of github users. It fetches data from the github api using this [endpoint](api.github.com/users).\n\nSince rematch is utility which uses redux under the hood, some elements like `store.js` and `withRematch` are very similar to the `with-redux` example. Please go through the `with-redux` example [here](https://github.com/vercel/next.js/tree/master/examples/with-redux) before reading further if you are not familiar with how redux is integrated with nextjs. Rematch is just an extension for Redux so a lot of elements are the same.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-rematch&project-name=with-rematch&repository-name=with-rematch)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example::\n\n```bash\nnpx create-next-app --example with-rematch with-rematch-app\n# or\nyarn create next-app --example with-rematch with-rematch-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Directory structure\n\nBesides the `pages` directory, there is a directory called shared which holds all of the code belonging to rematch. `Rematch` has a lot lesser boilerplate than `Redux` because it is able to put actions(including async actions), _models_ and reducers together. Hence, a `models` directory is present, which contains the logic for `counter` and `github` users.\n\nSome features of this example are :\n\n- Pages are connected to rematch using `withRematch` util. These pages are capable of accessing values from the store and dispatching changes\n- Components are inside the `shared/components` folder. The `counter-display` component is connected to the store using the `connect` function to show how components which are not pages, can connect with Rematch.\n- The file `shared/store` exports an initStore function which is used by `withRematch` to create store universally on the server and on the client.\n","contributors":[["Timer",8],["chibicode",3],["timneutkens",3],["todortotev",3],["lfades",3],["zsxsoft",2],["imbhargav5",1],["mherodev",1],["j0lv3r4",1],["nblthree",1],["dav-is",1],["nataliemarleny",1],["mcsdevv",1],["willianjusten",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-route-as-modal","title":"with-route-as-modal","description":"\nOn many popular social media, opening a post will update the URL but won't trigger a navigation and will instead display the content inside a modal. This behavior ensures the user won't lose the current UI context (scroll position). The URL still reflect the post's actual page location and any refresh will bring the user there. This behavior ensures great UX without neglecting SEO.\n\nThis example shows how to conditionally display a modal based on a route.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-route-as-modal&project-name=with-route-as-modal&repository-name=with-route-as-modal)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-route-as-modal with-route-as-modal-app\n# or\nyarn create next-app --example with-route-as-modal with-route-as-modal-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",2],["IAmMorrow",1],["timneutkens",1],["ijjk",1],["jmfury",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["lfades",1]]},{"name":"with-segment-analytics","title":"Example app with analytics","description":"\nThis example shows how to use Next.js along with [Segment Analytics](https://segment.com). A custom document is used in inject the [Segment snippet](https://github.com/segmentio/snippet) into the `<head>`. Page views are tracked on both the server and client side and components fire [\"track\"](https://segment.com/docs/spec/track/) events based on user actions (see `contact.js` for example).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-segment-analytics&project-name=with-segment-analytics&repository-name=with-segment-analytics)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-segment-analytics with-segment-analytics-app\n# or\nyarn create next-app --example with-segment-analytics with-segment-analytics-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["timneutkens",4],["chibicode",3],["lfades",3],["todortotev",2],["prichodko",1],["jthegedus",1],["mherodev",1],["j0lv3r4",1],["mulholio",1],["crutchcorn",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-semantic-ui","title":"Semantic UI example","description":"\nThis example shows how to use Next.js along with [Semantic UI React](https://react.semantic-ui.com) including handling of external styles and assets. This is intended to show the integration of this UI toolkit with the Framework.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-semantic-ui&project-name=with-semantic-ui&repository-name=with-semantic-ui)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-semantic-ui with-semantic-ui-app\n# or\nyarn create next-app --example with-semantic-ui with-semantic-ui-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",7],["Timer",7],["chibicode",3],["lfades",3],["jthegedus",2],["impronunciable",1],["paulmolluzzo",1],["HaNdTriX",1],["fouad",1],["r0b-",1],["mherodev",1],["adrianmcli",1],["navossoc",1],["adrianoted",1],["j0lv3r4",1],["marcinczenko",1],["crutchcorn",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["Necmttn",1],["NorbertLuszkiewicz",1],["xom9ikk",1],["lucleray",1]]},{"name":"with-sentry","title":"Sentry","description":"\nThis is an example showing how to use [Sentry](https://sentry.io) to catch & report errors on both client + server side.\n\n- `_app.js` renders on both the server and client. It initializes Sentry to catch any unhandled exceptions\n- `_error.js` is rendered by Next.js while handling certain types of exceptions for you. It is overridden so those exceptions can be passed along to Sentry\n- Each API route also initializes Sentry, so it can work independently in the \"serverless\" build config\n- `next.config.js` enables source maps in production, uploads them to a new Sentry release, and swaps out `@sentry/node` for `@sentry/browser` when building the client bundle\n\n## Deploy your own\n\nOnce you have access to your [Sentry DSN](#step-1-enable-error-tracking), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-sentry&project-name=with-sentry&repository-name=with-sentry&env=NEXT_PUBLIC_SENTRY_DSN&envDescription=DSN%20Key%20required%20by%20Sentry&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-sentry%23step-1-enable-error-tracking)\n\n## How To Use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-sentry with-sentry-app\n# or\nyarn create next-app --example with-sentry with-sentry-app\n```\n\n## Configuration\n\n### Step 1. Enable error tracking\n\nCopy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nNext, Copy your Sentry DSN. You can get it from the settings of your project in **Client Keys (DSN)**. Then, copy the string labeled **DSN** and set it as the value for `NEXT_PUBLIC_SENTRY_DSN` inside `.env.local`\n\n> **Note:** Error tracking is disabled in development mode using the `NODE_ENV` environment variable. To change this behavior, remove the `enabled` property from the `Sentry.init()` call inside your `utils/sentry.js` file.\n\n### Step 2. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour app should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 3. Automatic sourcemap upload (optional)\n\n#### Using Vercel\n\nYou will need to install and configure the [Sentry Vercel integration](https://docs.sentry.io/workflow/integrations/vercel). After you've completed the project linking step, all the needed environment variables will be set in your Vercel project, with the exception of `NEXT_PUBLIC_SENTRY_SERVER_ROOT_DIR`, which should be set to `/var/task/`.\n\n> **Note:** A Vercel project connected to a [Git integration](https://vercel.com/docs/platform/deployments#git) is required before adding the Sentry integration.\n\n#### Without Using Vercel\n\n1. Set up the `NEXT_PUBLIC_SENTRY_DSN` environment variable as described above.\n2. Save your Sentry organization slug as the `SENTRY_ORG` environment variable and your project slug as the `SENTRY_PROJECT` environment variable in `.env.local`.\n3. Save your git provider's commit SHA as `VERCEL_GIT_COMMIT_SHA` environment variable in `.env.local`.\n4. Create an auth token in Sentry. The recommended way to do this is by creating a new internal integration for your organization. To do so, go into **Settings > Developer Settings > New internal integration**. After the integration is created, copy the Token.\n5. Save the token inside the `SENTRY_AUTH_TOKEN` environment variable in `.env.local`.\n6. Set `NEXT_PUBLIC_SENTRY_SERVER_ROOT_DIR` to the absolute path of the folder the Next.js app is running from\n\n> **Note:** Sourcemap upload is disabled in development mode using the `NODE_ENV` environment variable. To change this behavior, remove the `NODE_ENV === 'production'` check from your `next.config.js` file.\n\n## Other configuration options\n\nMore configurations are available for the [Sentry webpack plugin](https://github.com/getsentry/sentry-webpack-plugin) using [Sentry Configuration variables](https://docs.sentry.io/cli/configuration/) for defining the releases/verbosity/etc.\n\n## Notes\n\n- By default, neither sourcemaps nor error tracking are enabled in development mode (see Configuration).\n- When enabled in development mode, error handling [works differently than in production](https://nextjs.org/docs/advanced-features/custom-error-page#customizing-the-error-page) as `_error.js` is never actually called.\n- The build output will contain warning about unhandled Promise rejections. This is caused by the test pages, and is expected. When deploying to Vercel, \"Client Error 1\" will actually be sent to Sentry during the build, while that test page is being statically rendered.\n- By default, source maps are uploaded to [sentry.io](https://sentry.io). If you're self-hosting Sentry, add `SENTRY_URL` to `.env` or `.env.locale` and set it to the base domain of your installation, which by default is `https://sentry.io/`.\n\n## Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-sentry&project-name=with-sentry&repository-name=with-sentry&env=NEXT_PUBLIC_SENTRY_DSN&envDescription=DSN%20Key%20required%20by%20Sentry&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-sentry%23step-1-enable-error-tracking)\n","contributors":[["Timer",6],["jesstelford",3],["chibicode",3],["timneutkens",3],["todortotev",3],["lfades",3],["leerob",3],["jthegedus",2],["vispaduchuri",2],["lucleray",2],["lardissone",1],["fouad",1],["mherodev",1],["Tomekmularczyk",1],["amytych",1],["Enalmada",1],["sethbergman",1],["sheerun",1],["j0lv3r4",1],["crutchcorn",1],["HeadFox",1],["dav-is",1],["mcsdevv",1],["bapjiws",1],["jrusso1020",1],["stefanprobst",1],["tanmaylaud",1],["Necmttn",1],["obedparla",1],["ceorourke",1],["scefali",1],["hokaccha",1],["tm1000",1],["weichienhung",1],["NorbertLuszkiewicz",1],["merceyz",1],["WestonThayer",1],["lucas-varela",1],["lharries",1],["caaatisgood",1],["cipriancaba",1]]},{"name":"with-sentry-simple","title":"This example has been moved to [examples/with-sentry](../with-sentry).","description":"","contributors":[["Timer",6],["timneutkens",4],["chibicode",3],["ijjk",3],["lfades",2],["todortotev",2],["leerob",1],["HaNdTriX",1],["chislee0708",1],["a14m",1],["leonclaus",1],["sambokai",1],["scefali",1],["its-tayo",1],["tanmaylaud",1]]},{"name":"with-service-worker","title":"Service Worker Example","description":"\nThis example shows how to add a simple service worker to a Next.js application. The service worker is in [`public/sw.js`](public/sw.js) and it's installed by [`pages/_app.js`](pages/_app.js) after the first render.\n\nThe example is based on the following blog post: [Adding a service worker into your Next.js application](https://dev.to/josedonato/adding-a-service-worker-into-your-next-js-application-1dib).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-service-worker&project-name=with-service-worker&repository-name=with-service-worker)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-service-worker with-service-worker-app\n# or\nyarn create next-app --example with-service-worker with-service-worker-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["jose-donato",1],["lucleray",1],["lfades",1]]},{"name":"with-shallow-routing","title":"Shallow Routing Example","description":"\nWith [Shallow Routing](https://nextjs.org/docs/routing/shallow-routing), we can change the URL without running data fetching methods (like `getStaticProps` and `getServerSideProps`) again.\n\nWe do this by passing the `shallow: true` option to `Router.push` or `Router.replace`.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-shallow-routing&project-name=with-shallow-routing&repository-name=with-shallow-routing)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-shallow-routing with-shallow-routing-app\n# or\nyarn create next-app --example with-shallow-routing with-shallow-routing-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["timneutkens",4],["chibicode",3],["lfades",3],["jthegedus",2],["lucleray",2],["arunoda",1],["paulmolluzzo",1],["aranajhonny",1],["HaNdTriX",1],["nghiepit",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["djanda97",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1]]},{"name":"with-sitemap","title":"With Sitemap example","description":"\nThis example shows how to generate a `sitemap.xml` file based on the pages in your [Next.js](https://nextjs.org/) app. The sitemap will be generated and saved in the `public` directory after starting the development server or by making a build.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-sitemap&project-name=with-sitemap&repository-name=with-sitemap)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-sitemap with-sitemap-app\n# or\nyarn create next-app --example with-sitemap with-sitemap-app\n```\n\nYour app should be up and running on [http://localhost:3000](http://localhost:3000) and the sitemap should now be available in [http://localhost:3000/sitemap.xml](http://localhost:3000/sitemap.xml)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\nTo change the website URL used by `sitemap.xml`, open the file `.env` and change the `WEBSITE_URL` environment variable:\n\n```bash\n# Used to add the domain to sitemap.xml, replace it with a real domain in production\nWEBSITE_URL=https://my-domain.com\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["khattakdev",1],["Timer",1],["NorbertLuszkiewicz",1],["ciruz",1],["lucleray",1],["lfades",1]]},{"name":"with-slate","title":"slate.js example","description":"\nThis example shows how to use Next.js along with [Slate.js](https://www.slatejs.org/).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-slate&project-name=with-slate&repository-name=with-slate)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example::\n\n```bash\nnpx create-next-app --example with-slate with-slate-app\n# or\nyarn create next-app --example with-slate with-slate-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["chibicode",3],["HaNdTriX",3],["lfades",3],["todortotev",2],["j0lv3r4",1],["aquiseb",1],["crutchcorn",1],["dav-is",1],["timneutkens",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-static-export","title":"Static export example","description":"\nThis example show how to export to static HTML files your Next.js application fetching data from an API to generate a dynamic list of pages.\n\nWhen trying to run `npm start` it will build and export your pages into the `out` folder and serve them on `localhost:5000`.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-static-export with-static-export-app\n# or\nyarn create next-app --example with-static-export with-static-export-app\n```\n","contributors":[["timneutkens",7],["Timer",6],["arunoda",2],["brikou",2],["jthegedus",2],["natkaratkova",2],["sergiodxa",1],["jmatsushita",1],["andykenward",1],["lquixada",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["lfades",1],["chibicode",1],["mottox2",1],["willianjusten",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["dennismorello",1]]},{"name":"with-stencil","title":"Stenciljs example","description":"\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-stencil&project-name=with-stencil&repository-name=with-stencil)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) or [npx](https://github.com/zkat/npx#readme) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-stencil with-stencil-app\n# or\nyarn create next-app --example with-stencil with-stencil-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n> Choose `packages/web-app` as root directory when deploying.\n\n## The idea behind the example\n\nStencil is a compiler that generates Web Components (more specifically, Custom Elements). Stencil combines the best concepts of the most popular frameworks into a simple build-time tool.\n\nIn this example we have two workspaces:\n\n- **web-app**: A Next.js app\n- **test-component**: A stencil components\n\n## Useful Links\n\n- [Documentation](https://stenciljs.com/docs/introduction)\n- [yarn workspaces](https://yarnpkg.com/lang/en/docs/cli/workspace)\n- [yarn workspace](https://yarnpkg.com/lang/en/docs/cli/workspaces)\n","contributors":[["chibicode",3],["Timer",3],["rohmanhm",1],["AndyBitz",1],["timneutkens",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1],["lfades",1]]},{"name":"with-stitches","title":"Stitches Example","description":"\nThis example shows how to use the [Stitches CSS-in-JS Library](https://github.com/modulz/stitches).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-stitches&project-name=with-stitches&repository-name=with-stitches)\n\n## How to use\n\nExecute [Create Next App](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-stitches with-stitches-app\n# or\nyarn create next-app --example with-stitches with-stitches-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["christianalfoni",5],["peduarte",5],["lfades",2],["todortotev",1],["tanmaylaud",1],["lucleray",1],["caaatisgood",1]]},{"name":"with-stomp","title":"Stomp example","description":"\nThis example show how to use [STOMP](https://stomp.github.io/) inside a Next.js application.\n\nSTOMP is a simple text-orientated messaging protocol. It defines an interoperable wire format so that any of the available STOMP clients can communicate with any STOMP message broker.\n\nRead more about [STOMP](http://jmesnil.net/stomp-websocket/doc/) protocol.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-stomp with-stomp-app\n# or\nyarn create next-app --example with-stomp with-stomp-app\n```\n\nYou'll need to provide the STOMP url of your server before running the app. Open [`.env`](.env) and update the `NEXT_PUBLIC_STOMP_SERVER` environment variable.\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["lfades",2],["alieslamifard",1],["chibicode",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["xom9ikk",1],["lucleray",1]]},{"name":"with-storybook","title":"Example app with Storybook","description":"\nThis example shows a default set up of Storybook. Also included in the example is a custom component included in both Storybook and the Next.js application.\n\n### TypeScript\n\nAs of v6.0, Storybook has built-in TypeScript support, so no configuration is needed. If you want to customize the default configuration, refer to the [TypeScript docs](https://storybook.js.org/docs/react/configure/typescript).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-storybook&project-name=with-storybook&repository-name=with-storybook)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-storybook with-storybook-app\n# or\nyarn create next-app --example with-storybook with-storybook-app\n```\n\n### Run Storybook\n\n```bash\nnpm run storybook\n# or\nyarn storybook\n```\n\n### Build Static Storybook\n\n```bash\nnpm run build-storybook\n# or\nyarn build-storybook\n```\n\nYou can use [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) to deploy Storybook. Specify `storybook-static` as the output directory.\n","contributors":[["Timer",5],["chibicode",3],["garmeeh",2],["timneutkens",2],["rafaelalmeidatk",2],["lfades",2],["mherodev",1],["j0lv3r4",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["zerbinidamata",1],["MrJmpl3",1],["justinphilpott",1],["lucleray",1]]},{"name":"with-storybook-styled-jsx-scss","title":"Example app with Storybook setup for SCSS in Styled-jsx","description":"\nThis example shows Styled-jsx (with SCSS) working for components written in TypeScript rendered both inside and outside of Storybook.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-storybook-styled-jsx-scss&project-name=with-storybook-styled-jsx-scss&repository-name=with-storybook-styled-jsx-scss)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-storybook-styled-jsx-scss with-storybook-styled-jsx-scss-app\n# or\nyarn create next-app --example with-storybook-styled-jsx-scss with-storybook-styled-jsx-scss-app\n```\n\n### Run Storybook\n\n```bash\nnpm run storybook\n# or\nyarn storybook\n```\n\n### Build Static Storybook\n\n```bash\nnpm run build-storybook\n# or\nyarn build-storybook\n```\n\nYou can use [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) to deploy Storybook. Specify `storybook-static` as the output directory.\n\n## Notes\n\nThis example combines the following examples, with some required extra config added:\n\n- [with-storybook](https://github.com/vercel/next.js/tree/canary/examples/with-storybook)\n- [with-styled-jsx-scss](https://github.com/vercel/next.js/tree/canary/examples/with-styled-jsx-scss)\n- [with-typescript](https://github.com/vercel/next.js/tree/canary/examples/with-typescript)\n","contributors":[["justinphilpott",1],["lucleray",1],["ludofischer",1],["lfades",1],["M1ck0",1]]},{"name":"with-strict-csp","title":"Example app with strict CSP generating script hash","description":"\nThis example features how you can set up a strict CSP for your pages including Next.js' inline bootstrap script by hash.\nIt defines the CSP by document `meta` tag.\n\nNote: There are still valid cases for using a nonce in case you need to inline scripts or styles for which calculating a hash is not feasible.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-strict-csp&project-name=with-strict-csp&repository-name=with-strict-csp)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-strict-csp with-strict-csp-app\n# or\nyarn create next-app --example with-strict-csp with-strict-csp-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["chibicode",3],["timneutkens",3],["lfades",2],["novascreen",1],["j0lv3r4",1],["dav-is",1],["ijjk",1],["darshkpatel",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["neighborhood999",1],["merceyz",1],["ciruz",1],["lucleray",1]]},{"name":"with-strict-csp-hash","title":"This example was moved to [with-strict-csp](https://github.com/vercel/next.js/tree/canary/examples/with-strict-csp)","description":"","contributors":[["Timer",4],["chibicode",3],["timneutkens",3],["lfades",2],["dbo",1],["j0lv3r4",1],["dav-is",1],["tanmaylaud",1]]},{"name":"with-stripe-typescript","title":"Example using Stripe with TypeScript and react-stripe-js","description":"\nThis is a full-stack TypeScript example using:\n\n- Frontend:\n  - Next.js and [SWR](https://github.com/zeit/swr)\n  - [react-stripe-js](https://github.com/stripe/react-stripe-js) for [Checkout](https://stripe.com/checkout) and [Elements](https://stripe.com/elements)\n- Backend\n  - Next.js [API routes](https://nextjs.org/docs/api-routes/introduction)\n  - [stripe-node with TypeScript](https://github.com/stripe/stripe-node#usage-with-typescript)\n\n## Demo\n\n- Live demo: https://nextjs-typescript-react-stripe-js.vercel.app/\n- CodeSandbox: https://codesandbox.io/s/github/stripe-samples/nextjs-typescript-react-stripe-js\n- Tutorial: https://dev.to/thorwebdev/type-safe-payments-with-next-js-typescript-and-stripe-4jo7\n\nThe demo is running in test mode -- use `4242424242424242` as a test card number with any CVC + future expiration date.\n\nUse the `4000000000003220` test card number to trigger a 3D Secure challenge flow.\n\nRead more about testing on Stripe at https://stripe.com/docs/testing.\n\n<details open><summary>Shopping Cart Checkout Demo</summary>\n<img src=\"./public/shopping_cart_demo.gif\" alt=\"A gif of the Shopping Cart Checkout payment page.\" align=\"center\">\n</details>\n\n<details><summary>Checkout Donations Demo</summary>\n<img src=\"./public/checkout_demo.gif\" alt=\"A gif of the Checkout payment page.\" align=\"center\">\n</details>\n\n<details><summary>Elements Donations Demo</summary>\n<img src=\"./public/elements_demo.gif\" alt=\"A gif of the custom Elements checkout page.\" align=\"center\">\n</details>\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#required-configuration) from the [Stripe Dashboard](https://dashboard.stripe.com/apikeys), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy to Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-stripe-typescript&project-name=with-stripe-typescript&repository-name=with-stripe-typescript&env=NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY,STRIPE_SECRET_KEY&envDescription=Enter%20your%20Stripe%20Keys&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-stripe-typescript%23required-configuration)\n\n## Included functionality\n\n- [Global CSS styles](https://nextjs.org/blog/next-9-2#built-in-css-support-for-global-stylesheets)\n- Implementation of a Layout component that loads and sets up Stripe.js and Elements for usage with SSR via `loadStripe` helper: [components/Layout.tsx](components/Layout.tsx).\n- Stripe Checkout\n  - Custom Amount Donation with redirect to Stripe Checkout:\n    - Frontend: [pages/donate-with-checkout.tsx](pages/donate-with-checkout.tsx)\n    - Backend: [pages/api/checkout_sessions/](pages/api/checkout_sessions/)\n    - Checkout payment result page that uses [SWR](https://github.com/zeit/swr) hooks to fetch the CheckoutSession status from the API route: [pages/result.tsx](pages/result.tsx).\n- Stripe Elements\n  - Custom Amount Donation with Stripe Elements & PaymentIntents (no redirect):\n    - Frontend: [pages/donate-with-elements.tsx](pages/donate-with-checkout.tsx)\n    - Backend: [pages/api/payment_intents/](pages/api/payment_intents/)\n- Webhook handling for [post-payment events](https://stripe.com/docs/payments/accept-a-payment#web-fulfillment)\n  - By default Next.js API routes are same-origin only. To allow Stripe webhook event requests to reach our API route, we need to add `micro-cors` and [verify the webhook signature](https://stripe.com/docs/webhooks/signatures) of the event. All of this happens in [pages/api/webhooks/index.ts](pages/api/webhooks/index.ts).\n- Helpers\n  - [utils/api-helpers.ts](utils/api-helpers.ts)\n    - helpers for GET and POST requests.\n  - [utils/stripe-helpers.ts](utils/stripe-helpers.ts)\n    - Format amount strings properly using `Intl.NumberFormat`.\n    - Format amount for usage with Stripe, including zero decimal currency detection.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-stripe-typescript with-stripe-typescript-app\n# or\nyarn create next-app --example with-stripe-typescript with-stripe-typescript-app\n```\n\n### Required configuration\n\nCopy the `.env.local.example` file into a file named `.env.local` in the root directory of this project:\n\n```bash\ncp .env.local.example .env.local\n```\n\nYou will need a Stripe account ([register](https://dashboard.stripe.com/register)) to run this sample. Go to the Stripe [developer dashboard](https://stripe.com/docs/development#api-keys) to find your API keys and replace them in the `.env.local` file.\n\n```bash\nNEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=<replace-with-your-publishable-key>\nSTRIPE_SECRET_KEY=<replace-with-your-secret-key>\n```\n\nNow install the dependencies and start the development server.\n\n```bash\nnpm install\nnpm run dev\n# or\nyarn\nyarn dev\n```\n\n### Forward webhooks to your local dev server\n\nFirst [install the CLI](https://stripe.com/docs/stripe-cli) and [link your Stripe account](https://stripe.com/docs/stripe-cli#link-account).\n\nNext, start the webhook forwarding:\n\n```bash\nstripe listen --forward-to localhost:3000/api/webhooks\n```\n\nThe CLI will print a webhook secret key to the console. Set `STRIPE_WEBHOOK_SECRET` to this value in your `.env.local` file.\n\n### Setting up a live webhook endpoint\n\nAfter deploying, copy the deployment URL with the webhook path (`https://your-url.vercel.app/api/webhooks`) and create a live webhook endpoint [in your Stripe dashboard](https://stripe.com/docs/webhooks/setup#configure-webhook-settings).\n\nOnce created, you can click to reveal your webhook's signing secret. Copy the webhook secret (`whsec_***`) and add it as a new environment variable in your [Vercel Dashboard](https://vercel.com/dashboard):\n\n- Select your newly created project.\n- Navigate to the Settings tab.\n- In the general settings scroll to the \"Environment Variables\" section.\n\nAfter adding an environment variable you will need to rebuild your project for it to become within your code. Within your project Dashboard, navigate to the \"Deployments\" tab, select the most recent deployment, click the overflow menu button (next to the \"Visit\" button) and select \"Redeploy\".\n\n### Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy to Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-stripe-typescript&project-name=with-stripe-typescript&repository-name=with-stripe-typescript&env=NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY,STRIPE_SECRET_KEY&envDescription=Enter%20your%20Stripe%20Keys&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-stripe-typescript%23required-configuration)\n\n## Authors\n\n- [@thorsten-stripe](https://twitter.com/thorwebdev)\n- [@lfades](https://twitter.com/luis_fades)\n","contributors":[["Timer",6],["thorsten-stripe",4],["chibicode",2],["darshkpatel",2],["lfades",1],["timneutkens",1],["ijjk",1],["todortotev",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["leerob",1]]},{"name":"with-styled-components","title":"Example app with styled-components","description":"\nThis example features how you use a different styling solution than [styled-jsx](https://github.com/zeit/styled-jsx) that also supports universal styles. That means we can serve the required styles for the first render within the HTML and then load the rest in the client. In this case we are using [styled-components](https://github.com/styled-components/styled-components).\n\nFor this purpose we are extending the `<Document />` and injecting the server side rendered styles into the `<head>`, and also adding the `babel-plugin-styled-components` (which is required for server side rendering). Additionally we set up a global [theme](https://www.styled-components.com/docs/advanced#theming) for styled-components using NextJS custom [`<App>`](https://nextjs.org/docs/advanced-features/custom-app) component.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-styled-components&project-name=with-styled-components&repository-name=with-styled-components)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-styled-components with-styled-components-app\n# or\nyarn create next-app --example with-styled-components with-styled-components-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n### Try it on CodeSandbox\n\n[Open this example on CodeSandbox](https://codesandbox.io/s/github/vercel/next.js/tree/canary/examples/with-styled-components)\n\n### Notes\n\nWhen wrapping a [Link](https://nextjs.org/docs/api-reference/next/link) from `next/link` within a styled-component, the [as](https://styled-components.com/docs/api#as-polymorphic-prop) prop provided by `styled` will collide with the Link's `as` prop and cause styled-components to throw an `Invalid tag` error. To avoid this, you can either use the recommended [forwardedAs](https://styled-components.com/docs/api#forwardedas-prop) prop from styled-components or use a different named prop to pass to a `styled` Link.\n\n<details>\n<summary>Click to expand workaround example</summary>\n<br />\n\n**components/StyledLink.js**\n\n```javascript\nimport Link from 'next/link'\nimport styled from 'styled-components'\n\nconst StyledLink = ({ as, children, className, href }) => (\n  <Link href={href} as={as} passHref>\n    <a className={className}>{children}</a>\n  </Link>\n)\n\nexport default styled(StyledLink)`\n  color: #0075e0;\n  text-decoration: none;\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    color: #40a9ff;\n  }\n\n  &:focus {\n    color: #40a9ff;\n    outline: none;\n    border: 0;\n  }\n`\n```\n\n**pages/index.js**\n\n```javascript\nimport StyledLink from '../components/StyledLink'\n\nexport default () => (\n  <StyledLink href=\"/post/[pid]\" forwardedAs=\"/post/abc\">\n    First post\n  </StyledLink>\n)\n```\n\n</details>\n","contributors":[["timneutkens",9],["nkzawa",6],["Timer",6],["chibicode",3],["lfades",3],["impronunciable",2],["Grokling",2],["jthegedus",2],["HaNdTriX",2],["mattcarlotta",2],["lucleray",2],["arunoda",1],["dhruska",1],["sedubois",1],["kristojorg",1],["sakulstra",1],["sergiodxa",1],["paulmolluzzo",1],["cdock1029",1],["stockulus",1],["shalzz",1],["wesbos",1],["fouad",1],["koss-lebedev",1],["dyun8080",1],["mherodev",1],["mxstbr",1],["vpicone",1],["rainstormza",1],["romellogoodman",1],["j0lv3r4",1],["ztanner",1],["lucasfeliciano",1],["elliottsj",1],["jesstelford",1],["crutchcorn",1],["dav-is",1],["Tomekmularczyk",1],["timReynolds",1],["mottox2",1],["teo-garcia",1],["ijjk",1],["stefanprobst",1],["tanmaylaud",1],["simnalamburt",1],["NorbertLuszkiewicz",1],["pkrawc",1],["ArthurMaverick",1]]},{"name":"with-styled-components-rtl","title":"Example with styled-components RTL","description":"\nThis example shows how to use nextjs with right to left (RTL) styles using styled-components.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-styled-components-rtl&project-name=with-styled-components-rtl&repository-name=with-styled-components-rtl)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-styled-components-rtl with-styled-components-rtl-app\n# or\nyarn create next-app --example with-styled-components-rtl with-styled-components-rtl-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Notes\n\nRight to left allows to \"flip\" every element in your site to fit the needs of the cultures that are read from right to left (like arabic for example).\n\nThis example shows how to enable right to left styles using `styled-components`.\n\nThe good news, is there is no need of doing it manually anymore. `stylis-plugin-rtl` makes the transformation automatic.\n\nFrom `pages/index.js` you can see, styles are `text-align: left;`, but what is actually applied is `text-align: right;`.\n","contributors":[["Timer",5],["chibicode",3],["aganglada",1],["timneutkens",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["neighborhood999",1],["merceyz",1],["lucleray",1],["lfades",1]]},{"name":"with-styled-jsx","title":"styled-jsx example","description":"\nNext.js ships with [styled-jsx](https://github.com/vercel/styled-jsx) allowing you to write scoped styled components with full CSS support. This is important for the modularity and code size of your bundles and also for the learning curve of the framework. If you know CSS you can write `styled-jsx` right away.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-styled-jsx&project-name=with-styled-jsx&repository-name=with-styled-jsx)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-styled-jsx with-styled-jsx-app\n# or\nyarn create next-app --example with-styled-jsx with-styled-jsx-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["lfades",2],["lucleray",1]]},{"name":"with-styled-jsx-plugins","title":"With styled-jsx plugins","description":"\nNext.js ships with [styled-jsx](https://github.com/zeit/styled-jsx) allowing you\nto write scope styled components with full css support. This is important for\nthe modularity and code size of your bundles and also for the learning curve of the framework. If you know css you can write styled-jsx right away.\n\nThis example shows how to configure styled-jsx to use external plugins to modify the output. Using this you can use PostCSS, SASS (SCSS), LESS, or any other pre-processor with styled-jsx. You can define plugins in `.babelrc`. In this case PostCSS was used as an example. PostCSS plugins are defined in `package.json`.\n\nMore details about how plugins work can be found in the [styled-jsx readme](https://github.com/zeit/styled-jsx#css-preprocessing-via-plugins)\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-styled-jsx-plugins&project-name=with-styled-jsx-plugins&repository-name=with-styled-jsx-plugins)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-styled-jsx-plugins with-styled-jsx-plugins-app\n# or\nyarn create next-app --example with-styled-jsx-plugins with-styled-jsx-plugins-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",5],["Timer",5],["chibicode",3],["lfades",3],["jthegedus",2],["connor-baer",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1],["lemarier",1]]},{"name":"with-styled-jsx-postcss","title":"This examples was moved to [https://github.com/vercel/next.js/tree/master/examples/with-styled-jsx-plugins](https://github.com/vercel/next.js/tree/master/examples/with-styled-jsx-plugins)","description":"","contributors":[["giuseppeg",2],["timneutkens",2],["sedubois",1],["sakulstra",1],["paulmolluzzo",1],["MFCo",1],["chibicode",1],["Timer",1],["tanmaylaud",1]]},{"name":"with-styled-jsx-scss","title":"With styled-jsx SASS / SCSS","description":"\nNext.js ships with [styled-jsx](https://github.com/zeit/styled-jsx) allowing you\nto write scope styled components with full css support. This is important for\nthe modularity and code size of your bundles and also for the learning curve of the framework. If you know css you can write styled-jsx right away.\n\nThis example shows how to configure styled-jsx to use external plugins to modify the output. Using this you can use PostCSS, SASS (SCSS), LESS, or any other pre-processor with styled-jsx. You can define plugins in `.babelrc`. This example shows how to implement the SASS plugin.\n\nMore details about how plugins work can be found in the [styled-jsx readme](https://github.com/zeit/styled-jsx#css-preprocessing-via-plugins)\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-styled-jsx-scss&project-name=with-styled-jsx-scss&repository-name=with-styled-jsx-scss)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-styled-jsx-scss with-styled-jsx-scss-app\n# or\nyarn create next-app --example with-styled-jsx-scss with-styled-jsx-scss-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["timneutkens",4],["chibicode",3],["lfades",3],["jthegedus",2],["JeromeFitz",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1],["ludofischer",1],["M1ck0",1]]},{"name":"with-styletron","title":"Example app with styletron","description":"\nThis example features how yo use a different styling solution than [styled-jsx](https://github.com/zeit/styled-jsx) that also supports universal styles. That means we can serve the required styles for the first render within the HTML and then load the rest in the client. In this case we are using [styletron](https://github.com/rtsao/styletron).\n\nFor this purpose we are extending the `<Document />` and injecting the server side rendered styles into the `<head>`.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-styletron&project-name=with-styletron&repository-name=with-styletron)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-styletron with-styletron-app\n# or\nyarn create next-app --example with-styletron with-styletron-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",6],["timneutkens",5],["chibicode",3],["lfades",3],["nkzawa",2],["jthegedus",2],["illogikal",2],["tajo",2],["lucleray",2],["skellyb",1],["sedubois",1],["sakulstra",1],["paulmolluzzo",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["todortotev",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["neighborhood999",1],["giraffesyo",1]]},{"name":"with-supabase-auth-realtime-db","title":"Example: [Supabase authentication](https://supabase.io/docs/guides/auth) client- and server-side (API routes), and SSR with auth cookie.","description":"\nThis example shows how to use Supabase auth on the client and server in both [API routes](https://nextjs.org/docs/api-routes/introduction) and when using [server side rendering (SSR)](https://nextjs.org/docs/basic-features/pages#server-side-rendering).\n\n## Deploy with Vercel\n\nThe Vercel deployment will guide you through creating a Supabase account and project. After installation of the Supabase integration, all relevant environment variables will be set up so that the project is usable immediately after deployment 🚀\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https%3A%2F%2Fgithub.com%2Fsupabase%2Fsupabase%2Ftree%2Fmaster%2Fexamples%2Fnextjs-with-supabase-auth&project-name=nextjs-with-supabase-auth&repository-name=nextjs-with-supabase-auth&integration-ids=oac_jUduyjQgOyzev1fjrW83NYOv)\n\n## Feedback and issues\n\nPlease file feedback and issues over on the [Supabase GitHub org](https://github.com/supabase/supabase/issues/new/choose).\n\n## More Supabase examples\n\n- [Next.js Subscription Payments Starter](https://github.com/vercel/nextjs-subscription-payments)\n- [Next.js Slack Clone](https://github.com/supabase/supabase/tree/master/examples/nextjs-slack-clone)\n- [Next.js Todo List](https://github.com/supabase/supabase/tree/master/examples/nextjs-todo-list)\n- [Next.js Live Tracker Map](https://github.com/supabase/supabase/tree/master/examples/nextjs-live-tracker-map)\n- [And many more...](https://github.com/supabase/supabase/tree/master/examples)\n","contributors":[["thorwebdev",2],["merceyz",1],["ykdojo",1],["lucleray",1],["ciruz",1]]},{"name":"with-supertokens","title":"SuperTokens Example","description":"\nThis is a simple set up for applications protected by SuperTokens.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-supertokens&project-name=with-supertokens&repository-name=with-supertokens)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-supertokens with-supertokens-app\n# or\nyarn create next-app --example with-supertokens with-supertokens-app\n```\n\n## Configuration\n\n- Create a `.env.local` file and copy the content of `.env.local.example` into it:\n\n  ```bash\n  cp .env.local.example .env.local\n  ```\n\n- Fill in the values for your social login secrets\n\n## Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n## Notes\n\nTake a look at [SuperTokens documentation](https://supertokens.io/docs/community/introduction).\n","contributors":[["rishabhpoddar",3],["kant01ne",1]]},{"name":"with-sw-precache","title":"We recommend using https://github.com/vercel/next.js/tree/canary/examples/with-next-offline","description":"","contributors":[["timneutkens",5],["chibicode",3],["jthegedus",2],["Timer",2],["chrisdwheatley",1],["arunoda",1],["HaNdTriX",1],["brikou",1],["fouad",1],["mherodev",1],["jmaguirrei",1],["j0lv3r4",1],["dav-is",1],["lfades",1],["tanmaylaud",1]]},{"name":"with-tailwindcss","title":"Next.js + Tailwind CSS Example","description":"\nThis example shows how to use [Tailwind CSS](https://tailwindcss.com/) (v2.1) with Next.js. It follows the steps outlined in the official [Tailwind docs](https://tailwindcss.com/docs/guides/nextjs).\n\nIt uses the new [`Just-in-Time Mode`](https://tailwindcss.com/docs/just-in-time-mode) for Tailwind CSS.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-tailwindcss&project-name=with-tailwindcss&repository-name=with-tailwindcss)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-tailwindcss with-tailwindcss-app\n# or\nyarn create next-app --example with-tailwindcss with-tailwindcss-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["timneutkens",9],["Timer",5],["taylorbryant",4],["lfades",4],["chibicode",3],["HaNdTriX",3],["jthegedus",2],["rvcas",1],["fouad",1],["mherodev",1],["notrab",1],["diit",1],["j0lv3r4",1],["friederbluemle",1],["dav-is",1],["xstevenyung",1],["msheakoski",1],["mcsdevv",1],["zackkrida",1],["gihrig",1],["sergiodxa",1],["zhe",1],["afzalsayed96",1],["PaulPCIO",1],["ijjk",1],["IamLizu",1],["tanmaylaud",1],["needcaffeine",1],["NorbertLuszkiewicz",1],["timfee",1],["yakovlevyuri",1],["awareness481",1],["lucleray",1],["giraffesyo",1],["ncarchedi",1],["dfelber",1],["leerob",1],["rafaellaurindo",1],["nblthree",1],["Mokshit06",1],["pranavp10",1]]},{"name":"with-tailwindcss-emotion","title":"Tailwind CSS with Emotion.js example","description":"\nThis is an example of how you can add [tailwind CSS](https://tailwindcss.com/) with [Emotion.js](https://emotion.sh/docs/introduction) in your web app. It takes inspiration from [examples/with-tailwindcss](https://github.com/vercel/next.js/blob/canary/examples/with-tailwindcss/README.md).\n\n`xwind` is used to add tailwind classes inside Emotion by injecting the tailwind CSS into the styled component. No need to use CSS files, autoprefix, minifier, etc. You will get the full benefits of Emotion.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-tailwindcss-emotion&project-name=with-tailwindcss-emotion&repository-name=with-tailwindcss-emotion)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-tailwindcss-emotion with-tailwindcss-emotion-app\n# or\nyarn create next-app --example with-tailwindcss-emotion with-tailwindcss-emotion-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Notes\n\nThe CSS classes generated by Emotion will include the tailwind styles but not the name of the classes. For example the following component:\n\n```jsx\nconst Header = styled.div(xw`font-mono text-sm text-gray-800`)\n```\n\nWill be transformed into:\n\n```css\n.css-25og8s-Header {\n  font-family: Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New',\n    monospace;\n  font-size: 0.875rem;\n  color: #2d3748;\n}\n```\n\n### Tailwind CSS config\n\nUse the following command when you add a tailwind plugin that adds to tailwind's base css:\n\n```bash\nnpm run build:base-css\n# or\nyarn run build:base-css\n```\n","contributors":[["chibicode",3],["Timer",3],["lfades",3],["Arthie",2],["heyfirst",1],["coktopus",1],["timneutkens",1],["ijjk",1],["tanmaylaud",1],["agstover",1],["NorbertLuszkiewicz",1],["lucleray",1],["hankandre",1],["santidalmasso",1],["styxlab",1]]},{"name":"with-tesfy","title":"Tesfy Example","description":"\n[Tesfy](https://tesfy.io/) allows you to create **unlimited** A/B Tests and Feature Flags for **free** using a [web app](https://app.tesfy.io/) or by your self.\n\nThis example shows how to integrate [react-tesfy](https://github.com/andresz1/react-tesfy) in Next.js.\n\nTo use Tesfy there are only two mandatory things needed. A `userId` and a configuration file known as `datafile`. In the `_app.js` you will notice that those are being get.\n\nThe `userId` must uniquely identify a user even if not logged in, for that reason a [uuid](https://en.wikipedia.org/wiki/Universally_unique_identifier) is created and stored in a cookie so the next time a page is requested a new `userId` won't be created, instead the cookie one will be used.\n\nThe `datafile` is just a `json` that defines the configuration of the experiments and features available. It must be fetched from Tesfy CDN or from your own servers at least everytime a request is performed, later on this configuration could also be fetched if wanted (e.g. during page transitions).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-tesfy&project-name=with-tesfy&repository-name=with-tesfy)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-tesfy with-tesfy-app\n# or\nyarn create next-app --example with-tesfy with-tesfy-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["andresz1",1],["tanmaylaud",1],["Necmttn",1],["NorbertLuszkiewicz",1],["Timer",1],["merceyz",1],["lucleray",1],["lfades",1]]},{"name":"with-three-js","title":"With Three js","description":"\nThis example uses:\n\n[`threejs`](https://threejs.org/): A lightweight, 3D library with a default WebGL renderer. The library also provides Canvas 2D, SVG and CSS3D renderers in the examples.\n[`react-three-fiber`](https://github.com/pmndrs/react-three-fiber): A React renderer for Threejs on the web and react-native.\n[`drei`](https://github.com/pmndrs/drei): A growing collection of useful helpers and abstractions for react-three-fiber.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-three-js&project-name=with-three-js&repository-name=with-three-js)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-three-js with-three-js-app\n# or\nyarn create next-app --example with-three-js with-three-js-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",3],["chibicode",2],["afsanefda",1],["timneutkens",1],["teo-garcia",1],["ijjk",1],["PascalPixel",1],["gsimone",1],["tanmaylaud",1],["martpie",1],["NorbertLuszkiewicz",1],["akd-io",1],["284km",1],["lucleray",1],["bhbs",1],["lfades",1],["getspooky",1],["laanayam333",1],["scottmacdonnell",1]]},{"name":"with-typescript","title":"TypeScript Next.js example","description":"\nThis is a really simple project that shows the usage of Next.js with TypeScript.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-typescript&project-name=with-typescript&repository-name=with-typescript)\n\n## How to use it?\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-typescript with-typescript-app\n# or\nyarn create next-app --example with-typescript with-typescript-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Notes\n\nThis example shows how to integrate the TypeScript type system into Next.js. Since TypeScript is supported out of the box with Next.js, all we have to do is to install TypeScript.\n\n```\nnpm install --save-dev typescript\n```\n\nTo enable TypeScript's features, we install the type declarations for React and Node.\n\n```\nnpm install --save-dev @types/react @types/react-dom @types/node\n```\n\nWhen we run `next dev` the next time, Next.js will start looking for any `.ts` or `.tsx` files in our project and builds it. It even automatically creates a `tsconfig.json` file for our project with the recommended settings.\n\nNext.js has built-in TypeScript declarations, so we'll get autocompletion for Next.js' modules straight away.\n\nA `type-check` script is also added to `package.json`, which runs TypeScript's `tsc` CLI in `noEmit` mode to run type-checking separately. You can then include this, for example, in your `test` scripts.\n","contributors":[["Timer",12],["resir014",8],["timneutkens",5],["huv1k",3],["chibicode",3],["lfades",3],["jthegedus",2],["todortotev",2],["lucleray",2],["giacomorebonato",1],["paulmolluzzo",1],["HaNdTriX",1],["saginadir",1],["banyan",1],["brikou",1],["fouad",1],["giuseppeg",1],["deptno",1],["kachkaev",1],["riddla",1],["yhirano55",1],["lukebarton",1],["vinpac",1],["jhartley218",1],["mherodev",1],["duncanleung",1],["antonmoiseev",1],["j0lv3r4",1],["pkellner",1],["calendee",1],["dav-is",1],["rakannimer",1],["lv-kit",1],["francismarcus",1],["shaswatsaxena",1],["noejon",1],["willianjusten",1],["guilhermedeandrade",1],["ijjk",1],["rafaelalmeidatk",1],["tanmaylaud",1],["merceyz",1],["awareness481",1],["NorbertLuszkiewicz",1],["donavon",1],["Kerumen",1]]},{"name":"with-typescript-eslint-jest","title":"NextJS Typescript Boilerplate","description":"\nBootstrap a developer-friendly NextJS app configured with:\n\n- [Typescript](https://www.typescriptlang.org/)\n- Linting with [ESLint](https://eslint.org/)\n- Formatting with [Prettier](https://prettier.io/)\n- Linting, typechecking and formatting on by default using [`husky`](https://github.com/typicode/husky) for commit hooks\n- Testing with [Jest](https://jestjs.io/) and [`react-testing-library`](https://testing-library.com/docs/react-testing-library/intro)\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-typescript-eslint-jest&project-name=with-typescript-eslint-jest&repository-name=with-typescript-eslint-jest)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-typescript-eslint-jest with-typescript-eslint-jest-app\n# or\nyarn create next-app --example with-typescript-eslint-jest with-typescript-eslint-jest-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["kaznak",3],["erikdstock",1],["Timer",1],["filipemarins",1],["goldins",1],["rolandmarg",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["piotrzarycki",1],["devinekadeni",1],["quinnturner",1],["lukyth",1],["lucleray",1],["lfades",1],["leerob",1],["rsipakov",1]]},{"name":"with-typescript-graphql","title":"TypeScript and GraphQL Example","description":"\nOne of the strengths of GraphQL is [enforcing data types on runtime](https://graphql.github.io/graphql-spec/June2018/#sec-Value-Completion). Further, TypeScript and [GraphQL Code Generator](https://graphql-code-generator.com/) (graphql-codegen) make it safer by typing data statically, so you can write truly type-protected code with rich IDE assists.\n\nThis template extends [Apollo Server and Client Example](https://github.com/vercel/next.js/tree/canary/examples/api-routes-apollo-server-and-client#readme) by rewriting in TypeScript and integrating [graphql-let](https://github.com/piglovesyou/graphql-let#readme), which runs [TypeScript React Apollo](https://graphql-code-generator.com/docs/plugins/typescript-react-apollo) in [graphql-codegen](https://github.com/dotansimha/graphql-code-generator#readme) under the hood. It enhances the typed GraphQL use as below:\n\n```tsx\nimport { useNewsQuery } from './news.graphql'\n\nconst News = () => {\n\t// Typed already️⚡️\n\tconst { data: { news } } = useNewsQuery()\n\n\treturn <div>{news.map(...)}</div>\n}\n```\n\nBy default `**/*.graphqls` is recognized as GraphQL schema and `**/*.graphql` as GraphQL documents. If you prefer the other extensions, make sure the settings of the webpack loader in `next.config.js` and `.graphql-let.yml` are consistent.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-typescript-graphql&project-name=with-typescript-graphql&repository-name=with-typescript-graphql)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-typescript-graphql with-typescript-graphql-app\n# or\nyarn create next-app --example with-typescript-graphql with-typescript-graphql-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["piglovesyou",5],["Timer",5],["chibicode",3],["lfades",2],["singingwolfboy",1],["kkobiela",1],["timneutkens",1],["cernockyd",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["quinnturner",1],["weichienhung",1],["lucleray",1],["sahilrajput03",1]]},{"name":"with-typescript-styled-components","title":"TypeScript & Styled Components Next.js example","description":"\nThis is a really simple project that show the usage of Next.js with TypeScript and Styled Components.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-typescript-styled-components&project-name=with-typescript-styled-components&repository-name=with-typescript-styled-components)\n\n## How to use it?\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-typescript-styled-components with-typescript-styled-components-app\n# or\nyarn create next-app --example with-typescript-styled-components with-typescript-styled-components-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## Notes\n\nThis is an amalgamation of the 2 existing examples:\n\n- [with-typescript](https://github.com/vercel/next.js/tree/canary/examples/with-typescript)\n- [with-styled-components](https://github.com/vercel/next.js/tree/canary/examples/with-styled-components)\n","contributors":[["Timer",7],["chibicode",3],["lfades",3],["huv1k",2],["mottox2",2],["timneutkens",2],["mikefrancis",1],["dav-is",1],["nguyenkhois",1],["mcsdevv",1],["dmytro-lymarenko",1],["ijjk",1],["tanmaylaud",1],["awareness481",1],["NorbertLuszkiewicz",1],["pocorschi",1],["lucleray",1],["caaatisgood",1]]},{"name":"with-typescript-types","title":"This example shows how to integrate the TypeScript type system into Next.js. Since TypeScript is supported out of the box with Next.js, all we have to do is to install TypeScript.","description":"\nThis example shows how to properly export and import typescript types without getting the\n\n```js\nAttempted import error: 'TypeA' is not exported from './package-1'.\n```\n\nerror as raised in [vercel/next.js#7882](https://github.com/vercel/next.js/issues/7882).\n\n## Useful links\n\n[Add import type and export type support to TypeScript](https://github.com/babel/babel/pull/11171)\n","contributors":[["todortotev",1],["tanmaylaud",1],["awareness481",1],["neighborhood999",1]]},{"name":"with-typestyle","title":"Example app with typestyle","description":"\nThis example features how you use a different styling solution than [styled-jsx](https://github.com/zeit/styled-jsx) that also supports universal styles. That means we can serve the required styles for the first render within the HTML and then load the rest in the client. In this case we are using [typestyle](https://github.com/typestyle/typestyle).\n\nFor this purpose we are extending the `<Document />` and injecting the server side rendered styles into the `<head>`. Refer to [with-typescript](https://github.com/vercel/next.js/tree/master/examples/with-typescript) to use this with typescript.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-typestyle&project-name=with-typestyle&repository-name=with-typestyle)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-typestyle with-typestyle-app\n# or\nyarn create next-app --example with-typestyle with-typestyle-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["chibicode",3],["lfades",3],["timneutkens",2],["lucleray",2],["sahalsajjad",1],["j0lv3r4",1],["dav-is",1],["teo-garcia",1],["ijjk",1],["tanmaylaud",1],["agstover",1],["NorbertLuszkiewicz",1],["neighborhood999",1]]},{"name":"with-universal-configuration-build-time","title":"Next.js automatically supports Environment Variable loading as of Next.js 9.4.","description":"You can [read more about it in the blog post](https://nextjs.org/blog/next-9-4#new-environment-variables-support).\n\nVisit [the documentation](https://nextjs.org/docs/basic-features/environment-variables) to learn how to use Environment Variables support in Next.js 9.4+ and the [Environment Variables Example](/examples/environment-variables) to see it on action.\n","contributors":[["Timer",5],["chibicode",3],["lfades",2],["toruticas",1],["j0lv3r4",1],["Ephem",1],["crutchcorn",1],["dav-is",1],["timneutkens",1],["ijjk",1],["tanmaylaud",1],["SarKurd",1]]},{"name":"with-universal-configuration-runtime","title":"Next.js automatically supports Environment Variable loading as of Next.js 9.4.","description":"You can [read more about it in the blog post](https://nextjs.org/blog/next-9-4#new-environment-variables-support).\n\nVisit [the documentation](https://nextjs.org/docs/basic-features/environment-variables) to learn how to use Environment Variables support in Next.js 9.4+ and the [Environment Variables Example](/examples/environment-variables) to see it on action.\n","contributors":[["timneutkens",8],["Timer",5],["chibicode",3],["lfades",3],["jthegedus",2],["fouad",1],["mherodev",1],["HaNdTriX",1],["IanMitchell",1],["j0lv3r4",1],["dav-is",1],["teo-garcia",1],["ijjk",1],["tanmaylaud",1]]},{"name":"with-unsplash","title":"Using Next.js with Unsplash API","description":"\nThis is an example of how [Unsplash](https://unsplash.com/) can be used with `Next.js`\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-2-set-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-unsplash&project-name=with-unsplash&repository-name=with-unsplash&env=UNSPLASH_ACCESS_KEY,UNSPLASH_USER&envDescription=Required%20to%20connect%20the%20app%20with%20Unsplash&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-unsplash%23step-2-set-up-environment-variables)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-unsplash with-unsplash-app\n# or\nyarn create next-app --example with-unsplash with-unsplash-app\n```\n\n## Configuration\n\nFirst, you'll need to [create an account on Unsplash](https://unsplash.com/) if you don't have one already. Once that's done, follow the steps below.\n\n### Step 1. Create an app on Unsplash\n\nTo create a new application on Unsplash, click [here](https://unsplash.com/oauth/applications/new) or go to https://unsplash.com/oauth/applications/new.\n\nBefore creating an app you'll have to accept the terms for API use:\n\n![Accept Unsplash app terms](./docs/app-terms.png)\n\nThen, fill the form with the app name and description, and click on on **Create application** to finish the creation of your app:\n\n![Form to fill app name and description](./docs/app-form.png)\n\n### Step 2. Set up environment variables\n\nAfter creating the app, you should be able to see the API keys in the settings page of your app:\n\n![API Keys of Unsplash app](./docs/api-keys.png)\n\nWe'll need those API keys to connect the example with your Unsplash app.\n\nFirst, copy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set each variable on `.env.local`:\n\n- `UNSPLASH_ACCESS_KEY` should be the **Access Key** of your Unsplash app\n- `UNSPLASH_USER` should be any valid Unsplash username. The example will use the photos of the user selected here.\n\n### Step 3. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour app should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 4. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-unsplash&project-name=with-unsplash&repository-name=with-unsplash&env=UNSPLASH_ACCESS_KEY,UNSPLASH_USER&envDescription=Required%20to%20connect%20the%20app%20with%20Unsplash&envLink=https://github.com/vercel/next.js/tree/canary/examples/with-unsplash%23step-2-set-up-environment-variables)\n","contributors":[["crashncrow",1],["NorbertLuszkiewicz",1],["lucleray",1],["leerob",1]]},{"name":"with-unstated","title":"Unstated example","description":"\nThis example shows how to integrate [Unstated Next](https://github.com/jamiebuilds/unstated-next) with Next.js.\n\nThere are two pages, `/` and `/about`, both render a counter and a timer, the state is saved for the current page and resetted when switching to a different page. To keep a shared state between pages you can add the state providers to `pages/_app.js` instead of using the page.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-unstated&project-name=with-unstated&repository-name=with-unstated)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-unstated with-unstated-app\n# or\nyarn create next-app --example with-unstated with-unstated-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",7],["lfades",4],["chibicode",3],["timneutkens",3],["tylim88",2],["bennygenel",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1]]},{"name":"with-urql","title":"Next.js and urql","description":"\nUse [urql](https://github.com/FormidableLabs/urql) with Next.js using SSG.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-urql&project-name=with-urql&repository-name=with-urql)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-urql with-urql-app\n# or\nyarn create next-app --example with-urql with-urql-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",2],["alejandronanez",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["lfades",1],["leerob",1]]},{"name":"with-userbase","title":"Userbase Example","description":"\nThis is an example of using [Userbase](https://userbase.com) in a Next.js project.\n\nDeployed Demo: [https://next-userbase.vercel.app](https://next-userbase.vercel.app)\n\n## Deploy your own\n\nOnce you have access to [the environment variables you'll need](#step-2-setting-up-environment-variables), deploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-userbase&project-name=with-userbase&repository-name=with-userbase&env=NEXT_PUBLIC_USERBASE_APP_ID&envDescription=The%20Userbase%20app%20ID,%20found%20in%20the%20Userbase%20dashboard&envLink=https://v1.userbase.com/)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-userbase next-userbase-app\n# or\nyarn create next-app --example with-userbase next-userbase-app\n```\n\n## Configuration\n\n### Step 1. Create an account on Userbase\n\nFirst, [create an account on Userbase](https://userbase.com).\n\nAfter creating an account, make note of your _App ID_ which you'll be needing later.\n\n### Step 2. Setting up environment variables\n\nCopy the `.env.local.example` file in this directory to `.env.local` (which will be ignored by Git):\n\n```bash\ncp .env.local.example .env.local\n```\n\nThen set the variable on `.env.local`:\n\n- `NEXT_PUBLIC_USERBASE_APP_ID` should be the _App ID_ from when you created your Userbase account.\n\nYour `.env.local` file should look like this:\n\n```bash\nNEXT_PUBLIC_USERBASE_APP_ID=...\n```\n\n### Step 3. Run Next.js in development mode\n\n```bash\nnpm install\nnpm run dev\n\n# or\n\nyarn install\nyarn dev\n```\n\nYour todo app should be up and running on [http://localhost:3000](http://localhost:3000)! If it doesn't work, post on [GitHub discussions](https://github.com/vercel/next.js/discussions).\n\n### Step 4. Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and [import to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example).\n\n**Important**: When you import your project on Vercel, make sure to click on **Environment Variables** and set them to match your `.env.local` file.\n\n#### Deploy from Our Template\n\nAlternatively, you can deploy using our template by clicking on the Deploy button below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-userbase&project-name=with-userbase&repository-name=with-userbase&env=NEXT_PUBLIC_USERBASE_APP_ID&envDescription=The%20Userbase%20app%20ID,%20found%20in%20the%20Userbase%20dashboard&envLink=https://v1.userbase.com/)\n","contributors":[["Timer",5],["plug-n-play",2],["lfades",2],["ijjk",1],["timothyis",1],["mcsdevv",1],["chibicode",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["leerob",1]]},{"name":"with-vercel-fetch","title":"@vercel/fetch example","description":"\nThis example shows how to use [`@vercel/fetch`](https://www.npmjs.com/package/@vercel/fetch) in a Next.js application.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-vercel-fetch&project-name=with-vercel-fetch&repository-name=with-vercel-fetch)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-vercel-fetch with-vercel-fetch-app\n# or\nyarn create next-app --example with-vercel-fetch with-vercel-fetch-app\n```\n","contributors":[["giraffesyo",1]]},{"name":"with-videojs","title":"video.js example","description":"\nThis example shows how to use Next.js along with [Video.js](https://videojs.com) including handling of default styles.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-videojs&project-name=with-videojs&repository-name=with-videojs)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example::\n\n```bash\nnpx create-next-app --example with-videojs with-videojs-app\n# or\nyarn create next-app --example with-videojs with-videojs-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",5],["timneutkens",4],["chibicode",3],["lfades",3],["todortotev",2],["mherodev",1],["j0lv3r4",1],["dav-is",1],["teo-garcia",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["xom9ikk",1],["lucleray",1]]},{"name":"with-web-worker","title":"WebWorker example","description":"\nThis example shows how to run code in WebWorkers by utilizing [webpack 5](https://nextjs.org/docs/messages/webpack5).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com/):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-web-worker&project-name=with-web-worker&repository-name=with-web-worker)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-web-worker with-web-worker-app\n# or\nyarn create next-app --example with-web-worker with-web-worker-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",2],["Prioe",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["lemarier",1]]},{"name":"with-webassembly","title":"WebAssembly example","description":"\nThis example shows how to import WebAssembly files (`.wasm`) and use them inside of a React component that is server rendered. So the WebAssembly code is executed on the server too. In the case of this example we're showing Rust compiled to WebAssembly.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-webassembly with-webassembly-app\n# or\nyarn create next-app --example with-webassembly with-webassembly-app\n```\n\nThis example uses Rust compiled to wasm, the wasm file is included in the example, but to compile your own Rust code you'll have to [install](https://www.rust-lang.org/learn/get-started) Rust.\n\nTo compile `src/add.rs` to `add.wasm` run:\n\n```bash\nnpm run build-rust\n# or\nyarn build-rust\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",7],["timneutkens",4],["chibicode",3],["lfades",3],["revolunet",1],["j0lv3r4",1],["HelloRusk",1],["dav-is",1],["huv1k",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["davidsonsns",1],["lucleray",1],["nickbabcock",1]]},{"name":"with-webpack-bundle-analyzer","title":"Webpack Bundle Analyzer example","description":"\nThis example have been moved here: [analyze-bundles](https://github.com/vercel/next.js/tree/canary/examples/analyze-bundles)\n","contributors":[["timneutkens",3],["arunoda",2],["jthegedus",2],["paulmolluzzo",1],["aranajhonny",1],["HaNdTriX",1],["ismamz",1],["fouad",1],["juancampa",1],["mherodev",1],["kylemh",1],["echoulen",1],["Timer",1],["tanmaylaud",1]]},{"name":"with-webpack-bundle-size-analyzer","title":"Webpack Bundle Size Analyzer","description":"\nThis example shows how to analyze the output bundles using [webpack-bundle-size-analyzer](https://www.npmjs.com/package/webpack-bundle-size-analyzer)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-webpack-bundle-size-analyzer with-webpack-bundle-size-analyzer-app\n# or\nyarn create next-app --example with-webpack-bundle-size-analyzer with-webpack-bundle-size-analyzer-app\n```\n\n## Notes\n\nTo analyze your webpack output, invoke the following command:\n\n```bash\nnpm run analyze\n# or\nyarn analyze\n```\n","contributors":[["Timer",6],["jthegedus",2],["timneutkens",2],["lfades",2],["ragingwind",1],["ismamz",1],["fouad",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["chibicode",1],["djanda97",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1]]},{"name":"with-why-did-you-render","title":"Why did you render","description":"\nThis is a simple example of how to use [why-did-you-render](https://github.com/welldone-software/why-did-you-render).\n\nThe header component will rerender despite the state staying the same.\n\nYou can see `why-did-you-render` console logs about this redundant re-render in the developer console.\n\n## Installation guide\n\n1. add `why-did-you-render` to the project by running:\n\n   ```\n   yarn add @welldone-software/why-did-you-render\n   ```\n\n1. Create `scripts/wdyr.js` with the code:\n\n   ```jsx\n   import React from 'react'\n\n   if (process.env.NODE_ENV === 'development') {\n     if (typeof window !== 'undefined') {\n       const whyDidYouRender = require('@welldone-software/why-did-you-render')\n       whyDidYouRender(React, {\n         trackAllPureComponents: true,\n       })\n     }\n   }\n   ```\n\n1. Import `scripts/wdyr.js` as the first import of `_app`.\n\n1. Make sure that [`react-preset`](https://babeljs.io/docs/en/babel-preset-react) uses `@welldone-software/why-did-you-render` to import the monkey patched `React` with WDYR, by modifying `next/babel` in `babel.config.js`:\n\n```jsx\n// babel.config.js\nmodule.exports = function (api) {\n  const isServer = api.caller((caller) => caller?.isServer)\n  const isCallerDevelopment = api.caller((caller) => caller?.isDev)\n\n  const presets = [\n    [\n      'next/babel',\n      {\n        'preset-react': {\n          importSource:\n            !isServer && isCallerDevelopment\n              ? '@welldone-software/why-did-you-render'\n              : 'react',\n        },\n      },\n    ],\n  ]\n\n  return { presets }\n}\n```\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-why-did-you-render&project-name=with-why-did-you-render&repository-name=with-why-did-you-render)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-why-did-you-render with-why-did-you-render-app\n# or\nyarn create next-app --example with-why-did-you-render with-why-did-you-render-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?filter=next.js&utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["Timer",3],["timneutkens",2],["vzaidman",2],["teo-garcia",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["lucleray",1],["lfades",1]]},{"name":"with-xstate","title":"XState example","description":"\nThis example shows how to integrate XState in Next.js. For more info about XState you can visit [here](https://xstate.js.org/).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-xstate&project-name=with-xstate&repository-name=with-xstate)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-xstate with-xstate-app\n# or\nyarn create next-app --example with-xstate with-xstate-app\n```\n\n### Inspect your machines using `@xstate/inspect`\n\nYou could use the inspection tools for XState: ([`@xstate/inspect`](https://xstate.js.org/docs/packages/xstate-inspect)) to debug and visualize your machines in development mode.\n\n#### Install @xstate/inspect\n\n```bash\nnpm install @xstate/inspect\n# or\nyarn add @xstate/inspect\n```\n\n#### Import it at the top of the project\n\n```js\nimport { inspect } from '@xstate/inspect'\n```\n\n#### Use the inspect method\n\nNote that for Next.js projects, you should ensure that the inspector code only runs on the client, rather than the server:\n\n```js\nif (typeof window !== 'undefined') {\n  inspect({\n    /* options */\n  })\n}\n```\n\n### Deploy to Now\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n## References\n\n- [xstate](https://github.com/davidkpiano/xstate) repository\n- [@xstate/react](https://xstate.js.org/docs/packages/xstate-react) documentation\n- [@xstate/inspect](https://xstate.js.org/docs/packages/xstate-inspect/#faqs) usage with Next.JS\n","contributors":[["Timer",5],["chibicode",2],["rohmanhm",1],["djanda97",1],["timneutkens",1],["teo-garcia",1],["ijjk",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["lucleray",1],["lfades",1],["moh12594",1]]},{"name":"with-yarn-workspaces","title":"Yarn workspaces example","description":"\nWorkspaces are a new way to setup your package architecture that’s available by default starting from Yarn 1.0. It allows you to setup multiple packages in such a way that you only need to run yarn install once to install all of them in a single pass.\n\nIn this example we have three workspaces:\n\n- **web-app**: A Next.js app\n- **foo**: A normal node module\n- **bar**: A react component, that gets compiled by Next.js (see [packages/web-app/next.config.js](./packages/web-app/next.config.js) for more info)\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-yarn-workspaces&project-name=with-yarn-workspaces&repository-name=with-yarn-workspaces)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-yarn-workspaces with-yarn-workspaces-app\n# or\nyarn create next-app --example with-yarn-workspaces with-yarn-workspaces-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n> Choose `packages/web-app` as root directory when deploying.\n\n## Useful Links\n\n- [Documentation](https://yarnpkg.com/en/docs/workspaces)\n- [yarn workspace](https://yarnpkg.com/lang/en/docs/cli/workspace)\n- [yarn workspaces](https://yarnpkg.com/lang/en/docs/cli/workspaces)\n- [next-transpile-modules](https://www.npmjs.com/package/next-transpile-modules)\n","contributors":[["Timer",5],["chibicode",3],["timneutkens",3],["lfades",3],["huv1k",2],["vvo",2],["martpie",2],["HaNdTriX",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["AndyBitz",1],["Prioe",1],["teo-garcia",1],["ijjk",1],["timothyis",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["merceyz",1],["borekb",1],["paulogdm",1],["lucleray",1],["Ymirke",1]]},{"name":"with-zones","title":"Using multiple zones","description":"\nWith Next.js you can use multiple apps as a single app using its [multi-zones feature](https://nextjs.org/docs/advanced-features/multi-zones). This is an example showing how to use it.\n\n- All pages should be unique across zones. For example, the `home` app should not have a `pages/blog/index.js` page.\n- The `home` app is the main app and therefore it includes the rewrites that map to the `blog` app in [next.config.js](home/next.config.js)\n- The `blog` app sets [`basePath`](https://nextjs.org/docs/api-reference/next.config.js/basepath) to `/blog` so that generated pages, Next.js assets and public assets are within the `/blog` subfolder.\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-zones with-zones-app\n# or\nyarn create next-app --example with-zones with-zones-app\n```\n\nWith multi zones you have multiple Next.js apps over a single app, therefore every app has its own dependencies and it runs independently.\n\nTo start the `/home` run the following commands from the root directory:\n\n```bash\ncd home\nnpm install && npm run dev\n# or\ncd home\nyarn && yarn dev\n```\n\nThe `/home` app should be up and running in [http://localhost:3000](http://localhost:3000)!\n\nStarting the `/blog` app follows a very similar process. In a new terminal, run the following commands from the root directory :\n\n```bash\ncd blog\nnpm install && npm run dev\n# or\ncd blog\nyarn && yarn dev\n```\n\nThe `blog` app should be up and running in [http://localhost:4000](http://localhost:4000)!\n\n### Deploy on Vercel\n\nYou can deploy this app to the cloud with [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n\n#### Deploy Your Local Project\n\nTo deploy the apps to Vercel, we'll use [monorepos support](https://vercel.com/blog/monorepos) to create a new project for each app.\n\nTo get started, push the example to GitHub/GitLab/Bitbucket and [import your repo to Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example). We're not interested in the root directory, so make sure to select the `blog` directory (do not start with `home`):\n\n![Import flow for blog app](docs/import-blog.jpg)\n\nClick continue and finish the import process. After that's done copy the domain URL that was assigned to your project, paste it on `home/.env`, and push the change to your repo:\n\n```bash\n# Replace this URL with the URL of your blog app\nBLOG_URL=\"https://with-zones-blog.vercel.app\"\n```\n\nNow we'll go over the [import flow](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) again using the same repo but this time select the `home` directory instead:\n\n![Import flow for home app](docs/import-home.jpg)\n\nWith the `home` app deployed you should now be able to see both apps running under the same domain!\n\nAny future commits to the repo will trigger a deployment to the connected Vercel projects. See the [blog post about monorepos](https://vercel.com/blog/monorepos) to learn more.\n","contributors":[["lfades",8],["timneutkens",7],["Timer",6],["jthegedus",2],["borekb",2],["AndyBitz",2],["chibicode",2],["ijjk",2],["tomaswitek",1],["oliviertassinari",1],["dlcoffee",1],["mherodev",1],["j0lv3r4",1],["dav-is",1],["mcsdevv",1],["huv1k",1],["timothyis",1],["stefanprobst",1],["jamesmosier",1],["tanmaylaud",1],["NorbertLuszkiewicz",1],["gsimone",1],["merceyz",1],["lucleray",1],["samsisle",1]]},{"name":"with-zustand","title":"Zustand example","description":"\nThis example shows how to integrate Zustand in Next.js.\n\nUsually splitting your app state into `pages` feels natural but sometimes you'll want to have global state for your app. This is an example on how you can use Zustand that also works with Next.js's universal rendering approach.\n\nIn the first example we are going to display a digital clock that updates every second. The first render is happening in the server and then the browser will take over. To illustrate this, the server rendered clock will have a different background color (black) than the client one (grey).\n\nTo illustrate SSG and SSR, go to `/ssg` and `/ssr`, those pages are using Next.js data fetching methods to get the date in the server and return it as props to the page, and then the browser will hydrate the store and continue updating the date.\n\nThe trick here for supporting universal Zustand is to separate the cases for the client and the server. When we are on the server we want to create a new store every time, otherwise different users data will be mixed up. If we are in the client we want to use always the same store. That's what we accomplish on `store.js`.\n\nAll components have access to the Zustand store using `useStore`.\n\nOn the server side every request initializes a new store, because otherwise different user data can be mixed up. On the client side the same store is used, even between page changes.\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-zustand&project-name=with-zustand&repository-name=with-zustand)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init) or [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-zustand with-zustand-app\n# or\nyarn create next-app --example with-zustand with-zustand-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n","contributors":[["callumbooth",1],["DaneTheory",1],["lucleray",1],["lfades",1]]}]